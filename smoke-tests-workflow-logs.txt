smoke-tests	Set up job	﻿2025-08-19T18:21:29.0240425Z Current runner version: '2.327.1'
smoke-tests	Set up job	2025-08-19T18:21:29.0289431Z ##[group]Runner Image Provisioner
smoke-tests	Set up job	2025-08-19T18:21:29.0290753Z Hosted Compute Agent
smoke-tests	Set up job	2025-08-19T18:21:29.0291763Z Version: 20250818.377
smoke-tests	Set up job	2025-08-19T18:21:29.0292694Z Commit: 3c593e9f75fe0b87e893bca80d6e12ba089c61fc
smoke-tests	Set up job	2025-08-19T18:21:29.0294004Z Build Date: 2025-08-18T14:52:18Z
smoke-tests	Set up job	2025-08-19T18:21:29.0294997Z ##[endgroup]
smoke-tests	Set up job	2025-08-19T18:21:29.0295959Z ##[group]Operating System
smoke-tests	Set up job	2025-08-19T18:21:29.0296992Z Ubuntu
smoke-tests	Set up job	2025-08-19T18:21:29.0297964Z 24.04.2
smoke-tests	Set up job	2025-08-19T18:21:29.0298743Z LTS
smoke-tests	Set up job	2025-08-19T18:21:29.0299509Z ##[endgroup]
smoke-tests	Set up job	2025-08-19T18:21:29.0300342Z ##[group]Runner Image
smoke-tests	Set up job	2025-08-19T18:21:29.0301222Z Image: ubuntu-24.04
smoke-tests	Set up job	2025-08-19T18:21:29.0302144Z Version: 20250810.1.0
smoke-tests	Set up job	2025-08-19T18:21:29.0303924Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250810.1/images/ubuntu/Ubuntu2404-Readme.md
smoke-tests	Set up job	2025-08-19T18:21:29.0306454Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250810.1
smoke-tests	Set up job	2025-08-19T18:21:29.0308788Z ##[endgroup]
smoke-tests	Set up job	2025-08-19T18:21:29.0310648Z ##[group]GITHUB_TOKEN Permissions
smoke-tests	Set up job	2025-08-19T18:21:29.0313286Z Contents: read
smoke-tests	Set up job	2025-08-19T18:21:29.0314128Z Metadata: read
smoke-tests	Set up job	2025-08-19T18:21:29.0314883Z Packages: read
smoke-tests	Set up job	2025-08-19T18:21:29.0315731Z ##[endgroup]
smoke-tests	Set up job	2025-08-19T18:21:29.0318779Z Secret source: Actions
smoke-tests	Set up job	2025-08-19T18:21:29.0319817Z Prepare workflow directory
smoke-tests	Set up job	2025-08-19T18:21:29.1150014Z Prepare all required actions
smoke-tests	Set up job	2025-08-19T18:21:29.1247039Z Getting action download info
smoke-tests	Set up job	2025-08-19T18:21:29.5619325Z Download action repository 'actions/checkout@v5' (SHA:08c6903cd8c0fde910a37f88322edcfb5dd907a8)
smoke-tests	Set up job	2025-08-19T18:21:30.1372836Z Download action repository 'actions/setup-python@v4' (SHA:7f4fc3e22c37d6ff65e88745f38bd3157c663f7c)
smoke-tests	Set up job	2025-08-19T18:21:30.7591830Z Complete job name: smoke-tests
smoke-tests	Checkout iflow repository	﻿2025-08-19T18:21:30.8573587Z ##[group]Run actions/checkout@v5
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.8574929Z with:
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.8575710Z   repository: iflow-dev/iflow
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.8576955Z   token: ***
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.8577885Z   ssh-strict: true
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.8578719Z   ssh-user: git
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.8579526Z   persist-credentials: true
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.8580430Z   clean: true
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.8581233Z   sparse-checkout-cone-mode: true
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.8582226Z   fetch-depth: 1
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.8582999Z   fetch-tags: false
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.8583803Z   show-progress: true
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.8584614Z   lfs: false
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.8585371Z   submodules: false
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.8586192Z   set-safe-directory: true
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.8587329Z ##[endgroup]
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.9706243Z Syncing repository: iflow-dev/iflow
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.9708999Z ##[group]Getting Git version info
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.9710284Z Working directory is '/home/runner/work/iflow/iflow'
smoke-tests	Checkout iflow repository	2025-08-19T18:21:30.9844375Z [command]/usr/bin/git version
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8406644Z git version 2.50.1
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8426969Z ##[endgroup]
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8431921Z Temporarily overriding HOME='/home/runner/work/_temp/645943b9-2d1a-4cd7-8512-7c5c7c6cb6ac' before making global git config changes
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8433110Z Adding repository directory to the temporary git global config as a safe directory
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8434121Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/iflow/iflow
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8436596Z Deleting the contents of '/home/runner/work/iflow/iflow'
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8437624Z ##[group]Initializing the repository
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8438618Z [command]/usr/bin/git init /home/runner/work/iflow/iflow
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8439524Z hint: Using 'master' as the name for the initial branch. This default branch name
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8440442Z hint: is subject to change. To configure the initial branch name to use in all
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8441314Z hint: of your new repositories, which will suppress this warning, call:
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8441995Z hint:
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8442970Z hint: 	git config --global init.defaultBranch <name>
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8443591Z hint:
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8444548Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8445454Z hint: 'development'. The just-created branch can be renamed via this command:
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8446177Z hint:
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8447004Z hint: 	git branch -m <name>
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8447994Z hint:
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8449219Z hint: Disable this message with "git config set advice.defaultBranchName false"
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8450134Z Initialized empty Git repository in /home/runner/work/iflow/iflow/.git/
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8452900Z [command]/usr/bin/git remote add origin https://github.com/iflow-dev/iflow
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8455517Z ##[endgroup]
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8456344Z ##[group]Disabling automatic garbage collection
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8457007Z [command]/usr/bin/git config --local gc.auto 0
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8459224Z ##[endgroup]
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8460349Z ##[group]Setting up auth
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8461397Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.8464340Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.9262390Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.9287988Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.9525298Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.9694765Z ##[endgroup]
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.9696910Z ##[group]Fetching the repository
smoke-tests	Checkout iflow repository	2025-08-19T18:21:31.9719902Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +ebfb6b800dfd5cd39804e52ee0f8b3256dabe781:refs/remotes/pull/15/merge
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.7761421Z From https://github.com/iflow-dev/iflow
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.7762948Z  * [new ref]         ebfb6b800dfd5cd39804e52ee0f8b3256dabe781 -> pull/15/merge
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.7799319Z ##[endgroup]
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.7800144Z ##[group]Determining the checkout info
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.7804502Z ##[endgroup]
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.7814319Z [command]/usr/bin/git sparse-checkout disable
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.7869180Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.7902407Z ##[group]Checking out the ref
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.7909676Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/15/merge
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.7984412Z Note: switching to 'refs/remotes/pull/15/merge'.
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.7992423Z 
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.7993007Z You are in 'detached HEAD' state. You can look around, make experimental
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.7994322Z changes and commit them, and you can discard any commits you make in this
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.7999113Z state without impacting any branches by switching back to a branch.
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.7999601Z 
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.7999915Z If you want to create a new branch to retain commits you create, you may
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.8000616Z do so (now or later) by using -c with the switch command. Example:
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.8001024Z 
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.8001206Z   git switch -c <new-branch-name>
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.8001490Z 
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.8001647Z Or undo this operation with:
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.8001886Z 
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.8002030Z   git switch -
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.8002255Z 
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.8002587Z Turn off this advice by setting config variable advice.detachedHead to false
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.8003083Z 
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.8003640Z HEAD is now at ebfb6b8 Merge 2f2ab01539ff8d5dc82aa5e9ebd3d53c5f7669fc into 0b5b66a6add459533112c471188c72dab7b3df22
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.8023851Z ##[endgroup]
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.8081259Z [command]/usr/bin/git log -1 --format=%H
smoke-tests	Checkout iflow repository	2025-08-19T18:21:32.8106636Z ebfb6b800dfd5cd39804e52ee0f8b3256dabe781
smoke-tests	Set up Python	﻿2025-08-19T18:21:32.8333311Z ##[group]Run actions/setup-python@v4
smoke-tests	Set up Python	2025-08-19T18:21:32.8333690Z with:
smoke-tests	Set up Python	2025-08-19T18:21:32.8334025Z   python-version: 3.11
smoke-tests	Set up Python	2025-08-19T18:21:32.8334300Z   check-latest: false
smoke-tests	Set up Python	2025-08-19T18:21:32.8334706Z   token: ***
smoke-tests	Set up Python	2025-08-19T18:21:32.8335045Z   update-environment: true
smoke-tests	Set up Python	2025-08-19T18:21:32.8335327Z   allow-prereleases: false
smoke-tests	Set up Python	2025-08-19T18:21:32.8335691Z ##[endgroup]
smoke-tests	Set up Python	2025-08-19T18:21:33.0038501Z ##[group]Installed versions
smoke-tests	Set up Python	2025-08-19T18:21:33.0195899Z Successfully set up CPython (3.11.13)
smoke-tests	Set up Python	2025-08-19T18:21:33.0204394Z ##[endgroup]
smoke-tests	Install system dependencies	﻿2025-08-19T18:21:33.0335808Z ##[group]Run sudo apt-get update
smoke-tests	Install system dependencies	2025-08-19T18:21:33.0336340Z [36;1msudo apt-get update[0m
smoke-tests	Install system dependencies	2025-08-19T18:21:33.0336682Z [36;1msudo apt-get install -y git wget unzip curl[0m
smoke-tests	Install system dependencies	2025-08-19T18:21:33.0676890Z shell: /usr/bin/bash -e {0}
smoke-tests	Install system dependencies	2025-08-19T18:21:33.0677340Z env:
smoke-tests	Install system dependencies	2025-08-19T18:21:33.0678066Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install system dependencies	2025-08-19T18:21:33.0678745Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
smoke-tests	Install system dependencies	2025-08-19T18:21:33.0679409Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install system dependencies	2025-08-19T18:21:33.0679946Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install system dependencies	2025-08-19T18:21:33.0680612Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install system dependencies	2025-08-19T18:21:33.0681165Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
smoke-tests	Install system dependencies	2025-08-19T18:21:33.0681689Z ##[endgroup]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.1922689Z Get:1 file:/etc/apt/apt-mirrors.txt Mirrorlist [144 B]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.2878956Z Hit:2 http://azure.archive.ubuntu.com/ubuntu noble InRelease
smoke-tests	Install system dependencies	2025-08-19T18:21:33.2918860Z Get:3 http://azure.archive.ubuntu.com/ubuntu noble-updates InRelease [126 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.3059797Z Get:4 http://azure.archive.ubuntu.com/ubuntu noble-backports InRelease [126 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.3190627Z Get:5 http://azure.archive.ubuntu.com/ubuntu noble-security InRelease [126 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.3221956Z Hit:6 https://packages.microsoft.com/repos/azure-cli noble InRelease
smoke-tests	Install system dependencies	2025-08-19T18:21:33.3717192Z Get:7 https://packages.microsoft.com/ubuntu/24.04/prod noble InRelease [3600 B]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.4458851Z Get:8 http://azure.archive.ubuntu.com/ubuntu noble-updates/main amd64 Packages [1337 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.4809515Z Get:9 http://azure.archive.ubuntu.com/ubuntu noble-updates/main Translation-en [267 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.4810622Z Get:10 http://azure.archive.ubuntu.com/ubuntu noble-updates/main amd64 Components [175 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.4811638Z Get:11 http://azure.archive.ubuntu.com/ubuntu noble-updates/universe amd64 Packages [1122 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.4934175Z Get:12 http://azure.archive.ubuntu.com/ubuntu noble-updates/universe Translation-en [288 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.4994547Z Get:13 http://azure.archive.ubuntu.com/ubuntu noble-updates/universe amd64 Components [377 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.5030144Z Get:14 http://azure.archive.ubuntu.com/ubuntu noble-updates/restricted amd64 Packages [1700 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.5264535Z Get:15 http://azure.archive.ubuntu.com/ubuntu noble-updates/restricted Translation-en [375 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.5314545Z Get:16 http://azure.archive.ubuntu.com/ubuntu noble-updates/restricted amd64 Components [212 B]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.5342085Z Get:17 http://azure.archive.ubuntu.com/ubuntu noble-updates/multiverse amd64 Components [940 B]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.6288383Z Get:18 http://azure.archive.ubuntu.com/ubuntu noble-backports/main amd64 Components [7088 B]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.6290002Z Get:19 http://azure.archive.ubuntu.com/ubuntu noble-backports/universe amd64 Packages [30.2 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.6291885Z Get:20 http://azure.archive.ubuntu.com/ubuntu noble-backports/universe Translation-en [17.4 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.6293447Z Get:21 http://azure.archive.ubuntu.com/ubuntu noble-backports/universe amd64 Components [19.2 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.6295053Z Get:22 http://azure.archive.ubuntu.com/ubuntu noble-backports/restricted amd64 Components [216 B]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.6298094Z Get:23 http://azure.archive.ubuntu.com/ubuntu noble-backports/multiverse amd64 Components [212 B]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.7263449Z Get:24 http://azure.archive.ubuntu.com/ubuntu noble-security/main amd64 Packages [1075 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.7394924Z Get:25 http://azure.archive.ubuntu.com/ubuntu noble-security/main Translation-en [186 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.7421008Z Get:26 http://azure.archive.ubuntu.com/ubuntu noble-security/main amd64 Components [21.6 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.7438537Z Get:27 http://azure.archive.ubuntu.com/ubuntu noble-security/universe amd64 Packages [879 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.7575751Z Get:28 http://azure.archive.ubuntu.com/ubuntu noble-security/universe Translation-en [195 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.7609490Z Get:29 http://azure.archive.ubuntu.com/ubuntu noble-security/universe amd64 Components [52.3 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.7648469Z Get:30 http://azure.archive.ubuntu.com/ubuntu noble-security/restricted amd64 Packages [1610 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.7799505Z Get:31 http://azure.archive.ubuntu.com/ubuntu noble-security/restricted Translation-en [357 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.8264424Z Get:32 http://azure.archive.ubuntu.com/ubuntu noble-security/restricted amd64 Components [212 B]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.8270821Z Get:33 http://azure.archive.ubuntu.com/ubuntu noble-security/multiverse amd64 Components [212 B]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.8573415Z Get:34 https://packages.microsoft.com/ubuntu/24.04/prod noble/main amd64 Packages [47.9 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:33.8738587Z Get:35 https://packages.microsoft.com/ubuntu/24.04/prod noble/main arm64 Packages [33.1 kB]
smoke-tests	Install system dependencies	2025-08-19T18:21:38.1527359Z Fetched 10.6 MB in 2s (6331 kB/s)
smoke-tests	Install system dependencies	2025-08-19T18:21:38.8396682Z Reading package lists...
smoke-tests	Install system dependencies	2025-08-19T18:21:38.8723735Z Reading package lists...
smoke-tests	Install system dependencies	2025-08-19T18:21:39.0413349Z Building dependency tree...
smoke-tests	Install system dependencies	2025-08-19T18:21:39.0422095Z Reading state information...
smoke-tests	Install system dependencies	2025-08-19T18:21:39.2269174Z git is already the newest version (1:2.50.1-0ppa1~ubuntu24.04.1).
smoke-tests	Install system dependencies	2025-08-19T18:21:39.2273196Z git set to manually installed.
smoke-tests	Install system dependencies	2025-08-19T18:21:39.2276854Z wget is already the newest version (1.21.4-1ubuntu4.1).
smoke-tests	Install system dependencies	2025-08-19T18:21:39.2277853Z unzip is already the newest version (6.0-28ubuntu4.1).
smoke-tests	Install system dependencies	2025-08-19T18:21:39.2280208Z curl is already the newest version (8.5.0-2ubuntu10.6).
smoke-tests	Install system dependencies	2025-08-19T18:21:39.2282716Z 0 upgraded, 0 newly installed, 0 to remove and 39 not upgraded.
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	﻿2025-08-19T18:21:39.2336195Z ##[group]Run # Install Chrome using the official Google repository
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2336673Z [36;1m# Install Chrome using the official Google repository[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2337164Z [36;1mwget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2338112Z [36;1mecho "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2338642Z [36;1msudo apt-get update[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2338913Z [36;1msudo apt-get install -y google-chrome-stable[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2339181Z [36;1m[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2339363Z [36;1m# Verify Chrome installation[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2339636Z [36;1mecho "Chrome installed successfully"[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2339899Z [36;1mgoogle-chrome --version[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2340120Z [36;1m[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2340394Z [36;1m# Selenium Manager will automatically download compatible ChromeDriver[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2340932Z [36;1mecho "✅ Chrome installed - ChromeDriver will be auto-downloaded by Selenium"[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2381272Z shell: /usr/bin/bash -e {0}
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2381506Z env:
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2381745Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2382158Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2382539Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2382882Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2383226Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2383564Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.2384029Z ##[endgroup]
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.3874968Z Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.6981918Z OK
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.7139448Z deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.7869501Z Get:1 file:/etc/apt/apt-mirrors.txt Mirrorlist [144 B]
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.8218624Z Hit:2 http://azure.archive.ubuntu.com/ubuntu noble InRelease
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.8235388Z Hit:3 http://azure.archive.ubuntu.com/ubuntu noble-updates InRelease
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.8244355Z Hit:4 http://azure.archive.ubuntu.com/ubuntu noble-backports InRelease
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.8252335Z Hit:5 http://azure.archive.ubuntu.com/ubuntu noble-security InRelease
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.9334146Z Hit:6 https://packages.microsoft.com/repos/azure-cli noble InRelease
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:39.9604553Z Hit:7 https://packages.microsoft.com/ubuntu/24.04/prod noble InRelease
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:40.0222200Z Get:8 http://dl.google.com/linux/chrome/deb stable InRelease [1825 B]
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:40.8064981Z Get:9 http://dl.google.com/linux/chrome/deb stable/main amd64 Packages [1215 B]
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:40.9372515Z Fetched 3040 B in 1s (2875 B/s)
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:41.6340326Z Reading package lists...
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:41.6669841Z Reading package lists...
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:41.8207367Z Building dependency tree...
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:41.8214935Z Reading state information...
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:41.9753907Z The following packages will be upgraded:
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:41.9758851Z   google-chrome-stable
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:42.2153874Z 1 upgraded, 0 newly installed, 0 to remove and 39 not upgraded.
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:42.2154864Z Need to get 119 MB of archives.
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:42.2155465Z After this operation, 17.4 kB of additional disk space will be used.
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:42.2156514Z Get:1 http://dl.google.com/linux/chrome/deb stable/main amd64 google-chrome-stable amd64 139.0.7258.127-1 [119 MB]
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:43.5259837Z Fetched 119 MB in 1s (92.6 MB/s)
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:43.5849608Z (Reading database ... 
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:43.5850424Z (Reading database ... 5%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:43.5850956Z (Reading database ... 10%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:43.5851301Z (Reading database ... 15%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:43.5851637Z (Reading database ... 20%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:43.5851955Z (Reading database ... 25%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:43.5852665Z (Reading database ... 30%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:43.5852992Z (Reading database ... 35%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:43.5853320Z (Reading database ... 40%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:43.5853638Z (Reading database ... 45%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:43.5853966Z (Reading database ... 50%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:43.6076754Z (Reading database ... 55%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:43.7780159Z (Reading database ... 60%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:43.9678743Z (Reading database ... 65%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:44.1742549Z (Reading database ... 70%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:44.3678626Z (Reading database ... 75%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:44.6216492Z (Reading database ... 80%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:44.8333447Z (Reading database ... 85%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:45.0751063Z (Reading database ... 90%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:45.3334273Z (Reading database ... 95%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:45.3335133Z (Reading database ... 100%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:45.3336126Z (Reading database ... 219881 files and directories currently installed.)
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:45.3380730Z Preparing to unpack .../google-chrome-stable_139.0.7258.127-1_amd64.deb ...
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:45.3508920Z Unpacking google-chrome-stable (139.0.7258.127-1) over (139.0.7258.66-1) ...
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:51.9178177Z Setting up google-chrome-stable (139.0.7258.127-1) ...
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:21:52.1596877Z Processing triggers for man-db (2.12.0-4build2) ...
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:22:04.7408099Z 
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:22:04.7409926Z Running kernel seems to be up-to-date.
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:22:04.7410771Z 
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:22:04.7411261Z Restarting services...
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:22:04.7480843Z 
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:22:04.7481247Z Service restarts being deferred:
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:22:04.7484772Z  systemctl restart hosted-compute-agent.service
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:22:04.7485390Z 
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:22:04.7486123Z No containers need to be restarted.
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:22:04.7486970Z 
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:22:04.7487325Z No user sessions are running outdated binaries.
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:22:04.7488334Z 
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:22:04.7488814Z No VM guests are running outdated hypervisor (qemu) binaries on this host.
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:22:05.5755657Z Chrome installed successfully
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:22:05.6625610Z Google Chrome 139.0.7258.127 
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:22:05.7037161Z ✅ Chrome installed - ChromeDriver will be auto-downloaded by Selenium
smoke-tests	Install Python dependencies	﻿2025-08-19T18:22:05.7068877Z ##[group]Run python -m pip install --upgrade pip
smoke-tests	Install Python dependencies	2025-08-19T18:22:05.7069288Z [36;1mpython -m pip install --upgrade pip[0m
smoke-tests	Install Python dependencies	2025-08-19T18:22:05.7069579Z [36;1mpip install -r requirements.txt[0m
smoke-tests	Install Python dependencies	2025-08-19T18:22:05.7069857Z [36;1mpip install radish-bdd selenium typer[0m
smoke-tests	Install Python dependencies	2025-08-19T18:22:05.7111321Z shell: /usr/bin/bash -e {0}
smoke-tests	Install Python dependencies	2025-08-19T18:22:05.7111562Z env:
smoke-tests	Install Python dependencies	2025-08-19T18:22:05.7111805Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install Python dependencies	2025-08-19T18:22:05.7112222Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
smoke-tests	Install Python dependencies	2025-08-19T18:22:05.7112646Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install Python dependencies	2025-08-19T18:22:05.7112984Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install Python dependencies	2025-08-19T18:22:05.7113332Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install Python dependencies	2025-08-19T18:22:05.7113682Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
smoke-tests	Install Python dependencies	2025-08-19T18:22:05.7113968Z ##[endgroup]
smoke-tests	Install Python dependencies	2025-08-19T18:22:11.0892692Z Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (25.2)
smoke-tests	Install Python dependencies	2025-08-19T18:22:11.8185532Z Collecting pywebview>=4.0 (from -r requirements.txt (line 2))
smoke-tests	Install Python dependencies	2025-08-19T18:22:11.9119020Z   Downloading pywebview-6.0-py3-none-any.whl.metadata (4.6 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:11.9820455Z Collecting PyYAML>=6.0 (from -r requirements.txt (line 3))
smoke-tests	Install Python dependencies	2025-08-19T18:22:11.9985701Z   Downloading PyYAML-6.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.1 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:12.0390019Z Collecting GitPython>=3.1.0 (from -r requirements.txt (line 4))
smoke-tests	Install Python dependencies	2025-08-19T18:22:12.0550551Z   Downloading gitpython-3.1.45-py3-none-any.whl.metadata (13 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:12.0915513Z Collecting Flask>=2.0.0 (from -r requirements.txt (line 5))
smoke-tests	Install Python dependencies	2025-08-19T18:22:12.1074375Z   Downloading flask-3.1.1-py3-none-any.whl.metadata (3.0 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:12.1335571Z Collecting proxy_tools (from pywebview>=4.0->-r requirements.txt (line 2))
smoke-tests	Install Python dependencies	2025-08-19T18:22:12.1504908Z   Downloading proxy_tools-0.1.0.tar.gz (3.0 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:12.1626794Z   Installing build dependencies: started
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.0683494Z   Installing build dependencies: finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.0689377Z   Getting requirements to build wheel: started
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.4564296Z   Getting requirements to build wheel: finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.4573045Z   Preparing metadata (pyproject.toml): started
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.6309604Z   Preparing metadata (pyproject.toml): finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.6693200Z Collecting bottle (from pywebview>=4.0->-r requirements.txt (line 2))
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.6855485Z   Downloading bottle-0.13.4-py2.py3-none-any.whl.metadata (1.6 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.7162957Z Collecting typing_extensions (from pywebview>=4.0->-r requirements.txt (line 2))
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.7318417Z   Downloading typing_extensions-4.14.1-py3-none-any.whl.metadata (3.0 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.7586464Z Collecting gitdb<5,>=4.0.1 (from GitPython>=3.1.0->-r requirements.txt (line 4))
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.7742052Z   Downloading gitdb-4.0.12-py3-none-any.whl.metadata (1.2 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.8004898Z Collecting smmap<6,>=3.0.1 (from gitdb<5,>=4.0.1->GitPython>=3.1.0->-r requirements.txt (line 4))
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.8161326Z   Downloading smmap-5.0.2-py3-none-any.whl.metadata (4.3 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.8416678Z Collecting blinker>=1.9.0 (from Flask>=2.0.0->-r requirements.txt (line 5))
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.8571787Z   Downloading blinker-1.9.0-py3-none-any.whl.metadata (1.6 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.8889801Z Collecting click>=8.1.3 (from Flask>=2.0.0->-r requirements.txt (line 5))
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.9046592Z   Downloading click-8.2.1-py3-none-any.whl.metadata (2.5 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.9286529Z Collecting itsdangerous>=2.2.0 (from Flask>=2.0.0->-r requirements.txt (line 5))
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.9445174Z   Downloading itsdangerous-2.2.0-py3-none-any.whl.metadata (1.9 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.9722885Z Collecting jinja2>=3.1.2 (from Flask>=2.0.0->-r requirements.txt (line 5))
smoke-tests	Install Python dependencies	2025-08-19T18:22:13.9878456Z   Downloading jinja2-3.1.6-py3-none-any.whl.metadata (2.9 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.0519320Z Collecting markupsafe>=2.1.1 (from Flask>=2.0.0->-r requirements.txt (line 5))
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.0677221Z   Downloading MarkupSafe-3.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.0 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.1019273Z Collecting werkzeug>=3.1.0 (from Flask>=2.0.0->-r requirements.txt (line 5))
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.1176230Z   Downloading werkzeug-3.1.3-py3-none-any.whl.metadata (3.7 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.1448922Z Downloading pywebview-6.0-py3-none-any.whl (508 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.2114207Z Downloading PyYAML-6.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (762 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.2306152Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 763.0/763.0 kB 33.8 MB/s  0:00:00
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.2464349Z Downloading gitpython-3.1.45-py3-none-any.whl (208 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.2647999Z Downloading gitdb-4.0.12-py3-none-any.whl (62 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.2830363Z Downloading smmap-5.0.2-py3-none-any.whl (24 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.3012043Z Downloading flask-3.1.1-py3-none-any.whl (103 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.3197460Z Downloading blinker-1.9.0-py3-none-any.whl (8.5 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.3381190Z Downloading click-8.2.1-py3-none-any.whl (102 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.3572901Z Downloading itsdangerous-2.2.0-py3-none-any.whl (16 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.3762913Z Downloading jinja2-3.1.6-py3-none-any.whl (134 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.3953510Z Downloading MarkupSafe-3.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (23 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.4144421Z Downloading werkzeug-3.1.3-py3-none-any.whl (224 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.4362160Z Downloading bottle-0.13.4-py2.py3-none-any.whl (103 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.4550049Z Downloading typing_extensions-4.14.1-py3-none-any.whl (43 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.4700775Z Building wheels for collected packages: proxy_tools
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.4710521Z   Building wheel for proxy_tools (pyproject.toml): started
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.6625285Z   Building wheel for proxy_tools (pyproject.toml): finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.6631520Z   Created wheel for proxy_tools: filename=proxy_tools-0.1.0-py3-none-any.whl size=2936 sha256=629e06a14e194d8c8e4dda604c51374cfedd9cef3eebcbfe57f893d34ec69e8e
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.6633582Z   Stored in directory: /home/runner/.cache/pip/wheels/2b/5f/96/7e96e7cbf06e426e168a6891a6ca2226787cc79fc816830dd4
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.6647533Z Successfully built proxy_tools
smoke-tests	Install Python dependencies	2025-08-19T18:22:14.6853982Z Installing collected packages: proxy_tools, bottle, typing_extensions, smmap, PyYAML, markupsafe, itsdangerous, click, blinker, werkzeug, pywebview, jinja2, gitdb, GitPython, Flask
smoke-tests	Install Python dependencies	2025-08-19T18:22:15.3847018Z 
smoke-tests	Install Python dependencies	2025-08-19T18:22:15.3862135Z Successfully installed Flask-3.1.1 GitPython-3.1.45 PyYAML-6.0.2 blinker-1.9.0 bottle-0.13.4 click-8.2.1 gitdb-4.0.12 itsdangerous-2.2.0 jinja2-3.1.6 markupsafe-3.0.2 proxy_tools-0.1.0 pywebview-6.0 smmap-5.0.2 typing_extensions-4.14.1 werkzeug-3.1.3
smoke-tests	Install Python dependencies	2025-08-19T18:22:15.9279006Z Collecting radish-bdd
smoke-tests	Install Python dependencies	2025-08-19T18:22:15.9976123Z   Downloading radish_bdd-0.18.2-py2.py3-none-any.whl.metadata (5.4 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:16.0525516Z Collecting selenium
smoke-tests	Install Python dependencies	2025-08-19T18:22:16.0686626Z   Downloading selenium-4.35.0-py3-none-any.whl.metadata (7.4 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:16.1026301Z Collecting typer
smoke-tests	Install Python dependencies	2025-08-19T18:22:16.1181865Z   Downloading typer-0.16.1-py3-none-any.whl.metadata (15 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:16.1464188Z Collecting docopt (from radish-bdd)
smoke-tests	Install Python dependencies	2025-08-19T18:22:16.1620775Z   Downloading docopt-0.6.2.tar.gz (25 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:16.1781406Z   Installing build dependencies: started
smoke-tests	Install Python dependencies	2025-08-19T18:22:16.8749430Z   Installing build dependencies: finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:22:16.8754871Z   Getting requirements to build wheel: started
smoke-tests	Install Python dependencies	2025-08-19T18:22:17.1839243Z   Getting requirements to build wheel: finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:22:17.1848989Z   Preparing metadata (pyproject.toml): started
smoke-tests	Install Python dependencies	2025-08-19T18:22:17.3502108Z   Preparing metadata (pyproject.toml): finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:22:17.4037075Z Collecting pysingleton (from radish-bdd)
smoke-tests	Install Python dependencies	2025-08-19T18:22:17.4205692Z   Downloading pysingleton-0.2.1.tar.gz (1.3 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:17.4294613Z   Installing build dependencies: started
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.1249192Z   Installing build dependencies: finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.1255459Z   Getting requirements to build wheel: started
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.4228581Z   Getting requirements to build wheel: finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.4239377Z   Preparing metadata (pyproject.toml): started
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.5808080Z   Preparing metadata (pyproject.toml): finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.6073719Z Collecting colorful>=0.3.11 (from radish-bdd)
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.6238903Z   Downloading colorful-0.5.7-py2.py3-none-any.whl.metadata (16 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.6834976Z Collecting tag-expressions>=2.0.0 (from radish-bdd)
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.6999956Z   Downloading tag_expressions-2.0.1-py3-none-any.whl.metadata (3.8 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.7254070Z Collecting parse_type>0.4.0 (from radish-bdd)
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.7416211Z   Downloading parse_type-0.6.6-py2.py3-none-any.whl.metadata (12 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.7807042Z Collecting humanize (from radish-bdd)
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.7965129Z   Downloading humanize-4.12.3-py3-none-any.whl.metadata (7.8 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.8465914Z Collecting urllib3<3.0,>=2.5.0 (from urllib3[socks]<3.0,>=2.5.0->selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.8626388Z   Downloading urllib3-2.5.0-py3-none-any.whl.metadata (6.5 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.8940747Z Collecting trio~=0.30.0 (from selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.9116056Z   Downloading trio-0.30.0-py3-none-any.whl.metadata (8.5 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.9375271Z Collecting trio-websocket~=0.12.2 (from selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.9540074Z   Downloading trio_websocket-0.12.2-py3-none-any.whl.metadata (5.1 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:18.9859403Z Collecting certifi>=2025.6.15 (from selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.0018541Z   Downloading certifi-2025.8.3-py3-none-any.whl.metadata (2.4 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.0055358Z Requirement already satisfied: typing_extensions~=4.14.0 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from selenium) (4.14.1)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.0361593Z Collecting websocket-client~=1.8.0 (from selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.0526020Z   Downloading websocket_client-1.8.0-py3-none-any.whl.metadata (8.0 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.0806243Z Collecting attrs>=23.2.0 (from trio~=0.30.0->selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.0965858Z   Downloading attrs-25.3.0-py3-none-any.whl.metadata (10 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.1294352Z Collecting sortedcontainers (from trio~=0.30.0->selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.1480033Z   Downloading sortedcontainers-2.4.0-py2.py3-none-any.whl.metadata (10 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.1813910Z Collecting idna (from trio~=0.30.0->selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.1992779Z   Downloading idna-3.10-py3-none-any.whl.metadata (10 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.2242174Z Collecting outcome (from trio~=0.30.0->selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.2400503Z   Downloading outcome-1.3.0.post0-py2.py3-none-any.whl.metadata (2.6 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.2625881Z Collecting sniffio>=1.3.0 (from trio~=0.30.0->selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.2855201Z   Downloading sniffio-1.3.1-py3-none-any.whl.metadata (3.9 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.3172128Z Collecting wsproto>=0.14 (from trio-websocket~=0.12.2->selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.3332165Z   Downloading wsproto-1.2.0-py3-none-any.whl.metadata (5.6 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.3613537Z Collecting pysocks!=1.5.7,<2.0,>=1.5.6 (from urllib3[socks]<3.0,>=2.5.0->selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.3772369Z   Downloading PySocks-1.7.1-py3-none-any.whl.metadata (13 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.3840054Z Requirement already satisfied: click>=8.0.0 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from typer) (8.2.1)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.4073882Z Collecting shellingham>=1.3.0 (from typer)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.4251820Z   Downloading shellingham-1.5.4-py2.py3-none-any.whl.metadata (3.5 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.4826413Z Collecting rich>=10.11.0 (from typer)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.4988957Z   Downloading rich-14.1.0-py3-none-any.whl.metadata (18 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.5354965Z Collecting parse>=1.18.0 (from parse_type>0.4.0->radish-bdd)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.5521191Z   Downloading parse-1.20.2-py2.py3-none-any.whl.metadata (22 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.5832078Z Collecting six>=1.15 (from parse_type>0.4.0->radish-bdd)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.5988914Z   Downloading six-1.17.0-py2.py3-none-any.whl.metadata (1.7 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.6286845Z Collecting markdown-it-py>=2.2.0 (from rich>=10.11.0->typer)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.6442946Z   Downloading markdown_it_py-4.0.0-py3-none-any.whl.metadata (7.3 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.6823990Z Collecting pygments<3.0.0,>=2.13.0 (from rich>=10.11.0->typer)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.6981948Z   Downloading pygments-2.19.2-py3-none-any.whl.metadata (2.5 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.7233424Z Collecting mdurl~=0.1 (from markdown-it-py>=2.2.0->rich>=10.11.0->typer)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.7394515Z   Downloading mdurl-0.1.2-py3-none-any.whl.metadata (1.6 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.7692863Z Collecting h11<1,>=0.9.0 (from wsproto>=0.14->trio-websocket~=0.12.2->selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.7852927Z   Downloading h11-0.16.0-py3-none-any.whl.metadata (8.3 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.8110507Z Downloading radish_bdd-0.18.2-py2.py3-none-any.whl (161 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.8532823Z Downloading selenium-4.35.0-py3-none-any.whl (9.6 MB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.9469279Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 9.6/9.6 MB 120.5 MB/s  0:00:00
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.9634157Z Downloading trio-0.30.0-py3-none-any.whl (499 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:19.9833016Z Downloading trio_websocket-0.12.2-py3-none-any.whl (21 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.0014139Z Downloading urllib3-2.5.0-py3-none-any.whl (129 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.0196457Z Downloading PySocks-1.7.1-py3-none-any.whl (16 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.0379277Z Downloading websocket_client-1.8.0-py3-none-any.whl (58 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.0560785Z Downloading typer-0.16.1-py3-none-any.whl (46 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.0742174Z Downloading attrs-25.3.0-py3-none-any.whl (63 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.0922111Z Downloading certifi-2025.8.3-py3-none-any.whl (161 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.1123407Z Downloading colorful-0.5.7-py2.py3-none-any.whl (201 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.1310715Z Downloading outcome-1.3.0.post0-py2.py3-none-any.whl (10 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.1486855Z Downloading parse_type-0.6.6-py2.py3-none-any.whl (27 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.1665613Z Downloading parse-1.20.2-py2.py3-none-any.whl (20 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.1852065Z Downloading rich-14.1.0-py3-none-any.whl (243 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.2045314Z Downloading pygments-2.19.2-py3-none-any.whl (1.2 MB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.2135592Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.2/1.2 MB 150.4 MB/s  0:00:00
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.2296119Z Downloading markdown_it_py-4.0.0-py3-none-any.whl (87 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.2480097Z Downloading mdurl-0.1.2-py3-none-any.whl (10.0 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.2659249Z Downloading shellingham-1.5.4-py2.py3-none-any.whl (9.8 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.2837607Z Downloading six-1.17.0-py2.py3-none-any.whl (11 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.3021658Z Downloading sniffio-1.3.1-py3-none-any.whl (10 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.3207200Z Downloading tag_expressions-2.0.1-py3-none-any.whl (5.5 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.3384934Z Downloading wsproto-1.2.0-py3-none-any.whl (24 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.3563120Z Downloading h11-0.16.0-py3-none-any.whl (37 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.3747697Z Downloading humanize-4.12.3-py3-none-any.whl (128 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.3932307Z Downloading idna-3.10-py3-none-any.whl (70 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.4115162Z Downloading sortedcontainers-2.4.0-py2.py3-none-any.whl (29 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.4470879Z Building wheels for collected packages: docopt, pysingleton
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.4478954Z   Building wheel for docopt (pyproject.toml): started
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.6429003Z   Building wheel for docopt (pyproject.toml): finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.6434499Z   Created wheel for docopt: filename=docopt-0.6.2-py2.py3-none-any.whl size=13783 sha256=e4012df439aecc79e8d369be90ec30b03c8a9db2497d643057a4682d993d015d
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.6437120Z   Stored in directory: /home/runner/.cache/pip/wheels/1a/b0/8c/4b75c4116c31f83c8f9f047231251e13cc74481cca4a78a9ce
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.6465048Z   Building wheel for pysingleton (pyproject.toml): started
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.8356724Z   Building wheel for pysingleton (pyproject.toml): finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.8362321Z   Created wheel for pysingleton: filename=pysingleton-0.2.1-py3-none-any.whl size=2205 sha256=8405f9b0447d34532c9472c009e5b1ceadcb5a9eb0cf59acf6243a5f91fdabd5
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.8364746Z   Stored in directory: /home/runner/.cache/pip/wheels/95/a2/a3/b005361713f41da5c86c71392c81612294183d5e0cd0c54c69
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.8379466Z Successfully built docopt pysingleton
smoke-tests	Install Python dependencies	2025-08-19T18:22:20.8900773Z Installing collected packages: tag-expressions, sortedcontainers, pysingleton, parse, docopt, colorful, websocket-client, urllib3, sniffio, six, shellingham, pysocks, pygments, mdurl, idna, humanize, h11, certifi, attrs, wsproto, parse_type, outcome, markdown-it-py, trio, rich, radish-bdd, typer, trio-websocket, selenium
smoke-tests	Install Python dependencies	2025-08-19T18:22:23.3801361Z 
smoke-tests	Install Python dependencies	2025-08-19T18:22:23.3829109Z Successfully installed attrs-25.3.0 certifi-2025.8.3 colorful-0.5.7 docopt-0.6.2 h11-0.16.0 humanize-4.12.3 idna-3.10 markdown-it-py-4.0.0 mdurl-0.1.2 outcome-1.3.0.post0 parse-1.20.2 parse_type-0.6.6 pygments-2.19.2 pysingleton-0.2.1 pysocks-1.7.1 radish-bdd-0.18.2 rich-14.1.0 selenium-4.35.0 shellingham-1.5.4 six-1.17.0 sniffio-1.3.1 sortedcontainers-2.4.0 tag-expressions-2.0.1 trio-0.30.0 trio-websocket-0.12.2 typer-0.16.1 urllib3-2.5.0 websocket-client-1.8.0 wsproto-1.2.0
smoke-tests	Install iflow package	﻿2025-08-19T18:22:23.4834668Z ##[group]Run pip install -e .
smoke-tests	Install iflow package	2025-08-19T18:22:23.4835149Z [36;1mpip install -e .[0m
smoke-tests	Install iflow package	2025-08-19T18:22:23.4893755Z shell: /usr/bin/bash -e {0}
smoke-tests	Install iflow package	2025-08-19T18:22:23.4894123Z env:
smoke-tests	Install iflow package	2025-08-19T18:22:23.4894513Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install iflow package	2025-08-19T18:22:23.4895202Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
smoke-tests	Install iflow package	2025-08-19T18:22:23.4895838Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install iflow package	2025-08-19T18:22:23.4896442Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install iflow package	2025-08-19T18:22:23.4897049Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install iflow package	2025-08-19T18:22:23.4897658Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
smoke-tests	Install iflow package	2025-08-19T18:22:23.4898439Z ##[endgroup]
smoke-tests	Install iflow package	2025-08-19T18:22:23.8569756Z Obtaining file:///home/runner/work/iflow/iflow
smoke-tests	Install iflow package	2025-08-19T18:22:23.8590781Z   Installing build dependencies: started
smoke-tests	Install iflow package	2025-08-19T18:22:24.6067129Z   Installing build dependencies: finished with status 'done'
smoke-tests	Install iflow package	2025-08-19T18:22:24.6074214Z   Checking if build backend supports build_editable: started
smoke-tests	Install iflow package	2025-08-19T18:22:24.8567369Z   Checking if build backend supports build_editable: finished with status 'done'
smoke-tests	Install iflow package	2025-08-19T18:22:24.8574369Z   Getting requirements to build editable: started
smoke-tests	Install iflow package	2025-08-19T18:22:25.0318031Z   Getting requirements to build editable: finished with status 'done'
smoke-tests	Install iflow package	2025-08-19T18:22:25.0327112Z   Preparing editable metadata (pyproject.toml): started
smoke-tests	Install iflow package	2025-08-19T18:22:25.1932365Z   Preparing editable metadata (pyproject.toml): finished with status 'done'
smoke-tests	Install iflow package	2025-08-19T18:22:25.1966631Z Requirement already satisfied: flask in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from iflow==0.4.0a2) (3.1.1)
smoke-tests	Install iflow package	2025-08-19T18:22:25.1971898Z Requirement already satisfied: gitpython in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from iflow==0.4.0a2) (3.1.45)
smoke-tests	Install iflow package	2025-08-19T18:22:25.1976998Z Requirement already satisfied: pyyaml in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from iflow==0.4.0a2) (6.0.2)
smoke-tests	Install iflow package	2025-08-19T18:22:25.1981722Z Requirement already satisfied: typer in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from iflow==0.4.0a2) (0.16.1)
smoke-tests	Install iflow package	2025-08-19T18:22:25.1993598Z Requirement already satisfied: blinker>=1.9.0 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from flask->iflow==0.4.0a2) (1.9.0)
smoke-tests	Install iflow package	2025-08-19T18:22:25.1999032Z Requirement already satisfied: click>=8.1.3 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from flask->iflow==0.4.0a2) (8.2.1)
smoke-tests	Install iflow package	2025-08-19T18:22:25.2007258Z Requirement already satisfied: itsdangerous>=2.2.0 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from flask->iflow==0.4.0a2) (2.2.0)
smoke-tests	Install iflow package	2025-08-19T18:22:25.2013474Z Requirement already satisfied: jinja2>=3.1.2 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from flask->iflow==0.4.0a2) (3.1.6)
smoke-tests	Install iflow package	2025-08-19T18:22:25.2018690Z Requirement already satisfied: markupsafe>=2.1.1 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from flask->iflow==0.4.0a2) (3.0.2)
smoke-tests	Install iflow package	2025-08-19T18:22:25.2024751Z Requirement already satisfied: werkzeug>=3.1.0 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from flask->iflow==0.4.0a2) (3.1.3)
smoke-tests	Install iflow package	2025-08-19T18:22:25.2072255Z Requirement already satisfied: gitdb<5,>=4.0.1 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from gitpython->iflow==0.4.0a2) (4.0.12)
smoke-tests	Install iflow package	2025-08-19T18:22:25.2096604Z Requirement already satisfied: smmap<6,>=3.0.1 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from gitdb<5,>=4.0.1->gitpython->iflow==0.4.0a2) (5.0.2)
smoke-tests	Install iflow package	2025-08-19T18:22:25.2121111Z Requirement already satisfied: typing-extensions>=3.7.4.3 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from typer->iflow==0.4.0a2) (4.14.1)
smoke-tests	Install iflow package	2025-08-19T18:22:25.2126145Z Requirement already satisfied: shellingham>=1.3.0 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from typer->iflow==0.4.0a2) (1.5.4)
smoke-tests	Install iflow package	2025-08-19T18:22:25.2132392Z Requirement already satisfied: rich>=10.11.0 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from typer->iflow==0.4.0a2) (14.1.0)
smoke-tests	Install iflow package	2025-08-19T18:22:25.2147336Z Requirement already satisfied: markdown-it-py>=2.2.0 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from rich>=10.11.0->typer->iflow==0.4.0a2) (4.0.0)
smoke-tests	Install iflow package	2025-08-19T18:22:25.2155760Z Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from rich>=10.11.0->typer->iflow==0.4.0a2) (2.19.2)
smoke-tests	Install iflow package	2025-08-19T18:22:25.2174602Z Requirement already satisfied: mdurl~=0.1 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from markdown-it-py>=2.2.0->rich>=10.11.0->typer->iflow==0.4.0a2) (0.1.2)
smoke-tests	Install iflow package	2025-08-19T18:22:25.2222150Z Building wheels for collected packages: iflow
smoke-tests	Install iflow package	2025-08-19T18:22:25.2229910Z   Building editable for iflow (pyproject.toml): started
smoke-tests	Install iflow package	2025-08-19T18:22:25.4200849Z   Building editable for iflow (pyproject.toml): finished with status 'done'
smoke-tests	Install iflow package	2025-08-19T18:22:25.4204326Z   Created wheel for iflow: filename=iflow-0.4.0a2-0.editable-py3-none-any.whl size=1523 sha256=89cacf4de28a9f7874bfb9af89da5d7d1868900bb223b73cd0fefa7794c813e2
smoke-tests	Install iflow package	2025-08-19T18:22:25.4207282Z   Stored in directory: /tmp/pip-ephem-wheel-cache-9_7apcxu/wheels/32/41/fe/4b6c4d03ba1db3388a5127d7f84477b4073948da3c26ad78fc
smoke-tests	Install iflow package	2025-08-19T18:22:25.4226135Z Successfully built iflow
smoke-tests	Install iflow package	2025-08-19T18:22:25.4544860Z Installing collected packages: iflow
smoke-tests	Install iflow package	2025-08-19T18:22:25.4618109Z Successfully installed iflow-0.4.0a2
smoke-tests	Start iflow server with init-db	﻿2025-08-19T18:22:25.5255964Z ##[group]Run # Start the server in the background with --init-db to create initial repository
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5257045Z [36;1m# Start the server in the background with --init-db to create initial repository[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5258246Z [36;1mpython -m iflow.web_server \[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5258686Z [36;1m  --port 8080 \[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5259035Z [36;1m  --init-db \[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5259433Z [36;1m  --host 0.0.0.0 \[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5259859Z [36;1m  --title "iflow - Test Server" &[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5260291Z [36;1m[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5260613Z [36;1m# Store the server PID for cleanup[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5261078Z [36;1mecho $! > /tmp/iflow_server.pid[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5261529Z [36;1m[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5261860Z [36;1m# Wait for server to start with retry logic[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5262379Z [36;1mecho "Waiting for server to start..."[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5262821Z [36;1mfor i in {1..30}; do[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5263410Z [36;1m  if curl -f http://localhost:8080/api/project-info > /dev/null 2>&1; then[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5264132Z [36;1m    echo "✅ Server is responding after $i seconds"[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5264629Z [36;1m    break[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5264931Z [36;1m  fi[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5265235Z [36;1m  if [ $i -eq 30 ]; then[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5265707Z [36;1m    echo "❌ Server failed to start within 30 seconds"[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5266174Z [36;1m    exit 1[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5266541Z [36;1m  fi[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5266824Z [36;1m  sleep 1[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5267122Z [36;1mdone[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5267389Z [36;1m[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5268090Z [36;1m# Verify initial ticket was created[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5268619Z [36;1mecho "Verifying initial database setup..."[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5269278Z [36;1mif curl -f http://localhost:8080/api/artifacts > /dev/null 2>&1; then[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5269992Z [36;1m  echo "✅ Initial database and artifacts are accessible"[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5270510Z [36;1melse[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5270868Z [36;1m  echo "❌ Failed to access artifacts API"[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5271309Z [36;1m  exit 1[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5271629Z [36;1mfi[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5271954Z [36;1m[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5272412Z [36;1mecho "✅ iflow server started successfully with initial database"[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5331055Z shell: /usr/bin/bash -e {0}
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5331419Z env:
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5331808Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5332497Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5333163Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5333777Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5334390Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5335025Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5335529Z ##[endgroup]
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.5415176Z Waiting for server to start...
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9739633Z DEBUG: __file__ = /home/runner/work/iflow/iflow/sw/iflow/web_server.py
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9756890Z [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9759003Z  * Running on all addresses (0.0.0.0)
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9759495Z  * Running on http://127.0.0.1:8080
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9759952Z  * Running on http://10.1.1.109:8080
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9761234Z DEBUG: static_folder = /home/runner/work/iflow/iflow/sw/iflow/static
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9761839Z DEBUG: static_folder exists = True
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9762305Z Default database path not found: ../../.iflow-demo
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9762795Z Starting iflow web server...
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9763172Z Database: .iflow-demo
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9763486Z Host: 0.0.0.0
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9763774Z Port: 8080
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9764073Z Title: iflow - Test Server
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9764842Z Initialize DB: True
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9765253Z Initializing database with initial artifact...
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9765976Z ✅ Created initial artifact: 00001 - Initial ticket
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9766786Z Starting iflow web server...
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9767190Z Database: .iflow-demo
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9767990Z URL: http://0.0.0.0:8080
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9771021Z [33mPress CTRL+C to quit[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9771436Z Press Ctrl+C to stop
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9771968Z  * Serving Flask app 'web_server'
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:25.9772878Z  * Debug mode: off
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:26.5610647Z 127.0.0.1 - - [19/Aug/2025 18:22:26] "GET /api/project-info HTTP/1.1" 200 -
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:26.5620446Z ✅ Server is responding after 2 seconds
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:26.5621198Z Verifying initial database setup...
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:26.5727036Z 127.0.0.1 - - [19/Aug/2025 18:22:26] "GET /api/artifacts HTTP/1.1" 200 -
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:26.5745067Z ✅ Initial database and artifacts are accessible
smoke-tests	Start iflow server with init-db	2025-08-19T18:22:26.5750085Z ✅ iflow server started successfully with initial database
smoke-tests	Run smoke tests	﻿2025-08-19T18:22:31.5800298Z ##[group]Run # Set environment variables for tests
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5800920Z [36;1m# Set environment variables for tests[0m
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5801532Z [36;1mexport IFLOW_BASE_URL="http://localhost:8080"[0m
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5802078Z [36;1mexport PYTHONPATH="tests:$PYTHONPATH"[0m
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5802547Z [36;1mexport DISPLAY=":99"[0m
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5802908Z [36;1m[0m
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5803189Z [36;1m# Run smoke tests[0m
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5803566Z [36;1mecho "Running smoke tests..."[0m
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5804064Z [36;1mradish -b tests tests/features/ --tags smoke[0m
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5804520Z [36;1m[0m
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5804866Z [36;1mecho "✅ Smoke tests completed successfully"[0m
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5861746Z shell: /usr/bin/bash -e {0}
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5861988Z env:
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5862229Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5862638Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5863073Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5863432Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5863797Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5864155Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5864491Z ##[endgroup]
smoke-tests	Run smoke tests	2025-08-19T18:22:31.5945677Z Running smoke tests...
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6167950Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6170447Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6183559Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6184571Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6185437Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6186373Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6187420Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6188581Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6189359Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6190155Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6191070Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6192040Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6193626Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6195075Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6196304Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6198044Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6199461Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6200873Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6203499Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6204354Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6205226Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6206230Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6207629Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6209051Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6210174Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6211206Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6234315Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6235698Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6237107Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6238990Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6240474Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6241650Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6242747Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6243688Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6244554Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6245480Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6246606Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6247582Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6248443Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6249356Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6250683Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6251870Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6253100Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6254499Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6255958Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6257095Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6258400Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6259487Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6260441Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6262005Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6263371Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6267104Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6269073Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6270232Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6271474Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6272646Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6273746Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6274736Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6275912Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6277176Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6278696Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6280002Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6281002Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6281868Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6282888Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6284006Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6284925Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6286110Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6287252Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6290936Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6292425Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6293900Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:32.6295056Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4646430Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4649462Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4652304Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4656273Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4657428Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4658680Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4659971Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4661387Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4662348Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4663500Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4664929Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4666424Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4667538Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4668721Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4669665Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4670517Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4671442Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4672735Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4674197Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4675385Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4676526Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4677507Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4678802Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4680192Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4681376Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4682523Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4683665Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4684685Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4685724Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4686624Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4687952Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4688920Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4689861Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4690953Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4692054Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4693050Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4694071Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4695343Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4696368Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4697445Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4698690Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4699738Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4700607Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4701304Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4702033Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4702828Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4703738Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4704690Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4705544Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4706424Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4707441Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4708527Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4709287Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4710075Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4710967Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4711957Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4713037Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4714255Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4715281Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4716277Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4717492Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4718830Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4719861Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4720933Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4721761Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4722739Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4723832Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4725025Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4726123Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4727143Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4728923Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4730272Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4731663Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4733346Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4734806Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4735977Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4737069Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4738154Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4739023Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4739957Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4741076Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4742041Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4742701Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4743621Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4744940Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4746133Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4747371Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4748930Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4750138Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4751266Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4752389Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4753444Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4754403Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4755623Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4756464Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4757197Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4758148Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4759041Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4760001Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4760848Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4761731Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4762957Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4763903Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4764676Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4765451Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4766346Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4767296Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4768534Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4769750Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4770776Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4771733Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4772880Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4774061Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4775067Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4775857Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4776694Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4777661Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4778919Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4780121Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4781219Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4782246Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4783508Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4784838Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4786215Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4788055Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4789777Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4790967Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4792055Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4792979Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4793864Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4794868Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4795982Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4797160Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4798004Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4798939Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4800258Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4801468Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4802709Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4804084Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4805317Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4806475Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4807602Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4808836Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4809790Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4810692Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4811488Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4812381Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4813364Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4814239Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4815143Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4816179Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4817116Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4818065Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4818876Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4819792Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4820765Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4821915Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4823378Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4824406Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4825372Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4826539Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4827899Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4828942Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4829743Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4830823Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4831814Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4832915Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4834117Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4835220Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4836247Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4837524Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4839031Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4840447Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4842115Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4843584Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4844756Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4845830Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4846752Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4847633Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4848741Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4849845Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4850814Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4851473Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4852394Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4853719Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4854896Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4856154Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4857951Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4859169Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4860309Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4861425Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4862475Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4863433Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4864651Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4865511Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4866250Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4867092Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4868365Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4869614Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4870797Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4871878Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4872876Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4874057Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4875292Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4876637Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4878116Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4879106Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4879978Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4880978Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4881987Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4882914Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4884085Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4885226Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4886131Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4887591Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4889196Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4890372Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4892117Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4893714Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4894416Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4895071Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4895941Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4896509Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4897514Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4898510Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4899135Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4899764Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4900537Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4901348Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4901975Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4902477Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4902967Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4903424Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4903917Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4904627Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4905426Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4906070Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4906698Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4907227Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4907905Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4908645Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4909281Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4909902Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4910517Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4911066Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4911791Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4912285Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4912776Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4913293Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4913805Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4914384Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4914968Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4915632Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4916185Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4916709Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4917252Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4917931Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4918521Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4919072Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4919539Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4919912Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4920303Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4920726Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4921200Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4921714Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4922177Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4922650Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4923198Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4923689Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4924106Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4924534Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4925015Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4925540Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4926119Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4926783Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4927330Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4927940Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4928588Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4929352Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4929901Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4930344Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4930795Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4931325Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4931914Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4932565Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4933162Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4933826Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4934524Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4935243Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4936005Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4936926Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4937828Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4938463Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4939051Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4939551Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4940011Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4940509Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4941108Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4941644Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4942001Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4942508Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4943219Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4943857Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4944526Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4945282Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4945925Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4946532Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4947145Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4947933Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4948442Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4948968Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4949411Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4949807Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4950257Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4950856Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4951641Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4952283Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4952873Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4953410Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4954047Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4954730Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4955440Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4956148Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4956680Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4957142Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4957696Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4958327Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4958800Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4959437Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4960051Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4960546Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4961351Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4962139Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4962761Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4963564Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4964475Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4965151Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4965758Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4966496Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4967052Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4967823Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4968424Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4968927Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4969563Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4970452Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4971267Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4971890Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4972382Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4972874Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4973321Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4973824Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4974536Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4975333Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4975981Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4976602Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4977124Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4977803Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4978546Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4979188Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4979811Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4980423Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4980974Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4981535Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4982028Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4982510Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4983019Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4983539Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4984239Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4984840Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4985393Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4985937Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4986465Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4986996Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4987586Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4988400Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4988958Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4989432Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4989798Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4990203Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4990624Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4991107Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4991623Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4992076Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4992554Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4993099Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4993630Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4994045Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4994461Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4994981Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4995498Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4996083Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4996736Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4997293Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4997903Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4998522Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4999160Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.4999702Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5000127Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5000574Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5001098Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5001822Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5002460Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5003050Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5003599Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5004290Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5005017Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5005773Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5006796Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5007596Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5008335Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5008918Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5009427Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5009884Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5010401Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5011011Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5011531Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5011899Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5012394Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5013105Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5013743Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5014410Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5015167Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5015813Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5016430Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5017044Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5017611Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5018229Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5018752Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5019205Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5019607Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5020183Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5020800Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5021466Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5022108Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5022697Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5023228Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5023866Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5024659Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5025375Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5026071Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5026585Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5027056Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5027602Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5028239Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5028715Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5029351Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5029978Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5030467Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5031263Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5032040Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5032654Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5033466Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5034384Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5035054Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5035669Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5036276Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5036841Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5037509Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5038207Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5038886Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5039513Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5040280Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5041107Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5041726Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5042227Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5042833Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5043293Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5043793Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5044503Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5045299Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5045951Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5046563Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5047096Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5047673Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5048537Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5049186Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5049802Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5050423Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5050970Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5051533Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5052040Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5052523Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5053046Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5053554Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5054140Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5054739Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5055284Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5055829Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5056360Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5057033Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5057621Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5058306Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5058861Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5059332Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5059704Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5060096Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5060639Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5061122Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5061631Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5062092Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5062562Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5063114Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5063616Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5064021Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5064442Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5064928Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5065458Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5066041Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5066691Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5067240Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5067851Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5068481Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5069124Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5069672Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5070108Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5070557Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5071087Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5071681Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5072319Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5072923Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5073475Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5074178Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5075033Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5075788Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5076702Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5077512Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5078237Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5078949Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5079453Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5079918Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5080425Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5081023Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5081546Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5081903Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5082403Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5083121Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5083762Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5084438Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5085183Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5085825Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5086441Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5087044Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5087615Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5088230Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5088764Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5089213Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5089603Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5090051Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5090669Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5091335Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5091977Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5092568Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5093231Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5093862Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5094550Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5095301Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5095996Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5096520Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5097099Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5097654Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5098283Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5098765Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5099405Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5100007Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5100501Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5101292Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5102081Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5102703Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5103512Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5104421Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5105201Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5105866Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5106581Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5107401Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5108491Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5109179Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5109859Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5110593Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5111427Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5112438Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5124555Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5125131Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5125656Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5126136Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5126662Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5127397Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5128382Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5129253Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5129893Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5130423Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5131003Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5131746Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5132390Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5133006Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5133642Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5134198Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5134763Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5135261Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5135743Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5136255Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5136773Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5137363Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5138087Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5138635Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5139180Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5139709Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5140256Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5140848Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5141428Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5141986Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5142589Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5142972Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5143367Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5143797Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5144278Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5144792Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5145261Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5145737Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5146290Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5146909Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5147314Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5147923Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5148500Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5149050Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5149640Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5150297Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5150871Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5151412Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5152054Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5152699Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5153240Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5153675Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5154126Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5155414Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5156350Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5157295Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5158292Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5159134Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5160089Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5161086Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5162131Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5163315Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5164589Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5165501Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5166337Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5167073Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5167929Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5168824Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5169712Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5170602Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5171233Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5172076Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5173059Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5173935Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5174896Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5175916Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5176826Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5177951Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5178850Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5179667Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5180457Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5181226Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5181863Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5182546Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5183257Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5184160Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5185100Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5186319Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5188800Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5192509Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5193697Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5195008Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5196367Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5198162Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5199169Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5200038Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5201050Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5202049Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5202940Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5204116Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5205484Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5206401Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5208024Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5209470Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5210629Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5212105Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5213769Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5215030Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5216147Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5217294Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5218523Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5219768Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5220883Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5221839Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5223032Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5224444Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5225966Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5227129Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5228207Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5229145Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5229989Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5230926Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5232503Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5233990Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5235194Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5236338Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5237310Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5238559Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5240177Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5241412Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5242572Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5243739Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5244772Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5245809Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5246745Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5247664Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5248792Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5249767Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5250851Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5251965Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5253022Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5254080Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5255095Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5256111Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5257234Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5258508Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5259562Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5260459Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5261167Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5261911Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5262707Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5263611Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5264588Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5265768Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5266682Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5267699Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5268806Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5269576Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5270351Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5271253Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5272213Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5273521Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5274738Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5275805Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5276787Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5278106Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5279309Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5280322Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5281130Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5281986Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5282976Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5284075Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5285259Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5286390Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5287424Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5288864Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5290226Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5291658Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5293355Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5294895Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5296080Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5297183Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5298281Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5299156Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5300324Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5301458Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5302429Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5303109Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5304033Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5305406Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5306603Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5308254Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5309691Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5310899Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5312056Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5313191Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5314276Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5315243Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5316233Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5317099Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5317988Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5318803Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5319709Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5320676Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5321559Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5322451Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5323485Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5324442Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5325216Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5326003Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5326900Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5328022Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5329091Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5330317Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5331380Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5332339Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5333753Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5334956Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5335962Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5336775Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5337611Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5338779Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5339876Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5341077Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5342441Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5343476Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5344776Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5346105Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5347497Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5349348Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5350840Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5352025Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5353122Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5354050Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5354916Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5355849Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5356970Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5358106Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5358791Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5359735Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5361068Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5362260Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5363508Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5364917Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5366122Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5367298Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5368845Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5369931Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5370899Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5371885Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5372730Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5373487Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5374346Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5375489Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5376998Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5378375Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5379507Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5380524Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5381711Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5382994Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5384356Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5385681Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5386680Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5387556Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5388748Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5389767Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5390657Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5391683Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5392777Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5393714Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5395252Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5396737Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5398067Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5399588Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5401284Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5402790Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5403935Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5405089Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5406127Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5407379Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5408755Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5409727Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5411182Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5412640Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5414163Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5415330Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5416256Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5417201Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5418214Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5419154Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5420489Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5421965Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5423182Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5424329Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5425298Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5426384Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5427918Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5429166Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5430323Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5431462Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5432486Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5433524Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5434436Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5435341Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5436297Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5437491Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5438447Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5439076Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5439644Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5440211Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5440752Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5441305Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5442065Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5442659Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5443218Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5443692Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5444073Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5444549Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5444974Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5445461Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5445980Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5446457Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5446940Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5447501Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5448124Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5448535Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5448960Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5449444Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5449970Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5450551Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5451220Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5451781Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5452306Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5452946Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5453595Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5454137Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5454576Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5455024Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5455745Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5456345Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5456989Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5457590Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5458249Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5458948Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5459668Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5460558Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5461477Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5462284Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5462906Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5463491Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5464001Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5464471Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5464980Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5465589Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5466111Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5466467Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5466966Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5467690Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5468453Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5469131Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5469891Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5470532Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5471157Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5471768Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5472344Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5472854Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5473386Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5473833Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5474375Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5474826Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5475434Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5476107Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5476742Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5477336Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5477969Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5478778Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5479463Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5480187Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5480898Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5481425Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5481893Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5482443Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5482982Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5483460Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5484095Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5484705Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5485196Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5485986Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5486770Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5487388Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5488301Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5489219Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5489896Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5490508Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5491130Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5491692Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5492379Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5493110Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5493621Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5494253Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5495056Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5495883Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5496516Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5497126Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5497629Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5498182Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5498689Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5499413Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5500210Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5500869Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5501495Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5502028Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5502610Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5503349Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5503992Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5504609Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5505223Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5505775Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5506342Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5506836Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5507321Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5507932Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5508444Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5509020Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5509620Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5510172Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5510722Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5511384Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5511918Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5512509Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5513097Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5513649Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5514122Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5514494Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5514998Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5515428Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5515904Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5516420Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5516885Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5517369Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5518013Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5518512Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5518927Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5519346Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5519833Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5520043Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5520334Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5520627Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5520804Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5521063Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5521360Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5521639Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5521829Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5521998Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5522202Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5522440Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5522712Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5523008Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5523234Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5523490Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5523973Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5524256Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5524665Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5525107Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5525385Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5525762Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5525995Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5526185Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5526379Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5526607Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5526897Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5527050Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5527187Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5527468Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5527932Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5528139Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5528530Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5528818Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5529096Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5529342Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5529620Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5529838Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5530055Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5530288Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5530426Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5530605Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5530801Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5531137Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5531393Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5531704Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5532029Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5532271Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5532586Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5532879Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5533223Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5533503Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5533768Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5533991Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5534245Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5534446Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5534624Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5534994Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5535157Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5535405Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5535870Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5536128Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5536413Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5536853Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5537252Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5537450Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5537880Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5538094Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5538366Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5538684Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5538887Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5539115Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5539432Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5539814Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5540296Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5540474Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5540709Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5540881Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5541073Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5541289Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5541701Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5542116Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5542389Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5542656Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5542822Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5543152Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5543485Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5543704Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5544022Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5544245Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5544492Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5544724Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5544902Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5545125Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5545339Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5545558Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5545842Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5546083Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5546311Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5546541Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5546760Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5546997Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5547254Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5547497Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5547908Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5548067Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5548213Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5548391Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5548556Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5548789Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5548986Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5549163Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5549383Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5549755Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5549915Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5550079Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5550255Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5550479Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5550681Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5550971Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5551256Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5551435Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5551700Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5551985Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5552260Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5552451Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5552617Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5552820Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5553062Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5553325Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5553621Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5553846Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5554092Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5554454Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5554740Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5555138Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5555579Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5555982Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5556254Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5556483Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5556678Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5556862Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5557087Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5557450Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5557593Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5557822Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5558115Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5558473Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5558672Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5559068Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5559352Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5559634Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5559890Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5560157Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5560367Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5560585Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5560813Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5560947Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5561131Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5561325Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5561667Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5561923Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5562233Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5562437Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5562679Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5562996Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5563293Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5563756Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5564039Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5564203Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5564424Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5564680Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5564885Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5565069Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5565646Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5565815Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5566074Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5566547Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5566792Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5567084Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5567527Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5568019Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5568220Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5568553Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5568761Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5569032Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5569357Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5569555Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5569793Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5570117Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5570494Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5570860Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5571040Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5571275Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5571457Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5571658Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5571988Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5572407Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5572722Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5572987Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5573267Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5573439Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5573875Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5574211Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5574440Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5574751Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5574970Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5575229Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5575457Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5575638Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5575872Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5576077Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5576298Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5576586Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5576820Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5577050Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5577287Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5577503Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5577846Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5578116Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5578355Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5578585Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5578748Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5578884Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5579059Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5579228Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5579464Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5579776Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5579951Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5580171Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5580421Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5580583Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5580752Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5580923Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5581151Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5581461Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5581753Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5582039Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5582221Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5582477Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5582759Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5583041Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5583222Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5583388Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5583594Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5583835Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5584098Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5584390Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5584612Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5584858Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5585225Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5585510Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5585908Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5586356Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5586636Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5586909Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5587145Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5587337Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5587608Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5587936Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5588228Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5588368Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5588508Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5588791Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5589153Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5589465Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5589857Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5590140Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5590424Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5590671Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5590944Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5591924Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5592399Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5592896Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5593230Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5593560Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5593965Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5594588Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5595131Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5595687Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5596142Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5596650Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5597217Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5597873Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5598496Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5599030Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5599387Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5599825Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5600530Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5600976Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5601385Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5602020Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5602361Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5602787Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5603265Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5603677Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5604000Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5604451Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5604851Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5605059Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5605393Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5605600Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5605881Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5606207Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5606407Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5606643Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5607297Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5608175Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5609245Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5609614Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5610082Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5610419Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5610799Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5611212Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5612002Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5612571Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5613087Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5614016Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5614471Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5615183Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5615851Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5617471Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5618730Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5621901Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5622404Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5622836Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5623178Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5623601Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5623994Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5624409Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5624931Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5625374Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5625819Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5626252Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5626662Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5627112Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5627600Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5628194Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5628606Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5628911Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5629185Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5629518Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5629825Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5630258Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5630629Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5630969Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5631381Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5631851Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5632166Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5632731Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5633061Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5633503Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5633911Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5634452Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5635001Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5635351Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5635829Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5636625Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5637144Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5637500Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5637983Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5638379Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5638840Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5639338Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5639888Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5640331Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5640795Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5641478Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5642005Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5642738Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5643551Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5644097Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5644617Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5645045Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5645412Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5645769Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5646202Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5646750Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5647026Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5647298Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5648214Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5648889Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5649279Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5650007Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5650541Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5651067Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5651763Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5652280Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5652685Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5653088Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5653507Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5653774Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5654118Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5654474Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5655085Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5655585Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5656140Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5656524Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5656979Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5657541Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5658243Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5658917Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5659447Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5659759Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5660178Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5660638Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5661024Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5661379Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5662053Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5662364Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5663108Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5663951Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5664421Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5664966Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5665767Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5666490Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5667080Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5667687Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5668242Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5668768Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5669373Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5669780Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5670213Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5670817Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5671511Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5672202Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5672535Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5672987Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5673325Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5673697Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5674102Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5674896Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5675466Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5675964Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5676482Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5676807Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5677415Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5678206Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5678845Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5679427Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5679856Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5680327Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5680755Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5681093Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5681516Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5682115Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5682535Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5683068Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5683507Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5683947Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5684392Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5684799Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5685248Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5685753Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5686211Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5686643Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5686947Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5687205Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5687537Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5688014Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5688451Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5688826Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5689176Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5689583Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5690048Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5690364Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5690678Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5691000Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5691432Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5691844Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5692379Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5693139Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5693496Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5693979Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5694507Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5695104Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5695453Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5695764Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5696156Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5696827Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5697324Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5698037Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5698468Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5698931Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5699623Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5700148Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5700894Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5701717Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5702247Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5702758Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5703195Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5703550Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5703903Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5704355Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5704894Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5705170Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5705438Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5705959Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5706629Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5707020Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5707897Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5708708Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5709247Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5709716Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5710222Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5710643Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5711060Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5711499Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5711979Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5712330Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5712683Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5713303Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5713789Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5714347Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5714750Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5715201Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5715784Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5716347Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5716999Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5717517Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5717999Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5718412Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5718874Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5719273Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5719626Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5720301Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5720605Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5721081Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5721930Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5722397Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5722951Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5723972Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5724701Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5725127Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5725713Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5726110Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5726614Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5727420Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5727967Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5728414Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5729007Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5729704Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5730388Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5730720Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5731178Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5731523Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5731902Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5732303Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5733071Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5733638Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5734126Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5734639Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5734973Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5735574Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5736206Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5736628Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5737216Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5737642Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5738262Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5738929Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5739281Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5739694Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5740080Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5740511Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5741028Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5741469Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5741912Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5742548Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5742965Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5743427Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5743914Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5744365Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5744803Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5745103Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5745366Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5745710Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5746021Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5746445Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5746823Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5747158Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5747562Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5748199Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5748599Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5748978Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5749368Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5749987Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5750449Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5751221Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5751859Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5752312Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5752848Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5753430Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5754054Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5754769Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5755165Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5755782Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5756350Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5756906Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5757550Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5758387Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5759162Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5759962Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5760540Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5761327Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5762236Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5762918Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5763529Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5764131Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5764546Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5764956Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5765485Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5766183Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5766549Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5766927Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5767514Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5768434Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5768930Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5785570Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5786177Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5786737Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5787230Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5787947Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5788641Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5789061Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5789433Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5789664Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5789985Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5790333Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5790952Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5791433Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5792235Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5792651Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5793106Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5793686Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5794250Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5794895Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5795473Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5795804Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5796220Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5796686Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5797081Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5797425Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5798345Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5798673Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5799148Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5800006Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5800488Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5801022Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5801825Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5802550Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5802921Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5803529Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5804166Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5804672Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5805275Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5805663Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5806101Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5806691Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5807385Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5808536Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5808881Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5809341Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5809665Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5810032Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5810438Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5811215Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5811814Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5812315Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5812824Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5813147Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5813944Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5814572Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5814997Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5815607Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5816024Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5816483Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5816914Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5817246Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5817654Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5818219Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5818642Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5819389Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5819837Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5820273Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5820717Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5821135Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5821586Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5822068Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5822525Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5823173Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5823471Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5823731Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5824069Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5824378Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5824805Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5825178Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5825508Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5825907Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5826401Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5826704Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5827016Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5827343Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5827934Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5828282Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5828737Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5829227Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5829580Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5830078Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5830611Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5831128Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5831481Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5831792Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5832172Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5832628Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5833142Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5833925Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5834352Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5834826Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5835505Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5836024Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5836769Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5837949Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5838506Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5839026Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5839458Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5839822Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5840183Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5840620Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5841165Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5841462Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5841721Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5842240Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5842907Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5843287Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5843998Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5844540Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5845080Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5845547Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5846060Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5846463Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5846864Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5847293Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5847554Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5848044Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5848429Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5849257Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5849740Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5850306Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5850696Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5851151Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5851729Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5852459Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5853115Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5853643Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5853956Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5854362Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5854826Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5855206Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5855546Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5856241Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5856555Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5857018Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5858021Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5858488Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5859022Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5859833Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5860573Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5860952Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5861560Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5861948Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5862446Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5863051Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5863422Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5864083Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5864689Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5865384Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5866064Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5866409Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5866861Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5867188Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5867940Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5868361Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5869135Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5869660Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5869956Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5870241Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5870422Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5870766Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5871114Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5871346Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5871657Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5871879Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5872135Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5872362Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5872545Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5872770Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5872979Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5873199Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5873480Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5873721Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5873951Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5874179Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5874395Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5874782Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5875040Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5875284Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5875512Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5875671Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5875813Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5875991Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5876152Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5876497Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5876699Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5876880Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5877091Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5877350Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5877516Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5877685Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5878096Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5878333Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5878544Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5878837Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5879124Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5879301Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5879562Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5879842Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5880123Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5880311Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5880479Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5880682Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5880933Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5881196Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5881494Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5881729Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5881984Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5882350Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5882766Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5883174Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5883612Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5883899Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5884171Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5884401Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5884698Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5884890Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5885117Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5885413Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5885558Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5885695Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5885986Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5886348Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5886552Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5886941Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5887224Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5887505Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5887866Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5888144Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5888359Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5888583Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5888815Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5888953Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5889128Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5889299Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5889530Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5889728Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5889913Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5890131Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5890383Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5890676Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5890845Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5891017Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5891252Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5891456Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5891745Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5892036Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5892212Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5892591Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5892883Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5893160Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5893345Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5893516Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5893722Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5893964Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5894234Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5894532Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5894759Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5895047Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5895412Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5895696Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5896103Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5896548Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5896831Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5897108Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5897339Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5897531Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5897823Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5898064Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5898353Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5898506Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5898803Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5899085Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5899442Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5899647Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5900040Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5900321Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5900707Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5900960Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5901229Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5901451Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5901668Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5901895Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5902036Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5902215Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5902404Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5902750Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5902928Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5903096Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5903331Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5903525Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5903701Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5903919Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5904168Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5904332Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5904507Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5904679Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5904903Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5905105Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5905395Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5905681Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5905856Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5906113Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5906478Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5906751Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5906943Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5907103Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5907306Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5907547Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5907914Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5908320Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5908547Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5908792Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5909153Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5909433Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5909833Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5910277Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5910561Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5910831Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5911054Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5911247Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5911433Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5911655Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5911943Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5913071Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5913343Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5913858Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5914470Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5914910Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5915544Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5916066Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5916584Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5917084Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5917904Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5918378Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5918838Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5919316Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5919641Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5919965Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5920371Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5921152Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5921659Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5922281Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5922706Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5924384Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5927395Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5928170Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5928836Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5929360Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5929684Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5930094Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5930562Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5930965Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5931308Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5931985Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5932305Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5932783Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5933631Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5934107Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5934648Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5935455Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5936194Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5936826Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5937445Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5938004Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5938503Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5939108Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5939500Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5939934Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5940752Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5941459Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5942143Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5942479Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5942946Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5943277Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5943650Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5944067Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5944838Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5945413Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5945911Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5946416Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5946735Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5947344Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5948154Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5948596Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5949180Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5949595Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5950052Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5950484Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5950820Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5951229Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5951850Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5952286Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5952809Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5953253Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5953696Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5954135Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5954546Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5955004Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5955700Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5956155Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5956596Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5956894Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5957153Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5957486Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5957963Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5958408Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5958798Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5959144Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5959552Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5960028Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5960343Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5960659Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5960988Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5961420Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5961813Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5962361Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5962914Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5963255Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5963729Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5964263Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5964776Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5965118Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5965433Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5965824Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5966494Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5967001Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5967549Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5968132Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5968618Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5969298Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5969828Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5970793Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5971619Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5972150Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5972673Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5973106Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5973465Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5973835Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5974276Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5974811Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5975092Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5975351Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5975868Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5976535Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5976918Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5977647Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5978359Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5978891Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5979365Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5979883Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5980289Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5980691Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5981126Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5981628Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5981975Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5982339Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5982953Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5983433Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5983998Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5984388Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5984840Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5985633Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5986186Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5986841Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5987365Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5987678Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5988255Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5988732Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5989129Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5989482Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5990153Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5990477Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5990943Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5991785Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5992257Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5992804Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5993623Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5994366Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5994740Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5995414Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5995814Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5996320Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5996944Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5997611Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5998213Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5998812Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.5999509Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6000186Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6000528Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6001190Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6001532Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6001897Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6002307Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6003072Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6003640Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6004137Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6004650Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6004978Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6005593Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6006221Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6006646Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6007229Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6007645Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6008271Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6008718Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6009054Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6009474Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6009870Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6010281Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6010798Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6011245Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6011688Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6012404Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6012821Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6013271Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6013760Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6014216Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6014651Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6014946Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6015215Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6015741Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6016059Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6016500Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6016877Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6017210Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6017617Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6018236Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6018549Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6018864Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6019197Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6019627Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6020016Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6020554Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6021084Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6021419Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6021896Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6022419Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6022944Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6023306Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6023613Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6023989Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6024444Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6024936Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6025484Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6025910Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6026383Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6027265Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6027949Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6028690Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6029501Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6030032Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6030755Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6031193Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6031556Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6031914Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6032342Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6032886Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6033159Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6033422Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6033943Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6034617Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6034994Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6035711Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6036242Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6036767Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6037241Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6038084Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6038522Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6038942Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6039371Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6039633Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6039981Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6040339Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6040963Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6041454Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6042235Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6042639Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6043105Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6043681Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6044233Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6044892Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6045406Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6045933Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6046357Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6046818Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6047200Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6047542Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6048382Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6048689Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6049150Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6050010Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6050484Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6051020Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6051835Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6052558Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6052944Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6053559Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6053959Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6054473Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6055086Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6055469Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6055895Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6056493Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6057198Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6058255Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6058601Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6059048Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6059370Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6059750Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6060152Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6060927Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6061720Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6062223Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6062732Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6063061Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6063666Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6064288Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6064718Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6065308Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6065730Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6066201Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6066634Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6066970Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6067389Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6067935Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6068374Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6068909Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6069348Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6069782Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6070226Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6070626Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6071074Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6071568Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6072018Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6072661Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6072977Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6073240Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6073578Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6073901Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6074326Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6074700Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6075027Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6075587Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6076058Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6076370Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6076703Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6077025Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6077458Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6078026Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6078560Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6079098Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6079465Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6079944Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6080470Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6080995Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6081352Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6081666Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6082053Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6082507Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6083010Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6083571Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6083997Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6084469Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6085154Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6085689Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6086416Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6087459Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6088163Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6088683Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6089114Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6089482Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6089834Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6090268Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6091027Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6091312Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6091574Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6092110Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6092777Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6093153Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6093875Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6094407Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6094945Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6095477Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6095982Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6096384Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6096788Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6097213Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6097478Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6097983Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6098352Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6098969Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6099464Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6100025Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6100422Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6100886Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6101456Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6102004Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6102902Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6103432Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6103748Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6104165Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6104630Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6105011Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6105353Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6106236Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6106546Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6107015Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6108025Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6108505Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6109046Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6109860Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6110598Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6110980Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6111586Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6111982Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6112495Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6113063Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6113441Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6113874Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6114466Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6115158Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6115839Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6116177Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6116620Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6116953Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6117540Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6118101Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6118869Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6119449Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6119937Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6120441Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6120774Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6121646Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6122283Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6122706Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6123280Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6123694Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6124167Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6124594Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6124936Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6125361Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6125754Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6126159Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6126689Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6127127Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6127565Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6128167Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6128580Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6129035Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6129529Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6129975Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6130405Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6130711Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6130970Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6131297Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6131618Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6132051Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6132650Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6132999Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6133407Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6133873Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6134180Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6134500Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6134817Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6135243Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6135873Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6136411Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6136946Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6137288Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6137924Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6138467Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6139001Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6139359Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6139677Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6140065Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6140516Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6141011Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6141575Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6141994Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6142465Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6143163Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6143691Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6144418Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6145260Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6145780Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6146290Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6146734Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6147301Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6147664Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6148254Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6148790Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6149075Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6149342Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6149863Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6150533Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6151135Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6151857Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6152392Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6152929Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6153402Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6153914Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6154324Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6154738Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6155174Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6155443Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6155775Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6156122Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6156730Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6157212Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6157921Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6158330Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6158800Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6159372Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6159921Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6160581Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6161097Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6161412Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6161846Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6162538Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6162929Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6163281Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6163952Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6164256Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6164725Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6165567Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6166240Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6166794Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6167598Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6168479Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6168865Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6169481Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6169883Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6170405Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6171013Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6171394Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6171837Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6172431Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6173132Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6173830Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6174172Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6174616Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6174958Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6175328Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6175712Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6176154Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6176468Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6176903Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6177178Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6177363Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6177881Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6178273Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6178505Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6178826Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6179187Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6179446Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6179676Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6179866Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6180088Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6180296Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6180519Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6180801Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6181038Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6181275Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6181506Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6181719Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6181965Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6182227Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6182466Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6182702Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6182866Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6183008Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6183191Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6183357Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6183587Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6183788Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6183971Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6184183Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6184430Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6184604Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6184882Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6185050Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6185286Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6185492Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6185779Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6186071Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6186246Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6186582Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6186881Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6187158Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6187342Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6187510Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6187818Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6188060Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6188326Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6188625Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6188851Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6189106Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6189477Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6189762Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6190164Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6190607Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6190894Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6191174Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6191405Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6191595Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6191790Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6192016Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6192301Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6192451Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6192703Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6192988Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6193353Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6193555Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6193938Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6194226Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6194504Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6194851Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6195159Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6195375Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6195591Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6195817Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6195962Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6196141Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6196303Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6196538Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6196743Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6196918Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6197138Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6197383Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6197545Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6197809Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6197980Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6198209Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6198419Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6198712Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6198998Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6199177Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6199432Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6199711Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6199996Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6200181Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6200346Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6200670Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6200911Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6201170Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6201465Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6201691Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6201936Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6202302Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6202699Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6203094Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6203542Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6203821Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6204092Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6204325Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6204517Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6204706Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6204934Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6205227Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6205365Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6205500Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6205786Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6206145Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6206347Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6208130Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6209613Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6210491Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6211366Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6212020Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6212980Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6213403Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6214221Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6214479Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6218175Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6218564Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6219133Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6219569Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6220103Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6220496Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6221216Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6221818Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6222369Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6223039Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6223568Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6223887Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6224297Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6224771Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6225306Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6225652Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6226349Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6226652Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6227123Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6228158Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6228666Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6229217Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6230038Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6230760Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6231136Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6231757Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6232147Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6232666Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6233501Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6233883Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6234311Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6234905Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6235588Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6236263Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6236818Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6237273Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6237608Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6238402Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6238823Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6239593Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6240183Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6240690Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6241203Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6241531Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6242145Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6242777Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6243205Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6243786Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6244211Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6244687Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6245115Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6245450Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6245872Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6246258Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6246672Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6247201Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6247642Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6248523Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6248974Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6249386Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6249839Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6250341Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6250792Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6251225Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6251735Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6252012Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6252345Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6252654Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6253096Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6253468Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6253803Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6254220Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6254695Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6255008Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6255347Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6255666Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6256099Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6256494Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6257032Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6257568Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6258077Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6259169Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6264631Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6265182Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6265533Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6265843Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6266230Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6266678Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6267172Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6286580Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6287089Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6293371Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6294093Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6294625Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6295416Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6296237Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6297001Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6297530Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6298167Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6298534Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6298892Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6299324Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6299867Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6300149Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6300429Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6300955Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6301618Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6302010Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6302726Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6303268Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6303806Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6304276Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6304796Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6305200Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6305616Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6306041Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6306306Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6306648Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6306995Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6307602Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6367158Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6367892Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6368310Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6368783Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6369363Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6369915Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6370579Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6371338Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6371654Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6372075Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6372547Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6372939Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6373289Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6373962Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6374266Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6374756Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6375604Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6376076Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6376628Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6377434Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6378316Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6378726Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6379340Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6379736Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6380244Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6380842Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6381213Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6381643Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6382227Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6383138Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6383830Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6384170Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6384618Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6384955Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6385327Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6385726Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6386778Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6387361Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6388015Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6388536Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6388854Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6389452Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6390078Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6390513Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6391091Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6391516Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6391974Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6392397Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6392760Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6393180Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6393581Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6394009Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6394528Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6394961Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6395456Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6395890Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6396286Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6396742Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6397235Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6398067Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6398512Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6398815Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6399073Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6399403Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6399714Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6400137Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6400510Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6401068Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6401478Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6401946Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6402264Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6402574Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6402888Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6403327Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6403713Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6404242Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6404791Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6405137Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6405606Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6406132Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6406643Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6406986Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6407303Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6407684Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6408311Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6408819Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6409360Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6409775Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6410236Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6410913Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6411434Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6412179Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6413210Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6413737Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6414262Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6414700Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6415057Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6415425Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6416071Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6416622Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6416900Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6417173Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6417696Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6418542Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6418934Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6419641Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6420189Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6420720Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6421197Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6421701Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6422108Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6422514Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6422940Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6423222Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6423562Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6423913Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6424539Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6425015Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6425573Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6425973Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6426423Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6426994Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6427925Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6428597Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6429122Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6429449Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6429857Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6430316Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6430933Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6431285Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6431955Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6432264Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6432721Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6433556Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6434028Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6434556Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6435359Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6436081Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6436451Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6437055Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6437462Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6438121Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6438743Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6439136Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6439563Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6440149Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6440845Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6441520Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6441855Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6442309Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6442858Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6443228Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6443633Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6444364Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6444936Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6445433Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6445940Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6446493Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6447102Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6447890Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6448324Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6448903Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6449319Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6449775Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6450224Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6450572Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6450980Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6451375Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6451787Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6452300Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6452749Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6453190Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6453641Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6454057Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6454518Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6454999Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6455448Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6455887Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6456185Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6456444Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6456783Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6457318Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6457915Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6458310Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6458643Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6459043Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6459510Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6459819Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6460133Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6460681Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6461118Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6461506Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6462042Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6462578Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6462914Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6463390Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6463911Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6464434Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6464797Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6465101Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6465484Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6465932Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6466432Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6466980Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6467393Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6468069Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6468761Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6469287Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6470031Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6470845Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6471365Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6471891Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6472553Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6472915Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6473284Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6473713Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6474250Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6474538Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6474798Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6475319Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6476195Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6476584Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6477298Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6543642Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6544210Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6544690Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6545213Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6545626Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6546031Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6546470Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6546744Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6547089Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6547448Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6548220Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6548701Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6549284Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6549687Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6550142Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6550721Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6551264Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6551922Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6552448Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6552767Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6553419Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6553892Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6554273Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6554616Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6555299Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6555603Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6556070Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6557140Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6557626Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6707546Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6708544Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6709281Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6709675Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6710291Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6710712Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6711217Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6711818Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6712196Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6712621Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6713220Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6713916Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6714605Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6714958Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6715404Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6715728Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6716098Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6716496Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6717253Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6718000Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6718821Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6719328Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6719669Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6720279Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6720904Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6721339Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6722121Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6722547Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6723012Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6723430Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6723764Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6724182Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6724571Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6724976Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6725501Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6725950Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6726382Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6726821Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6727225Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6727675Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6728341Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6728797Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6729232Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6729537Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6729808Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6730140Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6730450Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6730884Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6731261Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6731600Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6732005Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6732478Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6732998Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6733328Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6733646Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6734068Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6734461Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6734996Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6735530Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6736072Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6736555Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6737080Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6737592Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6738117Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6738432Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6738815Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6739271Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6739777Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6740332Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6740763Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6741235Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6741912Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6742445Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6743174Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6744001Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6744840Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6745436Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6745929Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6746406Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6746832Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6747302Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6829824Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6830553Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6830988Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6831653Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6832380Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6832825Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6833632Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6834337Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6835161Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6835769Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6836342Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6836794Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6837394Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6854888Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6855251Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6855687Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6877316Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6878193Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6878701Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6879265Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6879682Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6880145Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6880711Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6881261Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6881929Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6882446Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6882767Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6883174Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6883632Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6884026Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6884366Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6885051Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6885619Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6886093Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6886931Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6887403Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6888119Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6889079Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6890023Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6890402Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6891007Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6891412Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6891906Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6892506Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6892886Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6893318Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6893918Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6894611Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6895342Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6895682Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6896137Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6896467Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6896839Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6897246Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6898161Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6898742Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6899252Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6899753Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6900078Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6900698Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6901548Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6901971Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6902550Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6902968Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6903425Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6903882Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6904431Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6904855Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6905254Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6905666Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6906186Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6906635Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6907066Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6907495Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6908068Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6908537Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6909028Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6909484Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6909915Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6910209Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6910478Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6910799Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6911106Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6911537Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6911924Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6912256Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6912654Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6913127Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6913431Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6913751Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6914075Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6914496Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6914888Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6915661Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6916201Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6916546Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6917031Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6917559Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6918232Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6918598Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6919128Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6919521Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6919985Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6920479Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6921031Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6921460Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6921924Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6922600Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6923140Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6923873Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6924680Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6925212Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6925729Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6926156Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6926533Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6926898Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6927326Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6928039Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6928321Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6928576Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6929091Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6929764Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6930151Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6931082Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6931626Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6932149Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6932620Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6933131Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6933534Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6933935Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6934589Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6934862Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6935200Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6935564Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6936172Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6936656Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6937211Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6937616Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6938239Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6938819Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6939362Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6940009Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6940532Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6940845Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6941281Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6941843Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6942237Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6942578Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6943267Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6943574Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6944036Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6944884Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6945358Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6946113Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6946938Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6947657Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6948196Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6948809Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6949200Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6949915Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6950534Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6950913Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6951341Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6951949Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6952651Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6953328Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6953691Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6954140Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6954478Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6954858Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6955261Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6956039Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6956620Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6957128Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6957637Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6958133Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6958749Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6959373Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6959803Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6960668Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6961095Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6961788Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6962227Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6962566Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6962992Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6963385Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6963799Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6964330Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6964970Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6965422Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6965871Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6966274Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6966725Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6967228Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6967674Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6968283Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6968605Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6968872Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6969207Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6969515Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6969952Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6970324Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6970660Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6971077Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6971549Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6971867Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6972202Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6972524Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6972950Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6973342Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6973874Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6974410Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6974763Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6975238Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6975770Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6976566Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6976922Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6977230Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6977625Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6978239Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6978743Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6979293Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6979944Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6980470Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6981188Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6981731Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6982468Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6983291Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6983838Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6984356Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6984790Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6985148Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6985503Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6985931Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6986471Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6986745Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6987010Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6987552Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6988380Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6988768Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6989497Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6990034Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6990565Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6991058Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6991778Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6992188Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6992608Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6993034Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6993299Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6993637Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6993950Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6994386Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6994963Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6995372Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6995784Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6996251Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6996576Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6996899Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6997224Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6997664Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6998217Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6998762Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6999320Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.6999660Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7000138Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7000674Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7001190Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7001535Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7001848Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7002240Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7002700Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7003204Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7003760Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7004184Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7004659Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7005336Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7005872Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7006825Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7007648Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7008348Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7008883Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7009321Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7009683Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7010264Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7010709Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7011247Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7011525Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7011790Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7012311Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7012981Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7013358Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7014091Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7014645Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7015173Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7015647Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7016167Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7016571Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7016975Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7017418Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7017692Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7018199Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7018591Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7019263Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7019749Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7020315Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7020718Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7021183Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7021979Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7022543Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7023204Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7023732Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7024058Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7024471Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7024943Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7025551Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7025901Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7026585Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7026900Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7027372Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7028382Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7028877Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7029434Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7030253Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7030992Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7031366Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7031971Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7032376Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7032877Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7033493Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7033879Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7034309Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7034898Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7035607Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7036291Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7036645Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7037316Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7037657Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7038191Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7038609Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7039378Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7039952Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7040466Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7041185Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7041519Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7042145Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7042779Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7043206Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7043793Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7044208Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7044678Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7045024Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7045335Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7045766Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7046151Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7046486Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7046892Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7047363Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7047681Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7048174Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7048508Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7048946Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7049336Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7049882Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7050430Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7050768Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7051250Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7051794Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7052520Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7052879Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7053201Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7053588Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7054043Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7054562Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7055120Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7055748Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7056228Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7056908Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7057438Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7058340Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7059171Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7059705Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7060233Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7060662Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7061018Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7061380Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7061807Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7062341Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7062625Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7062898Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7063425Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7064106Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7064488Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7065208Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7065749Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7066269Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7066746Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7067501Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7068083Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7068501Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7068938Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7069204Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7069534Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7069856Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7070291Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7070883Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7071233Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7071651Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7072125Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7072440Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7072814Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7073158Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7073592Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7073993Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7074535Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7075096Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7075450Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7075930Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7076463Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7076998Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7077349Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7077657Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7078225Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7078693Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7079195Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7079762Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7080179Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7080645Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7081338Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7081871Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7082815Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7083650Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7084177Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7084689Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7085139Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7085490Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7086105Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7086563Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7087114Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7087388Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7087658Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7088359Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7089048Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7089442Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7090176Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7090721Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7091256Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7091727Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7092246Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7092665Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7093075Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7093518Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7093791Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7094143Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7094495Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7095108Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7095657Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7096224Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7096618Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7097085Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7098028Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7098588Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7099255Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7099770Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7100085Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7100507Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7100971Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7101555Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7101911Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7102577Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7102882Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7103352Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7104198Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7104663Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7105224Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7106046Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7106783Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7107167Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7118611Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7119063Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7119596Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7120227Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7120608Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7120954Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7121262Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7121697Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7122078Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7122416Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7122826Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7123314Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7123859Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7124190Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7124515Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7124947Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7125338Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7125879Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7126411Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7126968Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7127462Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7240644Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7241212Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7241571Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7241900Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7242294Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7242755Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7243275Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7243837Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7244259Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7244735Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7245404Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7245919Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7246666Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7247503Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7248201Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7248728Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7249156Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7249512Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7249883Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7250307Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7250849Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7251385Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7251655Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7252179Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7252864Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7253250Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7253972Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7254517Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7255240Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7255732Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7256256Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7256660Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7257066Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7257500Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7257937Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7281570Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7281983Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7282608Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7283096Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7283662Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7284053Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7284506Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7285080Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7285631Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7286288Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7286815Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7287127Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7287533Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7288167Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7288561Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7288906Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7289624Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7290179Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7290651Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7291496Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7291959Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7292493Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7293333Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7294256Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7294629Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7295231Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7295771Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7296280Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7296889Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7297269Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7297868Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7298490Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7299184Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7299862Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7300208Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7300652Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7300982Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7301364Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7301772Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7302099Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7302403Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7302842Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7303210Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7303541Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7303947Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7304416Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7304952Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7305273Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7305593Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7306025Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7306414Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7306945Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7307478Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7307995Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7308691Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7309221Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7309740Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7310086Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7310388Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7310783Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7311235Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7311727Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7312301Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7312738Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7313201Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7313887Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7314406Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7315132Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7315952Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7316486Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7316995Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7317439Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7317951Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7318317Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7318751Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7319282Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7319563Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7320047Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7320566Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7321222Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7321615Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7322319Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7322849Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7323375Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7324054Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7324563Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7324963Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7325369Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7325793Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7326055Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7326398Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7326748Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7327364Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7328018Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7328570Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7328959Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7329408Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7329984Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7330594Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7331249Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7331779Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7332099Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7332513Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7332979Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7333365Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7333718Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7334389Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7334919Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7335399Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7336240Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7336707Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7337259Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7338213Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7338944Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7339541Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7340157Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7340558Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7341083Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7341683Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7342060Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7342500Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7343107Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7343800Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7344490Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7344823Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7345272Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7345610Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7345975Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7346386Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7347164Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7347508Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7347992Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7348442Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7348819Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7349160Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7349564Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7350046Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7350576Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7350894Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7351208Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7351657Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7352055Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7352606Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7353168Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7353786Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7354271Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7354802Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7355317Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7355666Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7355984Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7356363Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7356812Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7357313Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7358045Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7358477Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7358960Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7359640Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7360164Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7360902Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7361731Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7362275Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7362811Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7363250Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7363610Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7363984Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7364422Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7364953Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7365471Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7365734Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7366252Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7366920Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7367320Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7368196Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7368750Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7369496Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7369975Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7370486Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7370904Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7371306Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7371736Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7372008Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7372342Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7372670Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7373112Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7373486Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7373821Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7374223Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7374686Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7375000Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7375324Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7375647Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7376084Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7376492Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7377033Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7377569Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7378079Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7378557Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7379075Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7379598Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7379951Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7380491Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7380886Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7381350Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7381844Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7382395Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7382822Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7383306Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7384183Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7384723Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7385453Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7386273Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7386807Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7387319Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7387920Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7388311Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7388667Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7389093Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7389631Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7389922Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7390178Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7390694Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7391367Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7391761Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7392465Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7393008Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7393528Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7393996Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7394518Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7394919Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7395332Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7395969Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7396275Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7396702Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7397084Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7397423Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7397979Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7398453Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7398987Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7399313Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7399636Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7400056Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7400435Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7400979Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7401519Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7401853Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7402331Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7402873Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7403402Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7403757Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7404060Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7404439Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7404886Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7405384Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7405924Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7406350Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7406826Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7407496Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7408189Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7408940Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7409761Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7410296Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7411027Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7411457Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7411816Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7412174Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7412608Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7413142Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7413423Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7413884Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7414420Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7415104Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7415480Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7416194Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7416741Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7417271Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7417904Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7418444Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7418845Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7419244Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7419674Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7419943Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7420271Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7420632Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7421245Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7421743Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7422310Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7422702Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7423162Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7423752Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7424300Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7424957Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7425706Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7426018Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7426426Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7426889Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7427267Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7427603Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7428432Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7428953Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7429420Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7430264Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7430727Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7431258Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7432066Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7432792Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7433171Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7433786Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7434179Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7434678Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7435273Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7435643Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7436072Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7436676Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7437363Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7438190Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7438541Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7438983Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7439309Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7439682Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7440084Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7441068Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7441654Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7441997Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7442315Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7442744Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7443117Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7443444Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7443849Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7444527Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7444845Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7445160Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7445487Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7445914Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7446306Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7446841Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7447372Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7447882Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7448379Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7448901Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7449410Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7449765Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7450073Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7450449Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7450909Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7451418Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7451985Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7452482Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7452943Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7453614Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7454148Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7454886Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7455710Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7456449Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7456963Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7457394Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7457911Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7458273Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7458696Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7459446Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7459736Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7459996Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7460534Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7461215Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7461605Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7462328Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7462866Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7463398Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7463877Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7464384Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7464800Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7465210Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7465638Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7465903Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7466249Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7466608Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7467230Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7467866Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7468456Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7468852Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7469310Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7469889Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7470440Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7471368Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7471899Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7472212Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7472621Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7473087Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7473472Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7473815Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7474704Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7475030Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7475495Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7476348Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7476818Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7477356Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7478327Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7479082Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7479464Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7480081Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7480472Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7480980Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7481589Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7481979Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7482474Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7483093Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7483787Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7484459Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7484806Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7485256Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7485582Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7486194Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7486598Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7486933Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7487245Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7487675Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7488214Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7488554Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7488953Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7489632Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7489961Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7490265Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7490587Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7491012Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7491392Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7491922Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7492459Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7492799Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7493283Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7493825Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7494341Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7494694Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7495008Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7495445Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7495898Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7496397Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7496953Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7497390Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7498054Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7498719Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7499201Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7499892Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7500712Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7501462Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7501977Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7502414Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7502765Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7503114Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7503546Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7504077Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7504561Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7504849Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7505363Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7506019Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7506409Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7507124Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7507656Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7508475Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7508969Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7509479Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7509886Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7510287Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7510717Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7510996Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7511329Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7511683Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7512313Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7512805Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7513365Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7513774Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7514230Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7514806Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7515373Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7516053Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7516804Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7517139Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7517558Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7518192Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7518598Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7518942Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7519616Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7520153Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7520623Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7521463Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7521945Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7522477Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7523284Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7524028Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7524420Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7525030Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7525433Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7525932Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7526541Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7526931Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7527373Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7528139Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7528859Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7529546Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7529884Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7530340Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7530670Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7531045Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7531673Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7532442Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7532776Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7533093Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7533531Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7533898Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7534228Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7534640Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7535308Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7535629Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7535954Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7536272Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7536696Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7537092Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7537631Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7538345Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7538791Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7539272Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7539802Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7540327Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7540674Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7540979Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7541378Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7541835Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7542343Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7542912Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7543342Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7543812Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7544504Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7545036Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7545771Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7546611Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7547351Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7548030Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7548472Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7548828Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7549182Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7549628Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7550387Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7550678Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7550938Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7551452Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7552111Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7552506Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7553226Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7553767Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7554312Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7554791Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7555303Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7555715Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7556122Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7556544Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7556806Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7557136Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7557446Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7558039Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7558417Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7558750Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7559152Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7559618Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7559922Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7560234Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7560558Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7560990Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7561599Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7562145Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7562688Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7563026Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7563504Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7564027Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7564544Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7565112Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7565428Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7565811Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7566265Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7566761Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7567315Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7567899Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7568385Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7569071Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7569607Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7570329Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7571148Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7571687Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7572193Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7572634Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7573014Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7573367Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7573790Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7574327Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7574601Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7574857Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7575379Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7576054Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7576664Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7577381Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7578075Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7578599Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7579064Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7579580Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7580204Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7580624Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7581057Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7581319Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7581656Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7582020Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7582626Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7583114Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7583680Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7584088Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7584427Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7584747Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7585182Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7585555Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7585894Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7586299Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7586760Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7587085Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7587403Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7587870Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7588326Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7588716Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7589246Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7589787Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7590132Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7590603Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7591397Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7591925Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7592269Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7592579Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7592968Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7593419Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7593907Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7594460Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7595094Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7595618Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7596304Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7596825Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7597555Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7598530Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7599078Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7599600Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7600043Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7600397Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7600762Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7601201Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7601738Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7602016Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7602289Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7602810Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7603471Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7603863Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7604579Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7605117Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7605738Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7606222Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7606956Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7607377Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7607942Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7608378Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7608655Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7608994Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7609347Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7609971Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7610665Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7611225Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7611626Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7612080Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7612422Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7612737Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7613171Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7613549Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7613901Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7614307Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7614777Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7615092Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7615430Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7615749Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7616182Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7616576Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7617118Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7617665Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7618191Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7618675Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7619203Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7619726Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7620079Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7620384Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7620787Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7621449Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7621949Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7622508Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7622937Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7623403Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7624082Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7624607Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7625547Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7626372Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7626901Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7627406Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7628005Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7628363Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7628736Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7629187Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7629721Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7629993Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7630254Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7630775Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7631451Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7631844Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7632565Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7633106Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7633628Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7634099Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7634605Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7635012Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7635416Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7635844Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7636123Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7636689Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7637054Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7637663Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7638313Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7638874Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7639265Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7639721Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7640508Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7641076Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7641740Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7642272Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7642590Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7643011Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7643479Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7643872Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7644231Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7644908Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7645226Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7645697Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7646545Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7647006Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7647564Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7648558Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7649287Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7649671Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7650279Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7650670Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7651183Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7651788Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7652374Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7652812Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7653401Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7654089Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7654772Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7655102Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7655756Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7656106Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7656467Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7656868Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7657632Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7658359Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7658853Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7659372Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7659700Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7660293Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7660934Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7661358Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7661931Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7662354Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7662831Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7663273Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7663620Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7664030Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7664417Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7664836Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7665360Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7665806Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7666254Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7666921Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7667329Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7669208Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7669708Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7670256Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7670656Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7670941Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7671195Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7671883Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7672178Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7672571Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7672925Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7673264Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7673766Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7674208Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7674504Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7674820Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7675346Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7675771Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7676124Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7676646Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7677286Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7677600Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7678179Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7678714Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7679331Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7679651Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7679944Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7680328Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7680881Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7681343Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7681860Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7682273Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7682835Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7683675Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7684308Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7685010Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7685915Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7686421Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7687099Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7687639Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7688107Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7688433Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7688837Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7689377Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7689764Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7690005Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7690490Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7691272Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7691647Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7692315Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7692840Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7693378Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7693848Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7694362Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7694797Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7695224Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7695711Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7695992Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7696407Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7696781Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7697410Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7698055Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7698855Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7699269Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7699727Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7700301Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7700857Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7701502Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7702022Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7702622Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7703041Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7703505Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7703907Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7704255Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7704935Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7705247Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7705715Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7706579Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7707052Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7707587Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7708653Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7709441Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7709788Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7710454Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7710817Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7711372Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7711931Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7712369Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7712760Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7713390Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7714042Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7714972Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7715284Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7715793Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7716082Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7716505Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7717986Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7718775Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7719580Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7720089Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7720598Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7720925Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7721546Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7722184Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7722617Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7723219Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7723632Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7724096Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7724528Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7724868Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7725280Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7725685Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7726104Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7726633Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7727082Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7727521Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7728126Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7728550Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7728998Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7729484Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7729954Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7730605Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7730913Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7731176Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7731523Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7731830Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7732255Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7732637Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7732969Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7733573Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7734053Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7734366Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7734678Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7734999Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7735430Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7735818Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7736363Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7736895Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7737248Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7737895Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7788463Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7789032Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7789399Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7789717Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7790108Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7790568Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7791076Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7791640Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7792059Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7792529Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7793205Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7793720Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7794456Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7795571Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7796129Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7796650Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7797083Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7797446Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7797961Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7798408Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7799165Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7799461Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7799724Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7800251Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7800934Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7801323Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7802047Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7802592Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7803132Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7803608Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7804123Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7804523Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7804924Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7805353Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7805614Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7805954Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7806337Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7806952Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7807431Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7815205Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7815651Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7816120Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7832836Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7833480Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7834391Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7834929Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7835250Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7835665Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7836140Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7836526Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7836870Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7837968Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7838290Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7838764Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7839620Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7840092Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7840630Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7841438Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7842172Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7842553Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7843162Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7843548Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7844050Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7844658Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7845047Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7845484Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7846084Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7846774Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7847444Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7847945Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7854111Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7854499Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7855121Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7855540Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7856311Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7856926Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7857424Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7858097Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7858437Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7859252Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7859892Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7860326Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7860915Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7861332Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7861800Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7862228Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7862577Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7862996Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7863398Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7863805Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7864320Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7864765Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7865197Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7865626Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7866035Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7866500Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7866994Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7867455Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7868045Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7868350Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7868618Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7868944Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7869250Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7869692Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7870300Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7870647Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7871057Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7871526Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7871839Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7872162Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7872477Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7872903Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7873511Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7874056Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7874588Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7874934Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7875414Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7875943Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7876460Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7876828Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7877138Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7877522Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7879277Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7902777Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7903328Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7903736Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7905118Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7906500Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7907051Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7907934Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7908756Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7909301Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7909816Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7910243Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7910855Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7911212Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7911645Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7912182Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7912454Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7912710Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7913230Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7913894Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7914493Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7915220Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7915753Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7916269Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7916753Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7917257Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7917659Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7926124Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7926592Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7926865Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7927212Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7927564Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7928328Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7928821Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7929375Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7929770Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7930235Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7930804Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7931341Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7932001Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7932527Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7932839Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7933274Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7933977Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7934366Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7934791Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7935467Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7935772Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7936229Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7937072Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7937980Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7943292Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7944119Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7944833Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7945224Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7945828Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7946235Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7946752Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7947356Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7952688Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7953167Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7953759Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7954441Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7955145Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7955495Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7955946Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7956287Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7956650Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7957056Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7957979Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7958569Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7959302Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7959815Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7960147Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7960763Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7961387Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7961822Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7962387Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7963011Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7963491Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7963911Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7964241Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7964658Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7965041Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7965446Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7965964Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7966406Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7966845Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7967281Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7967690Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7974202Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7974730Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7977571Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7978148Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7978465Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7978705Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7978983Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7979248Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7979630Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7979951Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7980259Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7980633Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7981080Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7981388Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7981924Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7983532Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7983969Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7984354Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7984981Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7985476Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7985789Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7986439Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7986936Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7987399Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7987889Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7988293Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7988662Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7989011Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7989392Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7990271Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7990672Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7991103Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7991744Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7992233Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7992921Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7993679Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7994172Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7994639Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7995047Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7995375Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7995761Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7996153Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7996638Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7996906Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7997156Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7998039Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7998667Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7999024Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.7999686Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8000174Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8000647Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8001269Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8001726Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8002117Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8002490Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8002877Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8003118Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8003427Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8003693Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8004219Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8004684Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8005194Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8005612Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8006067Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8006587Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8007090Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8007877Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8008471Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8008739Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8009098Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8009517Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8009855Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8010181Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8010778Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8011068Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8011734Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8012429Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8012868Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8013387Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8014253Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8014939Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8015516Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8016091Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8016444Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8016914Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8017460Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8018002Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8018413Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8018975Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8019628Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8020261Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8020566Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8020991Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8021293Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8021633Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8021997Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8022738Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8023267Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8023729Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8024227Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8024520Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8025060Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8025623Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8026240Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8026861Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8027302Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8027912Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8028464Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8028789Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8029174Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8029731Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8030119Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8030621Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8031026Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8031442Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8031864Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8032205Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8032631Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8033113Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8033532Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8034030Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8034313Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8034551Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8034859Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8035151Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8035549Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8035899Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8036227Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8036597Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8037045Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8037345Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8037641Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8038129Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8038545Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8038913Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8039435Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8040174Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8040499Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8040938Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8041425Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8041928Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8042239Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8042518Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8043100Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8043535Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8043995Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8044520Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8044901Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8045320Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8045943Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8046433Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8047120Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8048148Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8048649Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8049152Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8049580Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8049927Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8050293Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8050743Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8051253Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8051513Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8051768Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8052251Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8052835Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8053214Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8053914Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8054753Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8055260Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8055702Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8056187Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8056567Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8057002Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8057401Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8060101Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8060466Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8060798Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8061371Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8061852Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8062685Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8063056Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8063447Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8063932Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8064429Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8064989Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8065438Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8065737Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8066127Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8066555Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8067060Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8067412Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8068313Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8068583Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8069003Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8069495Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8069754Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8070065Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8070699Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8071108Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8071316Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8071655Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8071872Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8072144Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8072595Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8072817Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8073059Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8073393Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8073778Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8074153Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8074331Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8074581Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8074757Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8074958Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8075174Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8075605Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8075922Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8076208Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8076483Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8076658Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8076991Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8077333Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8077556Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8078329Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8078584Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8078860Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8079258Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8079452Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8079681Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8079896Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8080130Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8080414Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8080650Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8080993Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8081233Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8081446Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8081693Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8081955Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8082191Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8082421Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8082579Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8082717Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8082901Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8083067Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8083298Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8083497Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8083675Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8083884Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8084140Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8084305Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8084472Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8084644Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8084882Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8085088Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8085380Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8085678Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8085854Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8086114Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8086405Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8086685Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8086954Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8087122Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8087327Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8087569Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8088094Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8088419Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8088645Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8089035Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8089411Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8089695Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8090101Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8090542Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8090831Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8091111Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8091349Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8091542Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8091734Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8091962Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8092251Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8092401Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8092535Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8092819Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8093193Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8093396Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8093783Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8094071Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8094349Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8094595Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8094873Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8095196Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8095410Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8095681Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8095821Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8096000Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8096192Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8096527Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8096783Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8097174Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8097378Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8097619Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8098206Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8098514Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8098867Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8099150Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8099322Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8099543Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8099788Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8099995Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8100172Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8100543Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8100707Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8100981Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8101471Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8101732Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8102030Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8102473Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8102877Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8103074Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8103416Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8103756Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8104029Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8104355Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8104560Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8104801Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8105123Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8105603Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8105973Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8106149Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8106390Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8106559Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8106754Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8106968Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8107391Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8107878Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8108235Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8108512Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8108680Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8109014Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8109348Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8109577Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8109894Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8110113Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8110362Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8110596Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8110771Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8110991Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8111201Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8111424Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8111839Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8112075Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8112303Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8112532Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8112753Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8112988Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8113248Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8113590Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8113824Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8113980Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8114124Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8114303Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8114465Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8114699Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8114893Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8115074Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8115292Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8115547Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8115709Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8115875Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8116056Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8116285Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8116488Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8116782Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8117072Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8117252Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8117513Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8118018Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8118306Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8118498Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8118658Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8118860Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8119245Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8119561Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8120004Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8120232Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8120478Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8120849Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8121133Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8121532Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8122115Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8122399Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8122672Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8122905Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8123101Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8123287Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8123514Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8123809Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8123952Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8124087Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8124376Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8124738Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8124938Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8125327Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8125610Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8125895Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8126155Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8126426Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8126636Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8126854Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8127082Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8127215Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8127391Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8127675Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8128040Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8128235Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8128419Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8128632Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8128881Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8129052Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8129223Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8129512Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8129756Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8130223Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8130749Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8131270Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8131551Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8131813Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8132107Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8132391Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8132582Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8132752Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8132958Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8133203Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8133475Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8133770Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8133996Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8134257Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8134637Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8134921Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8135330Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8135774Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8136052Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8136332Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8136719Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8136913Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8137111Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8137344Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8137633Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8138003Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8138156Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8138444Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8138943Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8139148Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8139535Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8139826Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8140103Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8140351Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8140628Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8140842Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8141057Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8141291Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8141427Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8141606Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8141800Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8142145Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8142401Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8142710Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8142925Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8143101Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8143267Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8143505Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8143702Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8143883Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8144103Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8144352Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8144635Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8144808Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8144978Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8145206Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8145416Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8145703Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8145987Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8146175Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8146506Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8146793Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8147076Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8147262Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8147422Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8147630Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8148045Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8148311Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8148618Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8148848Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8149092Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8149462Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8149745Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8150147Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8150594Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8150882Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8151155Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8151390Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8151583Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8151772Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8152003Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8152291Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8152433Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8152694Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8152980Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8153341Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8153540Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8153936Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8154222Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8154503Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8154862Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8155134Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8155347Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8155567Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8155792Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8155928Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8156111Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8156307Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8156648Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8156913Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8157220Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8157428Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8157675Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8158089Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8158256Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8158491Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8158689Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8158873Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8159095Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8159339Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8159502Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8159670Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8159851Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8160079Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8160283Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8160574Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8160998Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8161178Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8161440Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8161725Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8162003Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8162189Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8162350Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8162657Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8162901Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8163167Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8163465Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8163698Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8163959Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8164334Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8164623Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8165034Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8165475Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8165759Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8166038Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8166270Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8166465Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8166658Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8166893Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8167181Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8167325Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8167459Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8167924Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8168323Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8168523Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8168922Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8169339Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8169617Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8169864Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8170139Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8170350Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8170561Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8170895Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8171035Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8171214Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8171406Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8171741Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8171998Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8172306Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8172512Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8172756Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8173075Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8173366Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8173716Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8173997Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8174163Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8174382Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8174639Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8174844Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8175026Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8175397Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8175558Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8175808Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8176289Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8176533Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8176828Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8177358Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8177862Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8178063Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8178394Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8178600Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8178872Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8179314Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8179511Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8179744Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8180071Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8180444Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8180810Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8180995Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8181238Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8181409Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8181611Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8181825Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8182244Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8182559Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8182825Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8183105Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8183282Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8183611Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8183944Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8184168Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8184480Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8184704Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8184963Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8185344Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8185523Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8185754Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8185959Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8186174Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8186454Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8186694Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8186998Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8187228Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8187445Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8187684Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8188052Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8188298Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8188525Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8188684Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8188834Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8189017Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8189182Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8189416Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8189613Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8189792Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8190012Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8190261Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8190425Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8190600Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8190770Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8190997Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8191204Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8191494Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8191780Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8191959Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8192221Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8192506Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8192901Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8193093Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8193254Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8193458Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8193702Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8193962Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8194257Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8194583Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8195051Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8195640Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8195937Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8196345Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8196789Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8197076Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8197360Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8197591Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8197987Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8198183Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8198415Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8198706Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8198848Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8198983Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8199277Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8199640Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8199843Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8200240Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8200525Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8200803Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8201059Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8201334Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8201712Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8201936Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8202166Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8202304Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8202489Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8202678Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8203016Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8203386Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8203693Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8203900Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8204144Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8204457Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8204751Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8205107Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8205385Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8205556Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8205779Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8206026Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8206230Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8206415Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8206793Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8206949Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8207201Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8207669Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8208082Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8208375Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8208822Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8209219Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8209425Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8209878Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8210086Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8210362Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8210687Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8210882Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8211119Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8211437Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8211920Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8212294Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8212472Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8212710Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8212888Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8213082Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8213297Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8213717Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8214034Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8214302Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8214573Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8214746Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8215074Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8215408Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8215643Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8215958Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8216177Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8216434Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8216664Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8216843Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8217073Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8217279Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8217501Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8218088Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8218336Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8218573Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8218811Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8219027Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8219267Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8219544Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8219911Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8220142Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8220305Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8220442Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8220617Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8220784Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8221013Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8221213Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8221394Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8221613Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8221866Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8222033Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8222202Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8222374Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8222602Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8222810Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8223101Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8223394Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8223582Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8223844Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8224129Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8224410Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8224593Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8224754Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8224965Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8225212Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8225588Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8225891Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8226118Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8226366Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8226739Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8227023Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8227540Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8228172Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8228458Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8228732Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8228966Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8229158Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8229348Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8229584Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8229880Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8230020Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8230160Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8230444Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8230804Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8231010Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8231402Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8231693Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8231980Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8232226Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8232496Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8232710Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8233004Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8233385Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8233626Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8233938Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8234438Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8234797Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8235075Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8235383Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8235597Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8235852Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8236177Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8236607Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8236964Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8237243Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8237425Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8237651Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8238139Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8238349Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8238562Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8238956Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8239118Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8239386Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8239853Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8240100Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8240400Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8240850Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8241250Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8241459Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8241790Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8241997Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8242276Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8242600Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8242929Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8243168Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8243490Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8243866Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8244239Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8244418Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8244657Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8244935Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8245134Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8245347Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8245774Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8246086Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8246361Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8246640Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8246812Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8247141Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8247482Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8247876Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8248207Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8248679Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8249178Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8249642Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8250012Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8250393Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8250685Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8250912Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8251197Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8251433Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8251667Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8251898Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8252303Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8252548Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8252815Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8253054Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8253286Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8253444Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8253582Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8253779Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8254050Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8254290Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8254492Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8254677Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8254893Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8255146Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8255317Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8255486Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8255655Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8255894Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8256101Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8256393Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8256690Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8256869Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8257130Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8257425Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8257908Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8258165Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8258342Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8258548Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8258792Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8259066Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8259368Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8259596Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8259849Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8260223Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8260644Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8261050Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8261497Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8261781Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8262057Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8262383Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8262575Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8262766Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8262994Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8263285Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8263431Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8263564Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8263848Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8264216Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8264421Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8264822Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8265115Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8265392Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8265639Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8265919Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8266132Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8266351Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8266585Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8266720Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8266901Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8267090Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8267436Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8267693Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8268186Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8268912Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8269359Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8269893Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8270400Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8270938Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8271231Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8271413Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8271809Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8272068Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8272274Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8272457Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8272830Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8272992Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8273246Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8273714Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8273970Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8274256Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8274697Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8275098Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8275308Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8275727Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8275950Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8276230Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8276559Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8276763Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8276990Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8277311Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8277696Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8278341Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8278665Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8278910Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8279083Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8279283Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8279503Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8279920Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8280341Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8280621Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8280891Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8281060Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8281395Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8281731Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8281953Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8282263Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8282493Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8282744Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8282978Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8283158Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8283379Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8283590Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8283811Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8284099Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8284347Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8284582Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8284816Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8285036Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8285279Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8285545Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8285789Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8286021Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8286277Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8286420Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8286599Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8286766Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8286999Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8287205Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8287383Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8287596Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8288112Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8288287Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8288455Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8288632Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8288863Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8289071Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8289367Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8289657Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8289836Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8290108Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8290396Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8290673Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8290863Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8291027Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8291232Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8291480Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8291750Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8292054Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8292288Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8292536Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8292907Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8293196Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8293599Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8294048Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8294468Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8294743Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8294975Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8295170Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8295363Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8295628Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8295921Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8296168Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8296310Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8296603Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8296975Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8297175Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8297562Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8298035Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8298321Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8298576Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8298850Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8299062Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8299277Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8299507Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8299642Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8299819Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8300020Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8300360Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8300621Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8300927Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8301133Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8301375Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8301692Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8301989Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8302343Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8302751Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8302917Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8303137Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8303389Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8303592Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8303771Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8304144Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8304421Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8304674Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8305144Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8305393Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8305680Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8306128Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8306528Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8306728Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8307061Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8307266Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8307537Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8308073Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8308278Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8308510Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8308843Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8309218Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8309586Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8309768Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8310325Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8310646Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8310997Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8311589Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8312309Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8312841Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8313298Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8313766Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8314068Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8314624Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8315453Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8315863Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8316420Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8316813Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8317247Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8317642Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8318120Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8318526Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8318896Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8319277Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8319767Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8320165Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8320561Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8320972Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8321339Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8321758Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8322214Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8322633Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8323013Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8323263Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8323495Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8323787Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8324058Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8324446Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8324781Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8325273Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8325644Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8326077Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8326354Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8326646Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8326932Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8327314Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8327668Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8328544Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8328914Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8329116Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8329384Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8329681Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8329973Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8330160Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8330334Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8330548Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8330804Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8331074Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8331375Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8331607Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8331854Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8332229Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8332531Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8332943Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8333390Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8333681Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8333955Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8334191Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8334384Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8334712Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8334945Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8335239Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8335385Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8335522Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8335813Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8336180Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8336380Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8336872Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8337163Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8337444Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8337696Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8338165Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8338378Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8338597Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8338831Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8338973Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8339159Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8339349Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8339691Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8339953Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8340253Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8340458Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8340705Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8341021Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8341312Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8341676Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8341954Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8342121Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8342349Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8342601Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8342928Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8343113Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8343485Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8343649Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8343905Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8344372Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8344617Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8345024Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8345471Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8345870Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8346077Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8346406Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8346615Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8346893Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8347221Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8347419Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8347658Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8348222Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8348606Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8348985Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8349165Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8349407Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8349582Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8349781Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8349994Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8350420Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8350730Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8350996Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8351417Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8351587Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8351911Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8352252Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8352474Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8352784Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8353013Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8353365Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8353600Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8353783Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8354005Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8354211Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8354431Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8354717Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8354950Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8355186Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8355425Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8355638Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8355875Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8356143Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8356383Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8356613Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8356776Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8356921Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8357102Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8357272Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8357505Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8357852Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8358155Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8358497Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8358752Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8358923Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8359093Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8359396Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8359634Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8359840Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8360125Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8360415Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8360599Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8360859Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8361247Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8361535Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8361726Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8361887Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8362097Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8362337Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8362601Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8362905Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8363134Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8363381Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8363754Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8364036Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8364437Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8364886Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8365167Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8365441Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8365676Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8365868Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8366054Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8366289Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8366590Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8366735Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8366879Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8367165Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8367693Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8368083Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8368476Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8368759Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8369041Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8369288Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8369683Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8369917Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8370137Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8370371Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8370516Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8370699Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8370889Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8371239Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8371510Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8371817Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8372030Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8372274Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8372586Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8372888Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8373243Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8373525Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8373702Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8373926Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8374180Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8374391Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8374572Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8374946Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8375112Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8375367Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8375940Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8376194Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8376483Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8376935Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8377336Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8377617Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8378056Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8378276Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8378551Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8378874Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8379077Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8379306Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8379623Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8380013Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8380383Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8380560Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8380806Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8380978Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8381177Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8381393Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8381827Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8382143Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8382418Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8382691Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8382860Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8383190Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8383532Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8383761Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8384188Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8384414Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8384666Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8384898Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8385084Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8385309Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8385513Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8385881Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8386162Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8386396Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8386632Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8386864Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8387074Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8387317Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8387584Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8387925Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8388163Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8388323Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8388464Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8388646Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8388811Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8389042Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8389246Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8397242Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8397859Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8398322Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8398618Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8398915Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8399218Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8399467Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8399692Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8400009Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8400316Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8400686Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8400957Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8401246Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8401525Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8401720Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8401891Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8402104Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8402464Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8402736Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8403035Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8403269Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8403521Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8403895Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8404184Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8404593Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8405039Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8405327Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8405601Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8405835Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8406031Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8406220Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8406459Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8406762Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8406908Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8407053Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8407346Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8407873Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8408110Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8408506Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8408798Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8409204Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8409457Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8409728Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8409941Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8410161Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8410390Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8410529Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8410821Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8411015Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8411351Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8411612Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8411914Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8412120Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8412363Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8412678Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8412977Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8413327Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8413609Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8413773Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8413991Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8414243Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8414449Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8414632Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8415009Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8415168Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8415419Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8415878Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8416122Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8416409Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8416861Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8417337Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8417535Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8418052Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8418265Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8418535Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8418865Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8419191Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8419419Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8419741Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8420116Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8420481Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8420667Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8420905Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8421082Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8421286Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8421498Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8421915Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8422230Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8422495Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8422764Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8422939Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8423268Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8423600Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8423830Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8424135Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8424356Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8424613Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8424848Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8425140Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8425370Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8425575Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8425796Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8426081Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8426319Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8426561Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8426800Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8427096Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8427337Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8427608Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8427966Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8428207Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8428379Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8428520Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8428699Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8428875Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8429115Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8429313Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8429494Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8429715Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8429967Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8430133Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8430306Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8430478Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8430713Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8430961Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8431514Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8431977Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8432279Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8432699Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8433185Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8433686Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8434237Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8434533Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8435083Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8435352Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8435746Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8436129Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8436356Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8436613Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8437177Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8437480Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8438027Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8438486Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8438770Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8439045Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8439289Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8439489Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8439681Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8439917Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8440207Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8440356Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8440500Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8440789Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8441151Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8441368Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8441759Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8442043Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8442330Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8442580Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8442849Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8443074Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8443414Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8443641Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8443779Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8443969Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8444160Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8444501Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8444765Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8445072Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8445383Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8445632Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8445944Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8446239Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8446598Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8446880Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8447047Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8447275Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8447534Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8447844Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8448034Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8448404Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8448562Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8448814Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8449271Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8449519Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8449811Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8450256Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8450652Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8450872Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8451205Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8451420Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8451817Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8452142Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8452344Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8452580Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8452900Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8453281Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8453764Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8453946Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8454189Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8454365Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8454560Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8454774Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8455206Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8455523Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8455883Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8456165Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8456337Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8456665Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8457006Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8457229Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8457543Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8457876Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8458133Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8458438Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8458625Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8458843Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8459048Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8459265Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8459549Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8459941Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8460176Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8460418Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8460631Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8460869Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8461140Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8461378Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8461705Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8461872Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8462011Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8462189Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8462362Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8462594Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8462791Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8462976Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8463189Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8463443Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8463618Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8463788Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8463960Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8464199Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8464407Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8464695Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8464985Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8465169Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8465432Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8465720Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8466005Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8466193Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8466358Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8466571Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8466814Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8467080Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8467385Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8467692Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8468050Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8468433Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8468721Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8469120Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8469572Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8469970Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8470244Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8470486Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8470678Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8470866Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8471100Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8471389Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8471538Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8471690Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8471974Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8472335Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8472544Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8472941Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8473227Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8473518Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8473771Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8474046Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8474270Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8474489Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8474717Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8474863Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8475042Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8475206Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8475451Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8475761Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8475941Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8476164Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8476411Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8476574Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8476740Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8476920Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8477146Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8477424Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8477816Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8478109Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8478288Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8478551Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8478836Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8479118Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8479312Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8479495Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8479701Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8479944Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8480209Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8480503Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8480731Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8480980Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8481682Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8482189Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8482881Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8483650Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8484142Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8484477Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8484710Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8485054Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8485243Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8485474Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8485768Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8485911Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8486049Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8486339Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8486514Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8486789Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8487026Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8487230Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8487408Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8487624Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8488006Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8488171Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8488336Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8488512Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8488747Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8488958Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8489251Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8489538Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8489715Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8489976Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8490256Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8490535Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8490728Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8490892Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8491095Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8491342Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8491609Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8491902Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8492128Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8492374Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8492748Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8493156Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8493555Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8493996Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8494280Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8494553Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8494881Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8495078Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8495267Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8495493Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8495820Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8495962Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8496096Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8496374Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8496744Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8496927Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8497089Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8497324Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8497521Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8497695Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8498017Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8498262Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8498420Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8498594Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8498764Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8498988Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8499199Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8499484Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8499767Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8499949Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8500208Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8500492Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8500893Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8501074Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8501235Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8501444Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8501685Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8501948Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8502245Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8502568Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8502817Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8503190Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8503471Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8503869Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8504316Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8504590Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8504867Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8505104Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8505291Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8505477Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8505707Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8505992Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8506131Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8506269Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8506559Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8506928Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8507128Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8507522Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8507907Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8508188Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8508439Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8508715Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8509041Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8509267Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8509494Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8509631Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8509811Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8509975Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8510207Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8510514Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8510692Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8510906Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8511158Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8511318Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8511484Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8511660Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8511884Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8512086Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8512380Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8512667Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8512840Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8513101Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8513383Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8513660Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8513847Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8514008Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8514215Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8514457Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8514726Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8515019Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8515243Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8515495Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8515860Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8516142Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8516627Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8517067Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8517347Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8517624Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8517956Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8518148Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8518452Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8518682Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8518970Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8519113Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8519248Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8519527Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8519888Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8520088Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8520265Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8520439Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8520670Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8520864Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8521045Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8521261Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8521506Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8521672Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8521836Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8522007Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8522243Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8522447Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8522733Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8523027Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8523203Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8523458Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8523739Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8524025Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8524353Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8524515Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8524722Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8524959Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8525217Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8525515Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8525736Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8526052Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8526429Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8526710Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8527116Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8527566Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8527939Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8528217Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8528456Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8528643Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8528830Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8529063Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8529349Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8529485Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8529624Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8529908Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8530275Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8530481Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8530869Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8531045Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8531214Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8531445Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8531641Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8531822Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8532159Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8532407Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8532572Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8532740Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8532908Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8533143Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8533345Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8533628Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8534021Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8534201Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8534458Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8534739Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8535017Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8535199Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8535359Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8535566Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8535811Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8536075Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8536370Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8536592Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8536846Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8537222Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8537503Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8538005Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8538453Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8538732Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8539007Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8539241Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8539430Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8539619Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8539854Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8540253Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8540393Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8540532Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8540815Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8541174Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8541384Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8541773Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8542158Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8542447Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8542694Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8542968Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8543183Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8543397Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8543623Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8543764Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8543939Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8544108Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8544345Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8544542Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8544719Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8544938Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8545273Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8545438Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8545602Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8545780Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8546011Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8546212Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8546501Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8546794Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8546970Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8547230Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8547509Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8548096Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8548611Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8549062Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8549437Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8549862Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8550325Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8550839Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8551137Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8551530Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8551917Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8552207Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8552611Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8553063Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8553349Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8553624Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8553858Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8554056Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8554245Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8554472Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8554765Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8554908Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8555043Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8555333Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8555699Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8555898Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8556293Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8556578Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8556856Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8557113Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8557384Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8558493Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8558981Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8559308Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8559594Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8559987Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8560330Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8560629Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8560990Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8561587Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8561773Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8561955Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8562136Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8562375Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8562596Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8562898Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8563191Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8563376Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8563653Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8563939Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8564222Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8564419Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8564586Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8564797Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8565050Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8565317Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8565623Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8565865Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8566116Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8566487Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8566785Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8567191Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8567639Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8568299Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8568578Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8568814Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8569012Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8569204Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8569440Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8569733Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8570016Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8570155Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8570449Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8570811Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8571012Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8571411Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8571696Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8571880Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8572055Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8572292Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8572490Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8572674Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8572893Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8573141Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8573307Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8573480Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8573655Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8573890Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8574103Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8574390Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8574678Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8574864Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8575124Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8575414Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8575701Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8575982Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8576144Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8576354Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8576596Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8576868Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8577168Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8577392Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8577877Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8578482Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8578796Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8579204Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8579663Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8579942Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8580216Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8580459Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8580650Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8580837Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8581073Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8581362Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8581504Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8581647Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8581931Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8582293Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8582504Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8582891Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8583178Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8583461Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8583708Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8583884Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8584056Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8584430Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8584638Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8584827Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8585047Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8585295Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8585457Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8585636Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8585810Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8586184Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8586394Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8586682Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8586969Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8587149Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8587405Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8587688Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8588231Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8588429Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8588592Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8588804Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8589045Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8589309Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8589607Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8589830Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8590081Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8590460Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8590747Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8591151Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8591596Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8591882Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8592155Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8592512Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8592707Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8592896Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8593132Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8593428Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8593568Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8593708Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8593995Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8594468Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8594671Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8595068Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8595354Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8595633Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8595929Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8596203Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8596418Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8596524Z DEBUG:support.hooks:Starting BDD tests...
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8596684Z DEBUG:support.hooks:Testing against: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8596845Z DEBUG:support.hooks:Base URL set in world: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8597036Z DEBUG:support.hooks:Initializing Chrome driver for entire test session...
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8597663Z DEBUG:selenium.webdriver.common.selenium_manager:Selenium Manager binary found at: /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/selenium/webdriver/common/linux/selenium-manager
smoke-tests	Run smoke tests	2025-08-19T18:22:33.8598716Z DEBUG:selenium.webdriver.common.selenium_manager:Executing process: /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/selenium/webdriver/common/linux/selenium-manager --browser chrome --debug --language-binding python --output json
smoke-tests	Run smoke tests	2025-08-19T18:22:34.2906677Z DEBUG:selenium.webdriver.common.selenium_manager:Sending stats to Plausible: Props { browser: "chrome", browser_version: "", os: "linux", arch: "x86_64", lang: "python", selenium_version: "4.35" }
smoke-tests	Run smoke tests	2025-08-19T18:22:34.2909121Z DEBUG:selenium.webdriver.common.selenium_manager:Found chromedriver 139.0.7258.66 in PATH: /usr/bin/chromedriver
smoke-tests	Run smoke tests	2025-08-19T18:22:34.2911216Z DEBUG:selenium.webdriver.common.selenium_manager:chrome detected at /usr/bin/google-chrome
smoke-tests	Run smoke tests	2025-08-19T18:22:34.2912277Z DEBUG:selenium.webdriver.common.selenium_manager:Running command: /usr/bin/google-chrome --version
smoke-tests	Run smoke tests	2025-08-19T18:22:34.2913275Z DEBUG:selenium.webdriver.common.selenium_manager:Output: "Google Chrome 139.0.7258.127 "
smoke-tests	Run smoke tests	2025-08-19T18:22:34.2914198Z DEBUG:selenium.webdriver.common.selenium_manager:Detected browser: chrome 139.0.7258.127
smoke-tests	Run smoke tests	2025-08-19T18:22:34.2916032Z DEBUG:selenium.webdriver.common.selenium_manager:Discovering versions from https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json
smoke-tests	Run smoke tests	2025-08-19T18:22:34.2917584Z DEBUG:selenium.webdriver.common.selenium_manager:Required driver: chromedriver 139.0.7258.68
smoke-tests	Run smoke tests	2025-08-19T18:22:34.2918970Z DEBUG:selenium.webdriver.common.selenium_manager:Driver path: /usr/bin/chromedriver
smoke-tests	Run smoke tests	2025-08-19T18:22:34.2919777Z DEBUG:selenium.webdriver.common.selenium_manager:Browser path: /usr/bin/google-chrome
smoke-tests	Run smoke tests	2025-08-19T18:22:34.2925454Z DEBUG:selenium.webdriver.common.service:Started executable: `/usr/bin/chromedriver` in a child process with pid: 3967 using 0 to output -3
smoke-tests	Run smoke tests	2025-08-19T18:22:34.8480027Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:60703/session {'capabilities': {'firstMatch': [{}], 'alwaysMatch': {'browserName': 'chrome', 'pageLoadStrategy': <PageLoadStrategy.normal: 'normal'>, 'browserVersion': None, 'goog:chromeOptions': {'extensions': [], 'binary': '/usr/bin/google-chrome', 'args': ['--headless', '--no-sandbox', '--disable-dev-shm-usage', '--disable-gpu', '--window-size=1920,1080']}}}}
smoke-tests	Run smoke tests	2025-08-19T18:22:34.8484007Z DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): localhost:60703
smoke-tests	Run smoke tests	2025-08-19T18:22:35.2820994Z DEBUG:urllib3.connectionpool:http://localhost:60703 "POST /session HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:35.2827625Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"139.0.7258.127","chrome":{"chromedriverVersion":"139.0.7258.66 (a62d329947691f76c376a873eae39f56381103c8-refs/branch-heads/7258@{#2226})","userDataDir":"/tmp/.org.chromium.Chromium.c05fKF"},"fedcm:accounts":true,"goog:chromeOptions":{"debuggerAddress":"localhost:46429"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"linux","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true},"sessionId":"ec80ff1ed574a0a3f04ebb295d7235d7"}} | headers=HTTPHeaderDict({'Content-Length': '849', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:35.2835121Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:35.2841984Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:60703/session/ec80ff1ed574a0a3f04ebb295d7235d7/timeouts {'implicit': 10000}
smoke-tests	Run smoke tests	2025-08-19T18:22:35.2844481Z DEBUG:urllib3.connectionpool:http://localhost:60703 "POST /session/ec80ff1ed574a0a3f04ebb295d7235d7/timeouts HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:35.2846345Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:35.2850347Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:35.2851156Z DEBUG:support.hooks:Chrome driver initialized successfully for entire test session
smoke-tests	Run smoke tests	2025-08-19T18:22:35.2851806Z DEBUG:hooks:Starting BDD tests...
smoke-tests	Run smoke tests	2025-08-19T18:22:35.2853532Z DEBUG:hooks:Testing against: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:22:35.2854081Z DEBUG:hooks:Base URL set in world: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:22:35.2854702Z DEBUG:hooks:Initializing Chrome driver for entire test session...
smoke-tests	Run smoke tests	2025-08-19T18:22:35.2856143Z DEBUG:selenium.webdriver.common.selenium_manager:Selenium Manager binary found at: /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/selenium/webdriver/common/linux/selenium-manager
smoke-tests	Run smoke tests	2025-08-19T18:22:35.2859894Z DEBUG:selenium.webdriver.common.selenium_manager:Executing process: /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/selenium/webdriver/common/linux/selenium-manager --browser chrome --debug --language-binding python --output json
smoke-tests	Run smoke tests	2025-08-19T18:22:35.3360145Z DEBUG:selenium.webdriver.common.selenium_manager:Found chromedriver 139.0.7258.66 in PATH: /usr/bin/chromedriver
smoke-tests	Run smoke tests	2025-08-19T18:22:35.3363620Z DEBUG:selenium.webdriver.common.selenium_manager:chrome detected at /usr/bin/google-chrome
smoke-tests	Run smoke tests	2025-08-19T18:22:35.3364809Z DEBUG:selenium.webdriver.common.selenium_manager:Running command: /usr/bin/google-chrome --version
smoke-tests	Run smoke tests	2025-08-19T18:22:35.3365914Z DEBUG:selenium.webdriver.common.selenium_manager:Output: "Google Chrome 139.0.7258.127 "
smoke-tests	Run smoke tests	2025-08-19T18:22:35.3366833Z DEBUG:selenium.webdriver.common.selenium_manager:Detected browser: chrome 139.0.7258.127
smoke-tests	Run smoke tests	2025-08-19T18:22:35.3367671Z DEBUG:selenium.webdriver.common.selenium_manager:Required driver: chromedriver 139.0.7258.68
smoke-tests	Run smoke tests	2025-08-19T18:22:35.3368786Z DEBUG:selenium.webdriver.common.selenium_manager:Driver path: /usr/bin/chromedriver
smoke-tests	Run smoke tests	2025-08-19T18:22:35.3369766Z DEBUG:selenium.webdriver.common.selenium_manager:Browser path: /usr/bin/google-chrome
smoke-tests	Run smoke tests	2025-08-19T18:22:35.3375388Z DEBUG:selenium.webdriver.common.service:Started executable: `/usr/bin/chromedriver` in a child process with pid: 4094 using 0 to output -3
smoke-tests	Run smoke tests	2025-08-19T18:22:35.3486241Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session {'capabilities': {'firstMatch': [{}], 'alwaysMatch': {'browserName': 'chrome', 'pageLoadStrategy': <PageLoadStrategy.normal: 'normal'>, 'browserVersion': None, 'goog:chromeOptions': {'extensions': [], 'binary': '/usr/bin/google-chrome', 'args': ['--headless', '--no-sandbox', '--disable-dev-shm-usage', '--disable-gpu', '--window-size=1920,1080']}}}}
smoke-tests	Run smoke tests	2025-08-19T18:22:35.3492391Z DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): localhost:42687
smoke-tests	Run smoke tests	2025-08-19T18:22:35.6634878Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:35.6658077Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"139.0.7258.127","chrome":{"chromedriverVersion":"139.0.7258.66 (a62d329947691f76c376a873eae39f56381103c8-refs/branch-heads/7258@{#2226})","userDataDir":"/tmp/.org.chromium.Chromium.VU2Sl8"},"fedcm:accounts":true,"goog:chromeOptions":{"debuggerAddress":"localhost:33757"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"linux","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true},"sessionId":"36d49c0ea13a1a2b64745bbe8f519d75"}} | headers=HTTPHeaderDict({'Content-Length': '849', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:35.6664511Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:35.6665765Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/timeouts {'implicit': 10000}
smoke-tests	Run smoke tests	2025-08-19T18:22:35.6667263Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/timeouts HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:35.6669329Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:35.6670868Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:35.6671667Z DEBUG:hooks:Chrome driver initialized successfully for entire test session
smoke-tests	Run smoke tests	2025-08-19T18:22:35.6672459Z DEBUG:support.hooks:Setting up scenario: Flag and unflag an artifact
smoke-tests	Run smoke tests	2025-08-19T18:22:35.6673809Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:22:35.8887450Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:35.8910670Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:35.8913853Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:35.8920004Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:22:35.8920667Z DEBUG:hooks:Setting up scenario: Flag and unflag an artifact
smoke-tests	Run smoke tests	2025-08-19T18:22:35.8921940Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9654389Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9659063Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9660922Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9661715Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9663036Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9664592Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9666329Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9667448Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9668589Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {}
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9669620Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9670983Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9672122Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9673258Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9674503Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9676251Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.41"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9677830Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9679014Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9680291Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9682020Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.47"}]} | headers=HTTPHeaderDict({'Content-Length': '128', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9683730Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9684865Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9686138Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9688047Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.47"}]} | headers=HTTPHeaderDict({'Content-Length': '128', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9689697Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9691175Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.47/element {'using': 'css selector', 'value': '.artifact-id'}
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9693035Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.47/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9695069Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.48"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9696562Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9697917Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.48/text {}
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9699596Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.48/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9701229Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"00001"} | headers=HTTPHeaderDict({'Content-Length': '17', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9702297Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9703793Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.47/element {'using': 'css selector', 'value': '.artifact-actions button:first-child'}
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9705756Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.47/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9707881Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.43"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9709354Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9710754Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.43/element {'using': 'css selector', 'value': 'ion-icon'}
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9712849Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.43/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9714875Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.49"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9716359Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9718210Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.49'}, 'name']}
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9720299Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9721707Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"flag-outline"} | headers=HTTPHeaderDict({'Content-Length': '24', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9722825Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9724109Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.43/click {}
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9725779Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.43/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9727430Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9728636Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9729781Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9731030Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9732755Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.51"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9734228Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9735351Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9736591Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9738453Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.51"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:36.9740095Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:37.3666989Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:37.3720615Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:37.3723073Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.51"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:37.3724455Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:37.8726589Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:37.8782265Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:37.8784718Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.51"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:37.8786110Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:38.3788505Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:38.3840354Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:38.3843951Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.51"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:38.3845997Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:39.3850610Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.artifact-card:first-child .artifact-actions button:first-child'}
smoke-tests	Run smoke tests	2025-08-19T18:22:39.3936775Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:39.3940793Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.52"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:39.3943087Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:39.3945076Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.52/element {'using': 'css selector', 'value': 'ion-icon'}
smoke-tests	Run smoke tests	2025-08-19T18:22:39.3994687Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.52/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:39.3999639Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.53"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4002427Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4004907Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.53'}, 'name']}
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4037975Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4040531Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"flag"} | headers=HTTPHeaderDict({'Content-Length': '16', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4043183Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4046077Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4092856Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4098938Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.55"}]} | headers=HTTPHeaderDict({'Content-Length': '128', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4101354Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4103342Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.55/element {'using': 'css selector', 'value': '.artifact-id'}
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4148536Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.55/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4155369Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.56"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4157918Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4159494Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.56/text {}
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4204875Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.56/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4208468Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"00001"} | headers=HTTPHeaderDict({'Content-Length': '17', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4210005Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4212175Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.55/element {'using': 'css selector', 'value': '.artifact-actions button:first-child'}
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4267565Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.55/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4273381Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.52"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4275615Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4278037Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.52/element {'using': 'css selector', 'value': 'ion-icon'}
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4321731Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.52/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4325979Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.53"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4328463Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4330869Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.53'}, 'name']}
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4368769Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4371159Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"flag"} | headers=HTTPHeaderDict({'Content-Length': '16', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4373741Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4376826Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.52/click {}
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4762679Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.52/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4768786Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4770445Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4771932Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4837468Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4844025Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.51"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:39.4846539Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:39.9848347Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:39.9901820Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:39.9904503Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.51"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:39.9906712Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:40.4907409Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:40.4961471Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:40.4964046Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.51"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:40.4965433Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:40.9966230Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:41.0019036Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:41.0021696Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.51"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:41.0023712Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:41.5024973Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:41.5078646Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:41.5082120Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.51"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:41.5084139Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5089919Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.artifact-card:first-child .artifact-actions button:first-child'}
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5144047Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5147601Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.57"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5150122Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5152013Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.57/element {'using': 'css selector', 'value': 'ion-icon'}
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5203608Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.57/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5207542Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.58"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5210001Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5214276Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.58'}, 'name']}
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5251031Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5253481Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"flag-outline"} | headers=HTTPHeaderDict({'Content-Length': '24', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5256019Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5258623Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.4517D6341E9C90453BE9DA71FCD57D3A.e.58'}, 'name']}
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5293424Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5296338Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"flag-outline"} | headers=HTTPHeaderDict({'Content-Length': '24', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5298268Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5301870Z DEBUG:support.hooks:Completed scenario: Flag and unflag an artifact in 6.64s
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5303196Z DEBUG:hooks:Completed scenario: Flag and unflag an artifact in 6.64s
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5304735Z DEBUG:support.hooks:Setting up scenario: Filter by flagged artifacts
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5306031Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5783856Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5798074Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5799995Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5800724Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5801388Z DEBUG:hooks:Setting up scenario: Filter by flagged artifacts
smoke-tests	Run smoke tests	2025-08-19T18:22:42.5802615Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:22:42.6546719Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:42.6561393Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:42.6563796Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:42.6564812Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:22:42.6575906Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7249192Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7251643Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7256192Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7268892Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {}
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7546293Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7573846Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7575680Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7578977Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7637617Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7646338Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.102"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7648848Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7650331Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7693517Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7697170Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.103"}]} | headers=HTTPHeaderDict({'Content-Length': '129', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7700030Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7701921Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.103/element {'using': 'css selector', 'value': '.artifact-id'}
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7855747Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.103/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7861966Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.107"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7864983Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7867088Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.107/text {}
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7918533Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.107/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7921443Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"00001"} | headers=HTTPHeaderDict({'Content-Length': '17', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7924987Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7927051Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.103/element {'using': 'css selector', 'value': '.artifact-actions button:first-child'}
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7976385Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.103/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7980660Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.101"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7982962Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:42.7984924Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.101/element {'using': 'css selector', 'value': 'ion-icon'}
smoke-tests	Run smoke tests	2025-08-19T18:22:42.8035600Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.101/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:42.8039879Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.108"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:42.8042212Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:42.8044685Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.108'}, 'name']}
smoke-tests	Run smoke tests	2025-08-19T18:22:42.8087129Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:42.8090377Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"flag-outline"} | headers=HTTPHeaderDict({'Content-Length': '24', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:42.8092039Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:42.8093677Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.101/click {}
smoke-tests	Run smoke tests	2025-08-19T18:22:42.8498004Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.101/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:42.8504644Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:42.8506286Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:42.8508811Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:42.8646619Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:42.8653739Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.110"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:42.8658936Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:43.3666045Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:43.3721928Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:43.3724476Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.110"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:43.3726514Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:43.8726579Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:43.8779870Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:43.8782461Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.110"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:43.8784201Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:44.3785577Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:44.3839828Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:44.3841471Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.110"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:44.3842788Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:44.8844381Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:44.8896887Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:44.8901158Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.110"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:44.8903527Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:44.8905707Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:22:44.8952552Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:44.8956242Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.112"}]} | headers=HTTPHeaderDict({'Content-Length': '129', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:44.8958768Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:44.8960773Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.112/element {'using': 'css selector', 'value': '.artifact-id'}
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9008537Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.112/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9012207Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.113"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9014482Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9016145Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.113/text {}
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9066135Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.113/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9069259Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"00001"} | headers=HTTPHeaderDict({'Content-Length': '17', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9072944Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9074971Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.112/element {'using': 'css selector', 'value': '.artifact-actions button:first-child'}
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9135958Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.112/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9140333Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.111"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9142872Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9144820Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.111/element {'using': 'css selector', 'value': 'ion-icon'}
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9192250Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.111/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9195930Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.114"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9198446Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9200882Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.114'}, 'name']}
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9239278Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9242269Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"flag"} | headers=HTTPHeaderDict({'Content-Length': '16', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9243962Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9245636Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.111/click {}
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9623398Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.111/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9625933Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9627511Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9629524Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9696562Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9699406Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.110"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:44.9701671Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:45.4708963Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:45.4814882Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:45.4817631Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.110"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:45.4820108Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:45.9825640Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:45.9930978Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:45.9934007Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.110"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:45.9936337Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:46.4885637Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:46.4938907Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:46.4941608Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.110"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:46.4943030Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:46.9945354Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:22:46.9999874Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:47.0003811Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.110"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:47.0006544Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:47.0009248Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '[id="flagFilter"]'}
smoke-tests	Run smoke tests	2025-08-19T18:22:47.0079757Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:47.0083345Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.117"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:47.0085659Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:47.0087665Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.117/click {}
smoke-tests	Run smoke tests	2025-08-19T18:22:47.0505916Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.117/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:47.0510522Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:47.0512044Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:48.0516810Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:22:58.0650780Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:58.0654066Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:58.0655686Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:58.0657644Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '[id="flagFilter"]'}
smoke-tests	Run smoke tests	2025-08-19T18:22:58.0706654Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:58.0710432Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.117"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:58.0712783Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:58.0714569Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.117/css/background-color {}
smoke-tests	Run smoke tests	2025-08-19T18:22:58.0786507Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.117/css/background-color HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:58.0790334Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"rgba(220, 53, 69, 1)"} | headers=HTTPHeaderDict({'Content-Length': '32', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:58.0792553Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:58.0794017Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '[id="flagFilter"]'}
smoke-tests	Run smoke tests	2025-08-19T18:22:58.0841679Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:58.0845280Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.117"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:58.0847645Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:58.0849883Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.117/click {}
smoke-tests	Run smoke tests	2025-08-19T18:22:58.1242907Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.117/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:58.9714567Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:58.9716412Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1245538Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1302806Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1306536Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.119"}]} | headers=HTTPHeaderDict({'Content-Length': '129', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1309049Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1311142Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.119/element {'using': 'css selector', 'value': '.artifact-actions button:first-child'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1360457Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.119/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1364659Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.118"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1366969Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1369136Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.118/element {'using': 'css selector', 'value': 'ion-icon'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1413887Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.118/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1418723Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.120"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1420998Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1423532Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.120'}, 'name']}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1457490Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1460671Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"flag-outline"} | headers=HTTPHeaderDict({'Content-Length': '24', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1462389Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1464868Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.120'}, 'name']}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1497973Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1500865Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"flag-outline"} | headers=HTTPHeaderDict({'Content-Length': '24', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1502609Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1504333Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '[id="flagFilter"]'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1549681Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1553284Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.117"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1555660Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1557447Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.117/css/background-color {}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1608006Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.89C02122905D8822CEDB368F0CC1351B.e.117/css/background-color HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1611673Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"rgba(108, 117, 125, 1)"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1613381Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1614505Z DEBUG:support.hooks:Completed scenario: Filter by flagged artifacts in 16.58s
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1615343Z DEBUG:hooks:Completed scenario: Filter by flagged artifacts in 16.58s
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1616076Z DEBUG:support.hooks:Setting up scenario: Create artifact with flag
smoke-tests	Run smoke tests	2025-08-19T18:22:59.1617359Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.2211976Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.2219193Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.2220947Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.2222141Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:22:59.2223356Z DEBUG:hooks:Setting up scenario: Create artifact with flag
smoke-tests	Run smoke tests	2025-08-19T18:22:59.2224735Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.2783477Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.2785948Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.2789041Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.2790043Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:22:59.2809419Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3377368Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3380600Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3382478Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3383837Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3499573Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3501704Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3503461Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3504898Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3727223Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3731058Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.620EEAD1E1BABEACD0B32B19B6065DF5.e.162"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3733397Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3734577Z DEBUG:controls.base:Looking for element with XPath: //button[contains(text(), 'Create')]
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3736172Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//button[contains(text(), 'Create')]"}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3892517Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3895206Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.620EEAD1E1BABEACD0B32B19B6065DF5.e.164"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3898054Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3899750Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.620EEAD1E1BABEACD0B32B19B6065DF5.e.164/text {}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3984484Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.620EEAD1E1BABEACD0B32B19B6065DF5.e.164/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3994771Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"Create"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3996577Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3997139Z DEBUG:controls.base:Found element: Create...
smoke-tests	Run smoke tests	2025-08-19T18:22:59.3998701Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.620EEAD1E1BABEACD0B32B19B6065DF5.e.164/click {}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.4502191Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.620EEAD1E1BABEACD0B32B19B6065DF5.e.164/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.4505104Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.4507013Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.4508980Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '[id="artifactModal"]'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.4600905Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.4606259Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.620EEAD1E1BABEACD0B32B19B6065DF5.e.170"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.4609558Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.4622022Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.620EEAD1E1BABEACD0B32B19B6065DF5.e.170'}]}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.4699592Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.4702730Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.4704320Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.4730943Z DEBUG:support.hooks:Completed scenario: Create artifact with flag in 0.25s
smoke-tests	Run smoke tests	2025-08-19T18:22:59.4736349Z DEBUG:hooks:Completed scenario: Create artifact with flag in 0.25s
smoke-tests	Run smoke tests	2025-08-19T18:22:59.4737068Z DEBUG:support.hooks:Setting up scenario: Filter Artifacts by Status
smoke-tests	Run smoke tests	2025-08-19T18:22:59.4738513Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.5240840Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.5243395Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.5245332Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.5246452Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:22:59.5260030Z DEBUG:hooks:Setting up scenario: Filter Artifacts by Status
smoke-tests	Run smoke tests	2025-08-19T18:22:59.5261289Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.5939510Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.5985073Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.5986737Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.5987392Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:22:59.5989121Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.6500652Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.6502933Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.6504918Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.6506412Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.6632867Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.6653138Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.6659411Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.6660825Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.6859585Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.6866793Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.D7D9BAF0B6BA6ABD36795A5D0990D7FF.e.210"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.6870456Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.6871444Z DEBUG:status_filtering_steps:Using JavaScript accessibility function to set status filter to 'open'...
smoke-tests	Run smoke tests	2025-08-19T18:22:59.6873200Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': "return setDropdownValue('statusFilter', 'open');", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.6984090Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.6987622Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.6990454Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.6991451Z DEBUG:status_filtering_steps:Successfully set status filter to 'open' using JavaScript accessibility function
smoke-tests	Run smoke tests	2025-08-19T18:22:59.6993234Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': "return getDropdownValue('statusFilter');", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7027136Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7030695Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"open"} | headers=HTTPHeaderDict({'Content-Length': '16', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7032421Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7033330Z DEBUG:status_filtering_steps:Verified status filter is now 'open'
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7035384Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7190010Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7193663Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.D7D9BAF0B6BA6ABD36795A5D0990D7FF.e.217"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7196008Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7197490Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7253407Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7257049Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.D7D9BAF0B6BA6ABD36795A5D0990D7FF.e.217"}]} | headers=HTTPHeaderDict({'Content-Length': '129', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7259558Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7261686Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.D7D9BAF0B6BA6ABD36795A5D0990D7FF.e.217/element {'using': 'css selector', 'value': '.status-indicator, .artifact-status'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7338577Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.D7D9BAF0B6BA6ABD36795A5D0990D7FF.e.217/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7342711Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.D7D9BAF0B6BA6ABD36795A5D0990D7FF.e.218"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7345071Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7347077Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.D7D9BAF0B6BA6ABD36795A5D0990D7FF.e.218/text {}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7405479Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.D7D9BAF0B6BA6ABD36795A5D0990D7FF.e.218/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7417638Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"🟢 Open"} | headers=HTTPHeaderDict({'Content-Length': '21', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7419591Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7420600Z DEBUG:status_filtering_steps:Found artifact with status: '🟢 Open'
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7422103Z DEBUG:status_filtering_steps:Found 1 artifacts with status 'open' out of 1 visible artifacts
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7423042Z DEBUG:status_filtering_steps:Using JavaScript accessibility function to clear status filter...
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7424685Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': "return setDropdownValue('statusFilter', '');", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7471908Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7476234Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7478110Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7479102Z DEBUG:status_filtering_steps:Successfully cleared status filter using JavaScript accessibility function
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7480058Z [36m@smoke
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7481040Z [39m[1m[37mFeature[22m[39m[26m: [1m[37mArtifact Flags[22m[39m[26m  # [1m[30mtests/features/test_artifact_flags.feature[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7481983Z     [37mAs a user
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7482378Z     I want to flag artifacts for easy identification
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7483137Z     So that I can filter and find important artifacts quickly[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7483577Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7484193Z     [1m[37mScenario[22m[39m[26m: [1m[37mFlag and unflag an artifact[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7484685Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7485052Z         [1m[33mGiven I reset the database to master[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7486061Z ⚠️ Reset script not found at /Users/claudio/realtime/reos2/reset_test_db.sh, continuing without reset
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7486706Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7487101Z [A[K        [1m[32mGiven I reset the database to master[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7487515Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7488004Z         [1m[33mAnd I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7488316Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7488962Z [A[K        [1m[32mAnd I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7489303Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7489620Z         [1m[33mAnd I see artifacts displayed[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7490204Z ✅ Found 1 artifacts displayed
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7490463Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7490802Z [A[K        [1m[32mAnd I see artifacts displayed[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7491166Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7491488Z         [1m[33mWhen I flag artifact #00001[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7492115Z ✅ Flagged artifact #0 (previous state: unflagged)
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7492457Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7492739Z [A[K        [1m[32mWhen I flag artifact #00001[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7493058Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7493361Z         [1m[33mThen the artifact should be flagged[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7493927Z ✅ Artifact flag state changed successfully
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7494461Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7494815Z [A[K        [1m[32mThen the artifact should be flagged[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7495230Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7495516Z         [1m[33mWhen I flag artifact #00001[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7496086Z ✅ Flagged artifact #0 (previous state: flagged)
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7496396Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7496674Z [A[K        [1m[32mWhen I flag artifact #00001[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7497000Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7497346Z         [1m[33mThen the artifact should be unflagged[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7498184Z ✅ Artifact flag state changed successfully
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7498490Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7498823Z [A[K        [1m[32mThen the artifact should be unflagged[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7499197Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7499623Z     [1m[37mScenario[22m[39m[26m: [1m[37mFilter by flagged artifacts[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7500070Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7500411Z         [1m[33mGiven I reset the database to master[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7501423Z ⚠️ Reset script not found at /Users/claudio/realtime/reos2/reset_test_db.sh, continuing without reset
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7502066Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7502428Z [A[K        [1m[32mGiven I reset the database to master[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7502815Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7503076Z         [1m[33mAnd I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7503402Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7503691Z [A[K        [1m[32mAnd I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7504013Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7504300Z         [1m[33mAnd I flag artifact #00001[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7504913Z ✅ Flagged artifact #0 (previous state: unflagged)
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7505273Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7505594Z [A[K        [1m[32mAnd I flag artifact #00001[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7505942Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7506240Z         [1m[33mAnd I flag artifact #00002[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7506852Z ✅ Flagged artifact #0 (previous state: flagged)
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7507208Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7507518Z [A[K        [1m[32mAnd I flag artifact #00002[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7508093Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7508542Z         [1m[33mWhen I click the flag filter button in the toolbar[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7509263Z ✅ Clicked flag filter button in toolbar
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7509559Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7509985Z [A[K        [1m[32mWhen I click the flag filter button in the toolbar[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7510460Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7510853Z         [1m[33mThen I should see only flagged artifacts[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7511508Z ⚠️ No artifacts visible after flag filter
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7511813Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7512194Z [A[K        [1m[32mThen I should see only flagged artifacts[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7512621Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7513002Z         [1m[33mAnd the flag filter button should be red[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7513669Z ✅ Flag filter button is red (active filter)
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7514022Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7514423Z [A[K        [1m[32mAnd the flag filter button should be red[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7515118Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7515506Z         [1m[33mWhen I click the flag filter button again[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7516199Z ✅ Clicked flag filter button again
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7516490Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7516883Z [A[K        [1m[32mWhen I click the flag filter button again[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7517291Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7517649Z         [1m[33mThen I should see all artifacts again[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7518558Z ✅ Showing all artifacts again (0 flagged, 1 unflagged)
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7518931Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7519318Z [A[K        [1m[32mThen I should see all artifacts again[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7519727Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7520127Z         [1m[33mAnd the flag filter button should be grey[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7520792Z ✅ Flag filter button is grey (inactive filter)
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7521401Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7521822Z [A[K        [1m[32mAnd the flag filter button should be grey[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7522250Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7522702Z     [1m[37mScenario[22m[39m[26m: [1m[37mCreate artifact with flag[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7523169Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7523527Z         [1m[33mGiven I reset the database to master[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7524545Z ⚠️ Reset script not found at /Users/claudio/realtime/reos2/reset_test_db.sh, continuing without reset
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7525143Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7525467Z [A[K        [1m[32mGiven I reset the database to master[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7525819Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7526038Z         [1m[33mAnd I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7526328Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7526589Z [A[K        [1m[32mAnd I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7526911Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7527236Z         [1m[33mWhen I click the "Create" button[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7527615Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7528192Z [A[K        [1m[32mWhen I click the "Create" button[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7528599Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7528948Z         [1m[33mAnd I fill in the artifact details[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7529963Z           [1m[37m|[22m[39m[26m [37mField      [39m [1m[37m|[22m[39m[26m [37mValue                               [39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7531283Z           [1m[37m|[22m[39m[26m [1m[33mType       [22m[39m [1m[37m|[22m[39m[26m [1m[33mrequirement                         [22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7532707Z           [1m[37m|[22m[39m[26m [1m[33mSummary    [22m[39m [1m[37m|[22m[39m[26m [1m[33mTest artifact with flag             [22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7534260Z           [1m[37m|[22m[39m[26m [1m[33mDescription[22m[39m [1m[37m|[22m[39m[26m [1m[33mTest artifact for flag functionality[22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7535672Z           [1m[37m|[22m[39m[26m [1m[33mCategory   [22m[39m [1m[37m|[22m[39m[26m [1m[33mTest                                [22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7536903Z           [1m[37m|[22m[39m[26m [1m[33mStatus     [22m[39m [1m[37m|[22m[39m[26m [1m[33mopen                                [22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7537469Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7537605Z [A[K
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7538069Z [A[K
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7538322Z [A[K
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7538567Z [A[K
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7538905Z [A[K
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7539165Z [A[K
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7539610Z [A[K        [1m[31mAnd I fill in the artifact details[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7540526Z           [1m[37m|[22m[39m[26m [37mField      [39m [1m[37m|[22m[39m[26m [37mValue                               [39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7541707Z           [1m[37m|[22m[39m[26m [1m[31mType       [22m[39m [1m[37m|[22m[39m[26m [1m[31mrequirement                         [22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7543250Z           [1m[37m|[22m[39m[26m [1m[31mSummary    [22m[39m [1m[37m|[22m[39m[26m [1m[31mTest artifact with flag             [22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7544649Z           [1m[37m|[22m[39m[26m [1m[31mDescription[22m[39m [1m[37m|[22m[39m[26m [1m[31mTest artifact for flag functionality[22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7545979Z           [1m[37m|[22m[39m[26m [1m[31mCategory   [22m[39m [1m[37m|[22m[39m[26m [1m[31mTest                                [22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7547190Z           [1m[37m|[22m[39m[26m [1m[31mStatus     [22m[39m [1m[37m|[22m[39m[26m [1m[31mopen                                [22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7548179Z           [1m[31mKeyError[22m[39m[26m: [31m0[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7548699Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7549077Z         [1m[33mAnd I check the "Flag this artifact" checkbox[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7549497Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7549864Z [A[K        [36mAnd I check the "Flag this artifact" checkbox[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7550263Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7550536Z         [1m[33mAnd I submit the form[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7550837Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7551060Z [A[K        [36mAnd I submit the form[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7551344Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7551670Z         [1m[33mThen I should see the new artifact created[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7552054Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7552402Z [A[K        [36mThen I should see the new artifact created[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7552780Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7553106Z         [1m[33mAnd the new artifact should be flagged[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7553458Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7553747Z [A[K        [36mAnd the new artifact should be flagged[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7554104Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7554248Z [36m@smoke
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7555166Z [39m[1m[37mFeature[22m[39m[26m: [1m[37mTest Status Filtering[22m[39m[26m  # [1m[30mtests/features/test_status_filtering.feature[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7556054Z     [37mAs a user
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7556374Z     I want to filter artifacts by status
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7556977Z     So that I can view artifacts with specific status values[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7558452Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7558901Z     [1m[37mScenario[22m[39m[26m: [1m[37mFilter Artifacts by Status[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7559330Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7559578Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7559876Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7560125Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7560422Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7560784Z         [1m[33mWhen I set the status filter to "open"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7561186Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7561573Z [A[K        [1m[32mWhen I set the status filter to "open"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7561990Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7562403Z         [1m[33mAnd I verify the status filter is set to "open"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7562794Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7563164Z [A[K        [1m[32mAnd I verify the status filter is set to "open"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7563554Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7563899Z         [1m[33mThen I see only artifacts with status "open"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7564289Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7564655Z [A[K        [1m[32mThen I see only artifacts with status "open"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7565053Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7565332Z         [1m[33mWhen I clear the status filter[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7565686Z 
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7567430Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': "return getDropdownValue('statusFilter');", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7569419Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7571514Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7572995Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7573697Z DEBUG:status_filtering_steps:Verified status filter is now cleared
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7575038Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7610960Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7614102Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.D7D9BAF0B6BA6ABD36795A5D0990D7FF.e.219"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7617910Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7619321Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7650974Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7654597Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.D7D9BAF0B6BA6ABD36795A5D0990D7FF.e.219"}]} | headers=HTTPHeaderDict({'Content-Length': '129', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7657394Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7658414Z DEBUG:support.hooks:Completed scenario: Filter Artifacts by Status in 0.24s
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7659203Z DEBUG:hooks:Completed scenario: Filter Artifacts by Status in 0.24s
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7660557Z DEBUG:support.hooks:Setting up scenario: Verify Artifact Tile does not Exist
smoke-tests	Run smoke tests	2025-08-19T18:22:59.7661910Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.8131916Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.8134577Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.8137179Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.8138331Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:22:59.8139170Z DEBUG:hooks:Setting up scenario: Verify Artifact Tile does not Exist
smoke-tests	Run smoke tests	2025-08-19T18:22:59.8145807Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.8673421Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.8678016Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.8679912Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.8690761Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:22:59.8694307Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.9322394Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.9324435Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.9364603Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.9365898Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.9448009Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.9450206Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.9452097Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.9453710Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:22:59.9682788Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:22:59.9686732Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.2EA07C5073FD65DD57FD1BC1F8F07A90.e.262"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:22:59.9689344Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:22:59.9690572Z DEBUG:artifacts:I do not see the artifact #99999
smoke-tests	Run smoke tests	2025-08-19T18:22:59.9691389Z DEBUG:controls.base:Looking for element with XPath: //div[@class='artifact-card' and contains(., '99999')]
smoke-tests	Run smoke tests	2025-08-19T18:22:59.9693102Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//div[@class='artifact-card' and contains(., '99999')]"}
smoke-tests	Run smoke tests	2025-08-19T18:23:09.9816259Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 404 0
smoke-tests	Run smoke tests	2025-08-19T18:23:09.9824108Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=404 | data={"value":{"error":"no such element","message":"no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class='artifact-card' and contains(., '99999')]\"}\n  (Session info: chrome=139.0.7258.127)","stacktrace":"#0 0x559e7f85805a \u003Cunknown>\n#1 0x559e7f2f7a70 \u003Cunknown>\n#2 0x559e7f349907 \u003Cunknown>\n#3 0x559e7f349b01 \u003Cunknown>\n#4 0x559e7f397d54 \u003Cunknown>\n#5 0x559e7f36f40d \u003Cunknown>\n#6 0x559e7f39514f \u003Cunknown>\n#7 0x559e7f36f1b3 \u003Cunknown>\n#8 0x559e7f33b59b \u003Cunknown>\n#9 0x559e7f33c971 \u003Cunknown>\n#10 0x559e7f81d22b \u003Cunknown>\n#11 0x559e7f820f79 \u003Cunknown>\n#12 0x559e7f804309 \u003Cunknown>\n#13 0x559e7f821b28 \u003Cunknown>\n#14 0x559e7f7e8bef \u003Cunknown>\n#15 0x559e7f8450e8 \u003Cunknown>\n#16 0x559e7f8452c6 \u003Cunknown>\n#17 0x559e7f857036 \u003Cunknown>\n#18 0x7f93ebe9caa4 \u003Cunknown>\n#19 0x7f93ebf29c3c \u003Cunknown>\n"}} | headers=HTTPHeaderDict({'Content-Length': '934', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:09.9832983Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:09.9833671Z DEBUG:artifacts:Artifact #99999 correctly not found
smoke-tests	Run smoke tests	2025-08-19T18:23:09.9834418Z DEBUG:support.hooks:Completed scenario: Verify Artifact Tile does not Exist in 10.17s
smoke-tests	Run smoke tests	2025-08-19T18:23:09.9835170Z DEBUG:hooks:Completed scenario: Verify Artifact Tile does not Exist in 10.17s
smoke-tests	Run smoke tests	2025-08-19T18:23:09.9835933Z DEBUG:support.hooks:Setting up scenario: Create new artifact shows "Create" button
smoke-tests	Run smoke tests	2025-08-19T18:23:09.9837136Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:10.0292929Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:10.0326207Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:10.0332261Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:10.0336455Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:23:10.0339080Z DEBUG:hooks:Setting up scenario: Create new artifact shows "Create" button
smoke-tests	Run smoke tests	2025-08-19T18:23:10.0340623Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:10.1093379Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:10.1095401Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:10.1099885Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:10.1100548Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:23:10.1101729Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:10.1727067Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:10.1729496Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:10.1731271Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:10.1732505Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {}
smoke-tests	Run smoke tests	2025-08-19T18:23:10.1993741Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:10.2014124Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:10.2016234Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:10.2018328Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:23:10.2143580Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:10.2146692Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.1E6A9046D23DE8AE3B8A7B1E1372BCF5.e.310"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:10.2153411Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:10.2154922Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//div[@id='artifactModal']//button[@type='submit']"}
smoke-tests	Run smoke tests	2025-08-19T18:23:10.2241678Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:10.2244679Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.1E6A9046D23DE8AE3B8A7B1E1372BCF5.e.311"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:10.2248058Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:10.2250911Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.1E6A9046D23DE8AE3B8A7B1E1372BCF5.e.311/click {}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.2618375Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.1E6A9046D23DE8AE3B8A7B1E1372BCF5.e.311/click HTTP/1.1" 400 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.2625161Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=400 | data={"value":{"error":"element not interactable","message":"element not interactable\n  (Session info: chrome=139.0.7258.127)","stacktrace":"#0 0x559e7f85805a \u003Cunknown>\n#1 0x559e7f2f78c3 \u003Cunknown>\n#2 0x559e7f34ab1e \u003Cunknown>\n#3 0x559e7f33db1b \u003Cunknown>\n#4 0x559e7f36f3e2 \u003Cunknown>\n#5 0x559e7f33d49a \u003Cunknown>\n#6 0x559e7f36f5ae \u003Cunknown>\n#7 0x559e7f39514f \u003Cunknown>\n#8 0x559e7f36f1b3 \u003Cunknown>\n#9 0x559e7f33b59b \u003Cunknown>\n#10 0x559e7f33c971 \u003Cunknown>\n#11 0x559e7f81d22b \u003Cunknown>\n#12 0x559e7f820f79 \u003Cunknown>\n#13 0x559e7f804309 \u003Cunknown>\n#14 0x559e7f821b28 \u003Cunknown>\n#15 0x559e7f7e8bef \u003Cunknown>\n#16 0x559e7f8450e8 \u003Cunknown>\n#17 0x559e7f8452c6 \u003Cunknown>\n#18 0x559e7f857036 \u003Cunknown>\n#19 0x7f93ebe9caa4 \u003Cunknown>\n#20 0x7f93ebf29c3c \u003Cunknown>\n"}} | headers=HTTPHeaderDict({'Content-Length': '865', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.2631366Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.2642251Z DEBUG:support.hooks:Completed scenario: Create new artifact shows "Create" button in 10.23s
smoke-tests	Run smoke tests	2025-08-19T18:23:20.2643198Z DEBUG:hooks:Completed scenario: Create new artifact shows "Create" button in 10.23s
smoke-tests	Run smoke tests	2025-08-19T18:23:20.2644107Z DEBUG:support.hooks:Setting up scenario: Edit existing artifact shows "Save" button
smoke-tests	Run smoke tests	2025-08-19T18:23:20.2645501Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.3141933Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.3144141Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.3146397Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.3147126Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:23:20.3147998Z DEBUG:hooks:Setting up scenario: Edit existing artifact shows "Save" button
smoke-tests	Run smoke tests	2025-08-19T18:23:20.3149532Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.3884859Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.3887198Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.3904629Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.3905520Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:23:20.3906750Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.4432703Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.4434999Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.4465157Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.4466297Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.4665099Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.4670501Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.4679994Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.4686280Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.4856240Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.4865498Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.6FD35FEFB7BF26D5B2CE886348EDC1CF.e.353"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.4868054Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.4869486Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.4951462Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.4955216Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.6FD35FEFB7BF26D5B2CE886348EDC1CF.e.357"}]} | headers=HTTPHeaderDict({'Content-Length': '129', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.4959137Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.4960594Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5001880Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5005838Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.6FD35FEFB7BF26D5B2CE886348EDC1CF.e.357"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5008290Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5009960Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//div[contains(@class, 'artifact-card')][1]//button[.//ion-icon[@name='create-outline']]"}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5115234Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5118517Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.6FD35FEFB7BF26D5B2CE886348EDC1CF.e.358"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5121283Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5123754Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.6FD35FEFB7BF26D5B2CE886348EDC1CF.e.358/click {}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5777197Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.6FD35FEFB7BF26D5B2CE886348EDC1CF.e.358/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5781493Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5783061Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5784074Z DEBUG:edit_button_steps:✅ Clicked edit button on first artifact
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5785478Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '[id="artifactModal"]'}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5928380Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5931038Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.6FD35FEFB7BF26D5B2CE886348EDC1CF.e.360"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5933277Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5935707Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.6FD35FEFB7BF26D5B2CE886348EDC1CF.e.360'}]}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5983098Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5986436Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5988323Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.5992013Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.6FD35FEFB7BF26D5B2CE886348EDC1CF.e.360'}]}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6032603Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6040232Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6041654Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6042551Z DEBUG:edit_button_steps:✅ Edit dialog is visible
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6044315Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//div[@id='artifactModal']//button[@type='submit']"}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6103036Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6106765Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.6FD35FEFB7BF26D5B2CE886348EDC1CF.e.361"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6109275Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6110910Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.6FD35FEFB7BF26D5B2CE886348EDC1CF.e.361/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6165102Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.6FD35FEFB7BF26D5B2CE886348EDC1CF.e.361/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6168219Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"Save"} | headers=HTTPHeaderDict({'Content-Length': '16', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6170234Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6171958Z DEBUG:edit_button_steps:✅ Submit button text is correct: 'Save'
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6174143Z DEBUG:support.hooks:Completed scenario: Edit existing artifact shows "Save" button in 0.30s
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6175070Z DEBUG:hooks:Completed scenario: Edit existing artifact shows "Save" button in 0.30s
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6175922Z DEBUG:support.hooks:Setting up scenario: Create New Artifact from Search View
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6177200Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6614210Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6618259Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6621873Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6622816Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6624406Z DEBUG:hooks:Setting up scenario: Create New Artifact from Search View
smoke-tests	Run smoke tests	2025-08-19T18:23:20.6625661Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.7200536Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.7204770Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.7206400Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.7215048Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:23:20.7216330Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.7835847Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.7839486Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.7849453Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.7850499Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.7933146Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.7936866Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.7954930Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.7956389Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8160010Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8163726Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.402"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8167162Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8169638Z DEBUG:controls.base:Looking for element with XPath: //div[@class='toolbar']//button[contains(text(), 'Create')]
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8171821Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//div[@class='toolbar']//button[contains(text(), 'Create')]"}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8311106Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8316721Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.404"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8319250Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8320897Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.404/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8414394Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.404/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8417497Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"Create"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8419391Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8420057Z DEBUG:controls.base:Found element: Create...
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8421601Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.404/click {}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8903691Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.404/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8906566Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8908379Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8909177Z DEBUG:controls.base:Looking for element with XPath: //div[@id='artifactModal']
smoke-tests	Run smoke tests	2025-08-19T18:23:20.8910605Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//div[@id='artifactModal']"}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9016433Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9020247Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.410"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9022568Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9024245Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.410/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9164377Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.410/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9172329Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"Create New Artifact\n×\nType\nSelect Type\n▼\nSummary\nDescription\nCategory\nStatus\nSelect Status\n▼\nVerification Method\nFlag this artifact\nCancel\nCreate"} | headers=HTTPHeaderDict({'Content-Length': '176', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9174862Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9175534Z DEBUG:controls.base:Found element: Create New Artifact
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9176042Z ×
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9176279Z Type
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9176533Z Select Type
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9176818Z ▼
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9177058Z Summary
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9177308Z Description
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9177574Z Category
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9178008Z Status
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9178265Z Select Status
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9178572Z ▼
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9178819Z Verification Method
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9179124Z Flag this artifact
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9179402Z Cancel
smoke-tests	Run smoke tests	2025-08-19T18:23:20.9179669Z Create...
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9175503Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '[id="artifactModal"]'}
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9230043Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9238848Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.410"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9241121Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9243568Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.410'}]}
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9284121Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9291099Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9292712Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9293555Z DEBUG:controls.base:Looking for element with XPath: //select[@id='artifactType']
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9294992Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//select[@id='artifactType']"}
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9364175Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9368024Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.390"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9370311Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9371912Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.390/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9426285Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.390/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9429960Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9431527Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9432122Z DEBUG:controls.base:Found element: ...
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9433573Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.390/name {}
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9470949Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.390/name HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9474431Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"select"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9476319Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9478528Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.390/element {'using': 'xpath', 'value': "..//div[contains(@class, 'custom-dropdown')]"}
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9555998Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.390/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9560394Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.412"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9562889Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9564731Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.412/element {'using': 'xpath', 'value': '..'}
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9639798Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.412/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9643488Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.413"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9645835Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9648048Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.413/element {'using': 'tag name', 'value': 'select'}
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9720864Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.413/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9724499Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.390"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9726946Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9729555Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.390'}, 'id']}
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9769929Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9772832Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"artifactType"} | headers=HTTPHeaderDict({'Content-Length': '24', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9777094Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9779019Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': "\n                if (typeof setDropdownValue === 'function') {\n                    return setDropdow...", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9830583Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9836210Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9838035Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9840083Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': "\n                    if (typeof getDropdownValue === 'function') {\n                        return ge...", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9876019Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9878629Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"requirement"} | headers=HTTPHeaderDict({'Content-Length': '23', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9882803Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9883619Z DEBUG:controls.base:Looking for element with XPath: //input[@id='artifactSummary']
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9885135Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//input[@id='artifactSummary']"}
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9956898Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9960758Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.391"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9963050Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:23.9964665Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.391/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.0022717Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.391/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.0025681Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.0028164Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.0029806Z DEBUG:controls.base:Found element: ...
smoke-tests	Run smoke tests	2025-08-19T18:23:24.0031335Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.391/name {}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.0063571Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.391/name HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.0069011Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"input"} | headers=HTTPHeaderDict({'Content-Length': '17', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.0070920Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.0072600Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.391/clear {}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.0302155Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.391/clear HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.0305134Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.0308444Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.0310704Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.391/value {'text': 'Test requirement for BDD testing', 'value': ['T', 'e', 's', 't', ' ', 'r', 'e', 'q', 'u', 'i', 'r', 'e', 'm', 'e', 'n', 't', ' ', 'f', 'o', 'r', ' ', 'B', 'D', 'D', ' ', 't', 'e', 's', 't', 'i', 'n', 'g']}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.0948224Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.391/value HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.0951777Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.0953778Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.0955144Z DEBUG:controls.base:Looking for element with XPath: //textarea[@id='artifactDescription']
smoke-tests	Run smoke tests	2025-08-19T18:23:24.0956737Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//textarea[@id='artifactDescription']"}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1049129Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1053045Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.392"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1056419Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1058687Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.392/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1111900Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.392/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1115316Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1116927Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1117532Z DEBUG:controls.base:Found element: ...
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1119151Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.392/name {}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1152336Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.392/name HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1155993Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"textarea"} | headers=HTTPHeaderDict({'Content-Length': '20', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1159351Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1161052Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.392/clear {}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1292214Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.392/clear HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1295412Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1298636Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1301163Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.392/value {'text': 'This is a test requirement created during BDD test execution', 'value': ['T', 'h', 'i', 's', ' ', 'i', 's', ' ', 'a', ' ', 't', 'e', 's', 't', ' ', 'r', 'e', 'q', 'u', 'i', 'r', 'e', 'm', 'e', 'n', 't', ' ', 'c', 'r', 'e', 'a', 't', 'e', 'd', ' ', 'd', 'u', 'r', 'i', 'n', 'g', ' ', 'B', 'D', 'D', ' ', 't', 'e', 's', 't', ' ', 'e', 'x', 'e', 'c', 'u', 't', 'i', 'o', 'n']}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1988860Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.392/value HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1992007Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1994769Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1995590Z DEBUG:controls.base:Looking for element with XPath: //select[@id='artifactStatus']
smoke-tests	Run smoke tests	2025-08-19T18:23:24.1997092Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//select[@id='artifactStatus']"}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2091440Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2093940Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.394"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2096452Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2098346Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.394/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2148893Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.394/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2152265Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2155771Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2156394Z DEBUG:controls.base:Found element: ...
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2158083Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.394/name {}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2188088Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.394/name HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2191539Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"select"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2193133Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2195138Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.394/element {'using': 'xpath', 'value': "..//div[contains(@class, 'custom-dropdown')]"}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2246215Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.394/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2250168Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.418"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2252470Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2254302Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.418/element {'using': 'xpath', 'value': '..'}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2305255Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.418/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2309207Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.419"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2311532Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2313478Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.419/element {'using': 'tag name', 'value': 'select'}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2362934Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.419/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2370185Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.394"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2372743Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2375188Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.394'}, 'id']}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2406989Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2410254Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"artifactStatus"} | headers=HTTPHeaderDict({'Content-Length': '26', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2412222Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2413900Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': "\n                if (typeof setDropdownValue === 'function') {\n                    return setDropdow...", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2462647Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2465073Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2468881Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2470596Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': "\n                    if (typeof getDropdownValue === 'function') {\n                        return ge...", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2504730Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2508160Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"open"} | headers=HTTPHeaderDict({'Content-Length': '16', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2509868Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2511491Z DEBUG:controls.base:Looking for element with XPath: //div[@id='artifactModal']//button[contains(text(), 'Create')]
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2513327Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//div[@id='artifactModal']//button[contains(text(), 'Create')]"}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2596414Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2601847Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.409"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2604119Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2605802Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.409/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2659790Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.409/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2662732Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"Create"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2664578Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2665197Z DEBUG:controls.base:Found element: Create...
smoke-tests	Run smoke tests	2025-08-19T18:23:24.2666662Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.409/click {}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3095370Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.409/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3098396Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3101039Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3106776Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '[id="artifactModal"]'}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3242275Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3245507Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.410"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3250741Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3253176Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.410'}]}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3322302Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3324665Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":false} | headers=HTTPHeaderDict({'Content-Length': '15', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3326699Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3328089Z DEBUG:controls.base:Looking for element with XPath: //div[@class='artifact-card' and contains(., 'Test requirement for BDD testing')]
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3331614Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//div[@class='artifact-card' and contains(., 'Test requirement for BDD testing')]"}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3514427Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3518561Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.421"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3523659Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3525289Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.421/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3623471Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.421/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3629159Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"Requirement\n🟢 Open\n00002\nTest requirement for BDD testing\nThis is a test requirement created during BDD test execution\nVerification: BDD\nCreated: 8/19/2025\nUpdated: 8/19/2025"} | headers=HTTPHeaderDict({'Content-Length': '196', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3632822Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3633451Z DEBUG:controls.base:Found element: Requirement
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3633952Z 🟢 Open
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3634196Z 00002
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3634479Z Test requirement for BDD testing
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3634945Z This is a test requirement created during BDD test execution
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3635413Z Verification: BDD
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3635698Z Created: 8/19/2025
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3635987Z Updated: 8/19/2025...
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3636800Z DEBUG:artifact_creation_steps:Found artifact with summary: Test requirement for BDD testing
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3638812Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '[id="artifactModal"]'}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3679423Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3683343Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.410"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3685627Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3688188Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.AB2B1196274B8167779F5D977C4888DD.e.410'}]}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3734381Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3737966Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":false} | headers=HTTPHeaderDict({'Content-Length': '15', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3739654Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3740533Z DEBUG:support.hooks:Completed scenario: Create New Artifact from Search View in 3.71s
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3742543Z DEBUG:hooks:Completed scenario: Create New Artifact from Search View in 3.71s
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3743319Z DEBUG:support.hooks:Setting up scenario: Cancel Artifact Creation
smoke-tests	Run smoke tests	2025-08-19T18:23:24.3744590Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.4204587Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.4212147Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.4214375Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.4215415Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:23:24.4216394Z DEBUG:hooks:Setting up scenario: Cancel Artifact Creation
smoke-tests	Run smoke tests	2025-08-19T18:23:24.4218242Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.4778774Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.4782035Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.4783814Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.4784690Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:23:24.4785976Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5383929Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5388470Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5399680Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5400781Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5560095Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5562563Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5564908Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5566207Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5639614Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5642673Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.463"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5648242Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5649157Z DEBUG:controls.base:Looking for element with XPath: //div[@class='toolbar']//button[contains(text(), 'Create')]
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5650913Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//div[@class='toolbar']//button[contains(text(), 'Create')]"}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5785436Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5789629Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.465"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5791908Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5793583Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.465/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5890410Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.465/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5894287Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"Create"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5895927Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5896579Z DEBUG:controls.base:Found element: Create...
smoke-tests	Run smoke tests	2025-08-19T18:23:24.5898278Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.465/click {}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6337385Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.465/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6342502Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6345939Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6348866Z DEBUG:controls.base:Looking for element with XPath: //div[@id='artifactModal']
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6352767Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//div[@id='artifactModal']"}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6441841Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6444698Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.471"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6448163Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6449851Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.471/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6560868Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.471/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6565742Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"Create New Artifact\n×\nType\nSelect Type\n▼\nSummary\nDescription\nCategory\nStatus\nSelect Status\n▼\nVerification Method\nFlag this artifact\nCancel\nCreate"} | headers=HTTPHeaderDict({'Content-Length': '176', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6568727Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6569362Z DEBUG:controls.base:Found element: Create New Artifact
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6569845Z ×
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6570061Z Type
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6570294Z Select Type
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6570560Z ▼
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6570780Z Summary
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6571008Z Description
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6571260Z Category
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6571492Z Status
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6571719Z Select Status
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6571993Z ▼
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6572222Z Verification Method
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6572509Z Flag this artifact
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6572766Z Cancel
smoke-tests	Run smoke tests	2025-08-19T18:23:24.6573003Z Create...
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6569926Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '[id="artifactModal"]'}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6624023Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6627525Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.471"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6631273Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6633762Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.471'}]}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6682697Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6685050Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6687153Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6688374Z DEBUG:controls.base:Looking for element with XPath: //select[@id='artifactType']
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6690052Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//select[@id='artifactType']"}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6742272Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6745589Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.451"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6748032Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6749628Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.451/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6804649Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.451/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6807189Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6810025Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6812037Z DEBUG:controls.base:Found element: ...
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6813496Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.451/name {}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6845056Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.451/name HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6848703Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"select"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6850584Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6852596Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.451/element {'using': 'xpath', 'value': "..//div[contains(@class, 'custom-dropdown')]"}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6902079Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.451/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6905749Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.473"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6908276Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6910103Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.473/element {'using': 'xpath', 'value': '..'}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6960942Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.473/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6965611Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.474"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6968070Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.6970499Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.474/element {'using': 'tag name', 'value': 'select'}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7016785Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.474/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7021154Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.451"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7023425Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7026072Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.451'}, 'id']}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7063003Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7065478Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"artifactType"} | headers=HTTPHeaderDict({'Content-Length': '24', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7067399Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7069620Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': "\n                if (typeof setDropdownValue === 'function') {\n                    return setDropdow...", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7114919Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7117344Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7119549Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7121607Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': "\n                    if (typeof getDropdownValue === 'function') {\n                        return ge...", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7150189Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7152558Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"requirement"} | headers=HTTPHeaderDict({'Content-Length': '23', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7154603Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7156803Z DEBUG:controls.base:Looking for element with XPath: //input[@id='artifactSummary']
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7158537Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//input[@id='artifactSummary']"}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7206851Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7210097Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.452"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7215341Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7216907Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.452/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7266885Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.452/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7270021Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7271980Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7272593Z DEBUG:controls.base:Found element: ...
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7274048Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.452/name {}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7308660Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.452/name HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7311625Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"input"} | headers=HTTPHeaderDict({'Content-Length': '17', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7315696Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7317574Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.452/clear {}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7486636Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.452/clear HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7489842Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7491872Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.7494109Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.452/value {'text': 'This will be cancelled', 'value': ['T', 'h', 'i', 's', ' ', 'w', 'i', 'l', 'l', ' ', 'b', 'e', ' ', 'c', 'a', 'n', 'c', 'e', 'l', 'l', 'e', 'd']}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8008998Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.452/value HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8011845Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8013737Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8016016Z DEBUG:controls.base:Looking for element with XPath: //textarea[@id='artifactDescription']
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8018248Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//textarea[@id='artifactDescription']"}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8108234Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8112508Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.453"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8115913Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8118972Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.453/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8172103Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.453/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8175011Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8177967Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8178659Z DEBUG:controls.base:Found element: ...
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8180084Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.453/name {}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8213590Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.453/name HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8220261Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"textarea"} | headers=HTTPHeaderDict({'Content-Length': '20', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8221857Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8223468Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.453/clear {}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8353611Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.453/clear HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8356552Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8359356Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8362148Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.453/value {'text': 'This description will not be saved', 'value': ['T', 'h', 'i', 's', ' ', 'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', ' ', 'w', 'i', 'l', 'l', ' ', 'n', 'o', 't', ' ', 'b', 'e', ' ', 's', 'a', 'v', 'e', 'd']}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8939293Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.453/value HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8942252Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8944265Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8946919Z DEBUG:controls.base:Looking for element with XPath: //select[@id='artifactStatus']
smoke-tests	Run smoke tests	2025-08-19T18:23:27.8951680Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//select[@id='artifactStatus']"}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9001441Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9004673Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.455"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9007449Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9009291Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.455/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9067282Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.455/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9070948Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9072813Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9073406Z DEBUG:controls.base:Found element: ...
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9074866Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.455/name {}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9106203Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.455/name HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9112735Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"select"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9114339Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9116358Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.455/element {'using': 'xpath', 'value': "..//div[contains(@class, 'custom-dropdown')]"}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9164782Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.455/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9169303Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.479"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9171569Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9173465Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.479/element {'using': 'xpath', 'value': '..'}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9224920Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.479/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9228768Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.480"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9231040Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9232892Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.480/element {'using': 'tag name', 'value': 'select'}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9282657Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.480/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9286386Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.455"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9288875Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9291621Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.455'}, 'id']}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9326221Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9328879Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"artifactStatus"} | headers=HTTPHeaderDict({'Content-Length': '26', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9330611Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9332284Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': "\n                if (typeof setDropdownValue === 'function') {\n                    return setDropdow...", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9391075Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9394302Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9398313Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9401154Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': "\n                    if (typeof getDropdownValue === 'function') {\n                        return ge...", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9428373Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9431691Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"in_progress"} | headers=HTTPHeaderDict({'Content-Length': '23', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9433440Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9435609Z DEBUG:controls.base:Looking for element with XPath: //div[@id='artifactModal']//button[contains(text(), 'Cancel')]
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9437357Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//div[@id='artifactModal']//button[contains(text(), 'Cancel')]"}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9514169Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9518364Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.469"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9520969Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9522587Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.469/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9581126Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.469/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9584157Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"Cancel"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9586152Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9586769Z DEBUG:controls.base:Found element: Cancel...
smoke-tests	Run smoke tests	2025-08-19T18:23:27.9588474Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.469/click {}
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0008889Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.469/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0016336Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0018232Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0019711Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '[id="artifactModal"]'}
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0078770Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0081679Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.471"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0084471Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0089020Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.471'}]}
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0132778Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0137145Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":false} | headers=HTTPHeaderDict({'Content-Length': '15', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0138979Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0140679Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '[id="artifactModal"]'}
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0142740Z [A[K        [1m[32mWhen I clear the status filter[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0143142Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0143492Z         [1m[33mAnd I verify the status filter is cleared[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0143875Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0144234Z [A[K        [1m[32mAnd I verify the status filter is cleared[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0144619Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0144907Z         [1m[33mThen I see all artifacts again[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0145234Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0145529Z [A[K        [1m[32mThen I see all artifacts again[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0145870Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0146015Z [36m@smoke
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0146891Z [39m[1m[37mFeature[22m[39m[26m: [1m[37mTest Artifact Tile[22m[39m[26m  # [1m[30mtests/features/test_artifact_tile.feature[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0148228Z     [37mAs a user
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0148650Z     I want to verify that specific artifacts are visible
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0149395Z     So that I can confirm the page is working correctly[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0149792Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0150304Z     [1m[37mScenario[22m[39m[26m: [1m[37mVerify Artifact Tile does not Exist[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0150805Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0151094Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0151419Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0151708Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0152014Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0152305Z         [1m[33mThen I do not see the artifact #99999[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0152628Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0152920Z [A[K        [1m[32mThen I do not see the artifact #99999[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0153293Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0153458Z [36m@smoke
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0154448Z [39m[1m[37mFeature[22m[39m[26m: [1m[37mEdit Dialog Button Text[22m[39m[26m  # [1m[30mtests/features/test_edit_button_text.feature[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0155458Z     [37mAs a user
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0155879Z     I want to see the correct button text in the edit dialog
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0156647Z     So that I know whether I'm creating or editing an artifact[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0157077Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0157591Z     [1m[37mScenario[22m[39m[26m: [1m[37mCreate new artifact shows "Create" button[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0158303Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0158592Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0158919Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0159206Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0159844Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0160436Z         [1m[33mWhen I click the create button[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0160896Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0161265Z [A[K        [1m[31mWhen I click the create button[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0162235Z           [1m[31mElementNotInteractableException[22m[39m[26m: [31mMessage: element not interactable
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0163803Z   (Session info: chrome=139.0.7258.127); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementnotinteractableexception
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0164995Z Stacktrace:
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0165270Z #0 0x559e7f85805a <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0165598Z #1 0x559e7f2f78c3 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0165924Z #2 0x559e7f34ab1e <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0166235Z #3 0x559e7f33db1b <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0166550Z #4 0x559e7f36f3e2 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0166858Z #5 0x559e7f33d49a <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0167166Z #6 0x559e7f36f5ae <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0167475Z #7 0x559e7f39514f <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0167972Z #8 0x559e7f36f1b3 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0168305Z #9 0x559e7f33b59b <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0168616Z #10 0x559e7f33c971 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0168947Z #11 0x559e7f81d22b <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0169272Z #12 0x559e7f820f79 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0169592Z #13 0x559e7f804309 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0170120Z #14 0x559e7f821b28 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0170445Z #15 0x559e7f7e8bef <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0170763Z #16 0x559e7f8450e8 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0171079Z #17 0x559e7f8452c6 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0171396Z #18 0x559e7f857036 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0171717Z #19 0x7f93ebe9caa4 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0172047Z #20 0x7f93ebf29c3c <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0172403Z [39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0172552Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0172843Z         [1m[33mThen I should see the edit dialog[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0173185Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0173463Z [A[K        [36mThen I should see the edit dialog[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0173807Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0174170Z         [1m[33mAnd the submit button should say "Create"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0174552Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0174877Z [A[K        [36mAnd the submit button should say "Create"[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0175416Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0175953Z     [1m[37mScenario[22m[39m[26m: [1m[37mEdit existing artifact shows "Save" button[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0176521Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0176779Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0177069Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0177307Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0177603Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0178025Z         [1m[33mAnd I see artifacts displayed[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0178584Z ✅ Found 1 artifacts displayed
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0178830Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0179126Z [A[K        [1m[32mAnd I see artifacts displayed[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0179462Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0179837Z         [1m[33mWhen I click the edit button on the first artifact[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0180259Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0180646Z [A[K        [1m[32mWhen I click the edit button on the first artifact[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0181094Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0181381Z         [1m[33mThen I should see the edit dialog[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0181724Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0182021Z [A[K        [1m[32mThen I should see the edit dialog[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0182376Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0182694Z         [1m[33mAnd the submit button should say "Save"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0183147Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0183503Z [A[K        [1m[32mAnd the submit button should say "Save"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0183894Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0184065Z [36m@smoke
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0185044Z [39m[1m[37mFeature[22m[39m[26m: [1m[37mTest Artifact Creation[22m[39m[26m  # [1m[30mtests/features/test_artifact_creation.feature[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0185985Z     [37mAs a user
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0186338Z     I want to create new artifacts from the search view
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0186922Z     So that I can add new items to the project[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0187248Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0187696Z     [1m[37mScenario[22m[39m[26m: [1m[37mCreate New Artifact from Search View[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0188354Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0188581Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0188885Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0189136Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0189430Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0189713Z         [1m[33mWhen I create a new requirement[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0190059Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0190369Z [A[K        [1m[32mWhen I create a new requirement[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0190721Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0191050Z         [1m[33mThen I see the artifact creation form[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0191407Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0191737Z [A[K        [1m[32mThen I see the artifact creation form[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0192124Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0192457Z         [1m[33mWhen I set the type to "requirement"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0193122Z Found custom dropdown, using custom dropdown method for 'requirement'
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0193991Z Found original select element: artifactType
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0194667Z Using JavaScript accessibility function to set dropdown value 'requirement'...
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0195542Z Successfully set dropdown value 'requirement' using JavaScript accessibility function
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0196270Z Verified dropdown value is now 'requirement'
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0196583Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0196988Z [A[K        [1m[32mWhen I set the type to "requirement"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0197381Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0200719Z         [1m[33mWhen I set the summary to "Test requirement for BDD testing"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0201186Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0201661Z [A[K        [1m[32mWhen I set the summary to "Test requirement for BDD testing"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0202163Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0202834Z         [1m[33mWhen I set the description to "This is a test requirement created during BDD test execution"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0203706Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0204422Z [A[K        [1m[32mWhen I set the description to "This is a test requirement created during BDD test execution"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0205120Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0205467Z         [1m[33mWhen I set the status to "open"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0206755Z Found custom dropdown, using custom dropdown method for 'open'
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0207328Z Found original select element: artifactStatus
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0208115Z Using JavaScript accessibility function to set dropdown value 'open'...
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0208859Z Successfully set dropdown value 'open' using JavaScript accessibility function
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0209457Z Verified dropdown value is now 'open'
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0209715Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0210055Z [A[K        [1m[32mWhen I set the status to "open"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0210395Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0210663Z         [1m[33mWhen I save the new artifact[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0211005Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0211306Z [A[K        [1m[32mWhen I save the new artifact[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0211643Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0211998Z         [1m[33mThen I see the new artifact in the list[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0212358Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0212760Z [A[K        [1m[32mThen I see the new artifact in the list[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0213165Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0213562Z         [1m[33mThen I do not see the artifact creation form[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0213985Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0214399Z [A[K        [1m[32mThen I do not see the artifact creation form[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0214824Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0215283Z     [1m[37mScenario[22m[39m[26m: [1m[37mCancel Artifact Creation[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0215740Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0216002Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0216320Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0216624Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0216951Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0217290Z         [1m[33mWhen I create a new requirement[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0217670Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0218231Z [A[K        [1m[32mWhen I create a new requirement[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0218590Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0218907Z         [1m[33mThen I see the artifact creation form[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0219270Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0219626Z [A[K        [1m[32mThen I see the artifact creation form[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0220029Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0220376Z         [1m[33mWhen I set the type to "requirement"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0221098Z Found custom dropdown, using custom dropdown method for 'requirement'
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0221720Z Found original select element: artifactType
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0222412Z Using JavaScript accessibility function to set dropdown value 'requirement'...
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0223356Z Successfully set dropdown value 'requirement' using JavaScript accessibility function
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0224487Z Verified dropdown value is now 'requirement'
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0224796Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0225165Z [A[K        [1m[32mWhen I set the type to "requirement"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0225540Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0225911Z         [1m[33mWhen I set the summary to "This will be cancelled"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0226329Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0226720Z [A[K        [1m[32mWhen I set the summary to "This will be cancelled"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0227162Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0227653Z         [1m[33mWhen I set the description to "This description will not be saved"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0228358Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0228865Z [A[K        [1m[32mWhen I set the description to "This description will not be saved"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0229373Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0229727Z         [1m[33mWhen I set the status to "in_progress"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0230654Z Found custom dropdown, using custom dropdown method for 'in_progress'
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0231666Z Found original select element: artifactStatus
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0232656Z Using JavaScript accessibility function to set dropdown value 'in_progress'...
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0233579Z Successfully set dropdown value 'in_progress' using JavaScript accessibility function
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0234318Z Verified dropdown value is now 'in_progress'
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0234659Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0235071Z [A[K        [1m[32mWhen I set the status to "in_progress"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0235467Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0235818Z         [1m[33mWhen I cancel the artifact creation[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0236187Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0236852Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0239647Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.471"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0241984Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0244452Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.471'}]}
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0270670Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0273956Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":false} | headers=HTTPHeaderDict({'Content-Length': '15', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0275684Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0277910Z DEBUG:controls.base:Looking for element with XPath: //h1[contains(text(), 'iflow')]
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0279488Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//h1[contains(text(), 'iflow')]"}
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0356426Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0360277Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.481"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0362895Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0365791Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.481/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0420564Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.481/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0424245Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"iflow - Git-based artifact management system"} | headers=HTTPHeaderDict({'Content-Length': '56', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0426145Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0427274Z DEBUG:controls.base:Found element: iflow - Git-based artifact management system...
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0429008Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '[id="search-input"]'}
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0496808Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0500604Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.458"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0502925Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0504631Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.458/clear {}
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0676449Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.458/clear HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0680137Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0681806Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:28.0684113Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.458/value {'text': 'This will be cancelled', 'value': ['T', 'h', 'i', 's', ' ', 'w', 'i', 'l', 'l', ' ', 'b', 'e', ' ', 'c', 'a', 'n', 'c', 'e', 'l', 'l', 'e', 'd']}
smoke-tests	Run smoke tests	2025-08-19T18:23:28.1278875Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.458/value HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:28.1286659Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:28.1288476Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:28.1290325Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.458/value {'text': '\ue006', 'value': ['\ue006']}
smoke-tests	Run smoke tests	2025-08-19T18:23:28.1457482Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.65C8A96891C2D6E749FFD2522663500F.e.458/value HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:28.1460460Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:28.1461660Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:29.1464154Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.1864956Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.1868555Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.1872560Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.1873298Z DEBUG:artifact_creation_steps:Search returned 0 results as expected
smoke-tests	Run smoke tests	2025-08-19T18:23:39.1874059Z DEBUG:support.hooks:Completed scenario: Cancel Artifact Creation in 14.77s
smoke-tests	Run smoke tests	2025-08-19T18:23:39.1874826Z DEBUG:hooks:Completed scenario: Cancel Artifact Creation in 14.77s
smoke-tests	Run smoke tests	2025-08-19T18:23:39.1875593Z DEBUG:support.hooks:Setting up scenario: Verify Version Information in Header
smoke-tests	Run smoke tests	2025-08-19T18:23:39.1876947Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.2461255Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.2466918Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.2471782Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.2472716Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:23:39.2473695Z DEBUG:hooks:Setting up scenario: Verify Version Information in Header
smoke-tests	Run smoke tests	2025-08-19T18:23:39.2475389Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.3226996Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.3229123Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.3230679Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.3231316Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:23:39.3232407Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.3861605Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.3870683Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.3872231Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.3873318Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.3992979Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.3995013Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.3996657Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.3998412Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4209408Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4236779Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.763CD060C4326735B529FF79C1E5767C.e.526"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4239849Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4241313Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '[id="header-version"]'}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4412538Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4430048Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.763CD060C4326735B529FF79C1E5767C.e.528"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4432746Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4434815Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.763CD060C4326735B529FF79C1E5767C.e.528/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4484917Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.763CD060C4326735B529FF79C1E5767C.e.528/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4490759Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"v0.4.0a2"} | headers=HTTPHeaderDict({'Content-Length': '20', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4493125Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4495381Z DEBUG:version_display_steps:✅ Version information found in header: v0.4.0a2
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4497165Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '[id="stats-bar"]'}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4578149Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4581462Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.763CD060C4326735B529FF79C1E5767C.e.532"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4583737Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4587474Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.763CD060C4326735B529FF79C1E5767C.e.532/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4651358Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.763CD060C4326735B529FF79C1E5767C.e.532/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4655242Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"2\nTotal Artifacts\n6\nTotal Commits\nmaster\nBranch\n1\nArtifact Types\n✓\nGit Status"} | headers=HTTPHeaderDict({'Content-Length': '100', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4657963Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4659919Z DEBUG:version_display_steps:✅ No version information found in statistics line
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4661239Z DEBUG:support.hooks:Completed scenario: Verify Version Information in Header in 0.22s
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4665033Z DEBUG:hooks:Completed scenario: Verify Version Information in Header in 0.22s
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4665934Z DEBUG:support.hooks:Setting up scenario: Verify Statistics Line Without Version
smoke-tests	Run smoke tests	2025-08-19T18:23:39.4667224Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.5152102Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.5160352Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.5163937Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.5164680Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:23:39.5165319Z DEBUG:hooks:Setting up scenario: Verify Statistics Line Without Version
smoke-tests	Run smoke tests	2025-08-19T18:23:39.5166515Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.5845102Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.5850180Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.5860154Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.5863452Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:23:39.5864584Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.6528717Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.6530996Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.6532784Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.6533999Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.6700654Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.6709366Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.6711561Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.6723848Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.6927389Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.6932504Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.CE3E140DF5A6FED1C074C85492365C43.e.575"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.6940114Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.6948620Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '[id="stats-bar"]'}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7002167Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7005958Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.CE3E140DF5A6FED1C074C85492365C43.e.576"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7008533Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7010971Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.CE3E140DF5A6FED1C074C85492365C43.e.576'}]}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7088942Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7091784Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7093364Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7094299Z DEBUG:version_display_steps:✅ Statistics line is visible
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7095688Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '[id="stats-bar"]'}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7147591Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7153348Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.CE3E140DF5A6FED1C074C85492365C43.e.576"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7156315Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7159357Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.CE3E140DF5A6FED1C074C85492365C43.e.576/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7228262Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.CE3E140DF5A6FED1C074C85492365C43.e.576/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7232508Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"2\nTotal Artifacts\n6\nTotal Commits\nmaster\nBranch\n1\nArtifact Types\n✓\nGit Status"} | headers=HTTPHeaderDict({'Content-Length': '100', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7234832Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7235934Z DEBUG:version_display_steps:✅ Statistics line does not contain version information
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7238303Z DEBUG:support.hooks:Completed scenario: Verify Statistics Line Without Version in 0.21s
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7240900Z DEBUG:hooks:Completed scenario: Verify Statistics Line Without Version in 0.21s
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7242075Z DEBUG:support.hooks:Setting up scenario: Refresh artifacts using toolbar refresh button
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7243807Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7697350Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7700434Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7702236Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7702982Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7710163Z DEBUG:hooks:Setting up scenario: Refresh artifacts using toolbar refresh button
smoke-tests	Run smoke tests	2025-08-19T18:23:39.7711605Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.8378516Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.8385302Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.8408373Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.8409990Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:23:39.8420296Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.8950115Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.8959379Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.8961962Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.8963427Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/url {}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9155034Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9157693Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9159682Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9161158Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9279102Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9282004Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.CB1740D5B5FA26D2E48034D8E8D7D1F8.e.620"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9286776Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9288368Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9443744Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9447462Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.CB1740D5B5FA26D2E48034D8E8D7D1F8.e.623"},{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.CB1740D5B5FA26D2E48034D8E8D7D1F8.e.624"}]} | headers=HTTPHeaderDict({'Content-Length': '247', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9450714Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9453132Z DEBUG:controls.base:Looking for element with XPath: //div[@class='toolbar']//button[.//ion-icon[@name='refresh-outline']]
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9454976Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element {'using': 'xpath', 'value': "//div[@class='toolbar']//button[.//ion-icon[@name='refresh-outline']]"}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9549272Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9552338Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.CB1740D5B5FA26D2E48034D8E8D7D1F8.e.628"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9555001Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9556911Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.CB1740D5B5FA26D2E48034D8E8D7D1F8.e.628/text {}
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9618230Z DEBUG:urllib3.connectionpool:http://localhost:42687 "GET /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.CB1740D5B5FA26D2E48034D8E8D7D1F8.e.628/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9624606Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9626468Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9627086Z DEBUG:controls.base:Found element: ...
smoke-tests	Run smoke tests	2025-08-19T18:23:39.9628790Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.CB1740D5B5FA26D2E48034D8E8D7D1F8.e.628/click {}
smoke-tests	Run smoke tests	2025-08-19T18:23:40.0044038Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/element/f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.CB1740D5B5FA26D2E48034D8E8D7D1F8.e.628/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:40.0046807Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:40.0048611Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0045280Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0108506Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0115017Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.CB1740D5B5FA26D2E48034D8E8D7D1F8.e.629"},{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.CB1740D5B5FA26D2E48034D8E8D7D1F8.e.630"}]} | headers=HTTPHeaderDict({'Content-Length': '247', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0118723Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0120099Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:42687/session/36d49c0ea13a1a2b64745bbe8f519d75/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0159719Z DEBUG:urllib3.connectionpool:http://localhost:42687 "POST /session/36d49c0ea13a1a2b64745bbe8f519d75/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0164236Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.CB1740D5B5FA26D2E48034D8E8D7D1F8.e.629"},{"element-6066-11e4-a52e-4f735466cecf":"f.BC1A636ED1DD485C27F94C5DEF2B2AC6.d.CB1740D5B5FA26D2E48034D8E8D7D1F8.e.630"}]} | headers=HTTPHeaderDict({'Content-Length': '247', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0167098Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0170954Z DEBUG:support.hooks:Completed scenario: Refresh artifacts using toolbar refresh button in 2.25s
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0171865Z DEBUG:hooks:Completed scenario: Refresh artifacts using toolbar refresh button in 2.25s
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0174164Z [A[K        [1m[32mWhen I cancel the artifact creation[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0177918Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0180822Z         [1m[33mThen I do not see the artifact creation form[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0183016Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0185164Z [A[K        [1m[32mThen I do not see the artifact creation form[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0190108Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0190429Z         [1m[33mThen I remain on the search view[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0193769Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0194084Z [A[K        [1m[32mThen I remain on the search view[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0194402Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0194792Z         [1m[33mWhen I search for artifacts with "This will be cancelled"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0195189Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0195578Z [A[K        [1m[32mWhen I search for artifacts with "This will be cancelled"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0196001Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0196247Z         [1m[33mThen I see 0 search results[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0196527Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0196786Z [A[K        [1m[32mThen I see 0 search results[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0197088Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0197223Z [36m@smoke
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0198250Z [39m[1m[37mFeature[22m[39m[26m: [1m[37mVersion Display Verification[22m[39m[26m  # [1m[30mtests/features/test_version_display.feature[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0199080Z     [37mAs a user
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0199408Z     I want to see version information in the header
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0199998Z     So that I can identify the current application version[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0200666Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0201078Z     [1m[37mScenario[22m[39m[26m: [1m[37mVerify Version Information in Header[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0201504Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0201725Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0201982Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0202198Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0202465Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0202770Z         [1m[33mThen I see version information in the header[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0203143Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0203485Z [A[K        [1m[32mThen I see version information in the header[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0203837Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0204213Z         [1m[33mAnd I do not see version information in the statistics line[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0204609Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0205189Z [A[K        [1m[32mAnd I do not see version information in the statistics line[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0205609Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0206033Z     [1m[37mScenario[22m[39m[26m: [1m[37mVerify Statistics Line Without Version[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0206476Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0206686Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0206937Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0207180Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0207435Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0207680Z         [1m[33mThen I see the statistics line[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0208817Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0209096Z [A[K        [1m[32mThen I see the statistics line[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0209402Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0209796Z         [1m[33mAnd the statistics line does not contain version information[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0210211Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0210611Z [A[K        [1m[32mAnd the statistics line does not contain version information[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0211046Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0211177Z [36m@smoke
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0212035Z [39m[1m[37mFeature[22m[39m[26m: [1m[37mToolbar Refresh Functionality[22m[39m[26m  # [1m[30mtests/features/test_toolbar_refresh.feature[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0212867Z     [37mAs a user
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0213182Z     I want to refresh the artifacts in the search view
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0213792Z     So that I can see the latest data without reloading the page[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0214147Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0214620Z     [1m[37mScenario[22m[39m[26m: [1m[37mRefresh artifacts using toolbar refresh button[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0215092Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0215300Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0215555Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0215768Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0216025Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0216278Z         [1m[33mAnd I see artifacts displayed[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0216748Z ✅ Found 2 artifacts displayed
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0216977Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0217235Z [A[K        [1m[32mAnd I see artifacts displayed[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0217534Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0218040Z         [1m[33mWhen I click the refresh button in the toolbar[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0218398Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0218726Z [A[K        [1m[32mWhen I click the refresh button in the toolbar[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0219095Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0219394Z         [1m[33mThen the artifacts should be refreshed[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0219979Z ✅ Artifacts refreshed successfully (2 artifacts visible)
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0220339Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0220679Z [A[K        [1m[32mThen the artifacts should be refreshed[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0221051Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0221341Z         [1m[33mAnd I should see the latest data[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0221828Z ✅ Latest data is displayed
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0222043Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0222326Z [A[K        [1m[32mAnd I should see the latest data[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0222846Z 
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0223374Z [1m[37m7 features ([22m[39m[1m[32m5 passed[22m[39m[1m[37m, [22m[39m[1m[31m2 failed[22m[39m[1m[37m)[22m[39m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0224416Z [1m[37m12 scenarios ([22m[39m[1m[32m10 passed[22m[39m[1m[37m, [22m[39m[1m[31m2 failed[22m[39m[1m[37m)[22m[39m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0225590Z [1m[37m76 steps ([22m[39m[1m[32m68 passed[22m[39m[1m[37m, [22m[39m[1m[31m2 failed[22m[39m[1m[37m, [22m[39m[36m6 skipped[39m[1m[37m)[22m[39m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.0226584Z [36mRun fb029148-f7d1-4eae-9cce-0408e481ef40 finished within a minute[39m
smoke-tests	Run smoke tests	2025-08-19T18:23:42.1023910Z ##[error]Process completed with exit code 1.
smoke-tests	Cleanup	﻿2025-08-19T18:23:42.1068314Z ##[group]Run # Stop the server using stored PID
smoke-tests	Cleanup	2025-08-19T18:23:42.1068692Z [36;1m# Stop the server using stored PID[0m
smoke-tests	Cleanup	2025-08-19T18:23:42.1069000Z [36;1mif [ -f /tmp/iflow_server.pid ]; then[0m
smoke-tests	Cleanup	2025-08-19T18:23:42.1069281Z [36;1m  PID=$(cat /tmp/iflow_server.pid)[0m
smoke-tests	Cleanup	2025-08-19T18:23:42.1069556Z [36;1m  kill $PID 2>/dev/null || true[0m
smoke-tests	Cleanup	2025-08-19T18:23:42.1069811Z [36;1m  rm -f /tmp/iflow_server.pid[0m
smoke-tests	Cleanup	2025-08-19T18:23:42.1070039Z [36;1mfi[0m
smoke-tests	Cleanup	2025-08-19T18:23:42.1070209Z [36;1m[0m
smoke-tests	Cleanup	2025-08-19T18:23:42.1070420Z [36;1m# Also try to kill by process name as backup[0m
smoke-tests	Cleanup	2025-08-19T18:23:42.1070748Z [36;1mpkill -f "python -m iflow.web_server" || true[0m
smoke-tests	Cleanup	2025-08-19T18:23:42.1071024Z [36;1m[0m
smoke-tests	Cleanup	2025-08-19T18:23:42.1071216Z [36;1mecho "✅ Cleanup completed"[0m
smoke-tests	Cleanup	2025-08-19T18:23:42.1111229Z shell: /usr/bin/bash -e {0}
smoke-tests	Cleanup	2025-08-19T18:23:42.1111480Z env:
smoke-tests	Cleanup	2025-08-19T18:23:42.1111752Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Cleanup	2025-08-19T18:23:42.1112230Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
smoke-tests	Cleanup	2025-08-19T18:23:42.1112717Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Cleanup	2025-08-19T18:23:42.1113128Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Cleanup	2025-08-19T18:23:42.1113536Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Cleanup	2025-08-19T18:23:42.1113959Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
smoke-tests	Cleanup	2025-08-19T18:23:42.1114316Z ##[endgroup]
smoke-tests	Cleanup	2025-08-19T18:23:42.1327652Z ✅ Cleanup completed
smoke-tests	Post Checkout iflow repository	﻿2025-08-19T18:23:42.1412407Z Post job cleanup.
smoke-tests	Post Checkout iflow repository	2025-08-19T18:23:42.2229470Z [command]/usr/bin/git version
smoke-tests	Post Checkout iflow repository	2025-08-19T18:23:42.2270905Z git version 2.50.1
smoke-tests	Post Checkout iflow repository	2025-08-19T18:23:42.2313012Z Temporarily overriding HOME='/home/runner/work/_temp/54cffb89-db4c-4c3d-bc90-eed977a21652' before making global git config changes
smoke-tests	Post Checkout iflow repository	2025-08-19T18:23:42.2314872Z Adding repository directory to the temporary git global config as a safe directory
smoke-tests	Post Checkout iflow repository	2025-08-19T18:23:42.2319617Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/iflow/iflow
smoke-tests	Post Checkout iflow repository	2025-08-19T18:23:42.2368571Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
smoke-tests	Post Checkout iflow repository	2025-08-19T18:23:42.2407330Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
smoke-tests	Post Checkout iflow repository	2025-08-19T18:23:42.2649792Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
smoke-tests	Post Checkout iflow repository	2025-08-19T18:23:42.2674419Z http.https://github.com/.extraheader
smoke-tests	Post Checkout iflow repository	2025-08-19T18:23:42.2686078Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
smoke-tests	Post Checkout iflow repository	2025-08-19T18:23:42.2722691Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
smoke-tests	Complete job	﻿2025-08-19T18:23:42.3074449Z Cleaning up orphan processes
smoke-tests	Complete job	2025-08-19T18:23:42.3343034Z Terminate orphan process: pid (4094) (chromedriver)
smoke-tests	Complete job	2025-08-19T18:23:42.3370289Z Terminate orphan process: pid (4100) (chrome)
smoke-tests	Complete job	2025-08-19T18:23:42.3399581Z Terminate orphan process: pid (4104) (cat)
smoke-tests	Complete job	2025-08-19T18:23:42.3425527Z Terminate orphan process: pid (4105) (cat)
smoke-tests	Complete job	2025-08-19T18:23:42.3453719Z Terminate orphan process: pid (4107) (chrome_crashpad_handler)
smoke-tests	Complete job	2025-08-19T18:23:42.3483998Z Terminate orphan process: pid (4109) (chrome_crashpad_handler)
