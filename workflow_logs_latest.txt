smoke-tests	Set up job	﻿2025-08-19T18:12:23.7520949Z Current runner version: '2.327.1'
smoke-tests	Set up job	2025-08-19T18:12:23.7559114Z ##[group]Runner Image Provisioner
smoke-tests	Set up job	2025-08-19T18:12:23.7560425Z Hosted Compute Agent
smoke-tests	Set up job	2025-08-19T18:12:23.7561222Z Version: 20250818.377
smoke-tests	Set up job	2025-08-19T18:12:23.7562195Z Commit: 3c593e9f75fe0b87e893bca80d6e12ba089c61fc
smoke-tests	Set up job	2025-08-19T18:12:23.7563391Z Build Date: 2025-08-18T14:52:18Z
smoke-tests	Set up job	2025-08-19T18:12:23.7564557Z ##[endgroup]
smoke-tests	Set up job	2025-08-19T18:12:23.7565400Z ##[group]Operating System
smoke-tests	Set up job	2025-08-19T18:12:23.7566347Z Ubuntu
smoke-tests	Set up job	2025-08-19T18:12:23.7567130Z 24.04.2
smoke-tests	Set up job	2025-08-19T18:12:23.7567774Z LTS
smoke-tests	Set up job	2025-08-19T18:12:23.7568602Z ##[endgroup]
smoke-tests	Set up job	2025-08-19T18:12:23.7569400Z ##[group]Runner Image
smoke-tests	Set up job	2025-08-19T18:12:23.7570352Z Image: ubuntu-24.04
smoke-tests	Set up job	2025-08-19T18:12:23.7571202Z Version: 20250810.1.0
smoke-tests	Set up job	2025-08-19T18:12:23.7572968Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250810.1/images/ubuntu/Ubuntu2404-Readme.md
smoke-tests	Set up job	2025-08-19T18:12:23.7575663Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250810.1
smoke-tests	Set up job	2025-08-19T18:12:23.7577682Z ##[endgroup]
smoke-tests	Set up job	2025-08-19T18:12:23.7579575Z ##[group]GITHUB_TOKEN Permissions
smoke-tests	Set up job	2025-08-19T18:12:23.7582373Z Contents: read
smoke-tests	Set up job	2025-08-19T18:12:23.7583356Z Metadata: read
smoke-tests	Set up job	2025-08-19T18:12:23.7584400Z Packages: read
smoke-tests	Set up job	2025-08-19T18:12:23.7585181Z ##[endgroup]
smoke-tests	Set up job	2025-08-19T18:12:23.7588162Z Secret source: Actions
smoke-tests	Set up job	2025-08-19T18:12:23.7589218Z Prepare workflow directory
smoke-tests	Set up job	2025-08-19T18:12:23.8049655Z Prepare all required actions
smoke-tests	Set up job	2025-08-19T18:12:23.8105548Z Getting action download info
smoke-tests	Set up job	2025-08-19T18:12:24.1971111Z Download action repository 'actions/checkout@v5' (SHA:08c6903cd8c0fde910a37f88322edcfb5dd907a8)
smoke-tests	Set up job	2025-08-19T18:12:24.4826304Z Download action repository 'actions/setup-python@v4' (SHA:7f4fc3e22c37d6ff65e88745f38bd3157c663f7c)
smoke-tests	Set up job	2025-08-19T18:12:24.8536676Z Complete job name: smoke-tests
smoke-tests	Checkout iflow repository	﻿2025-08-19T18:12:24.9231414Z ##[group]Run actions/checkout@v5
smoke-tests	Checkout iflow repository	2025-08-19T18:12:24.9232316Z with:
smoke-tests	Checkout iflow repository	2025-08-19T18:12:24.9232753Z   repository: iflow-dev/iflow
smoke-tests	Checkout iflow repository	2025-08-19T18:12:24.9233405Z   token: ***
smoke-tests	Checkout iflow repository	2025-08-19T18:12:24.9234060Z   ssh-strict: true
smoke-tests	Checkout iflow repository	2025-08-19T18:12:24.9234750Z   ssh-user: git
smoke-tests	Checkout iflow repository	2025-08-19T18:12:24.9235197Z   persist-credentials: true
smoke-tests	Checkout iflow repository	2025-08-19T18:12:24.9235673Z   clean: true
smoke-tests	Checkout iflow repository	2025-08-19T18:12:24.9236101Z   sparse-checkout-cone-mode: true
smoke-tests	Checkout iflow repository	2025-08-19T18:12:24.9236615Z   fetch-depth: 1
smoke-tests	Checkout iflow repository	2025-08-19T18:12:24.9237023Z   fetch-tags: false
smoke-tests	Checkout iflow repository	2025-08-19T18:12:24.9237452Z   show-progress: true
smoke-tests	Checkout iflow repository	2025-08-19T18:12:24.9237879Z   lfs: false
smoke-tests	Checkout iflow repository	2025-08-19T18:12:24.9238289Z   submodules: false
smoke-tests	Checkout iflow repository	2025-08-19T18:12:24.9238711Z   set-safe-directory: true
smoke-tests	Checkout iflow repository	2025-08-19T18:12:24.9239561Z ##[endgroup]
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0262720Z Syncing repository: iflow-dev/iflow
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0267217Z ##[group]Getting Git version info
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0269756Z Working directory is '/home/runner/work/iflow/iflow'
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0271396Z [command]/usr/bin/git version
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0303663Z git version 2.50.1
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0327869Z ##[endgroup]
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0345312Z Temporarily overriding HOME='/home/runner/work/_temp/64dc71e8-e978-44d1-a9a8-30067ba7d9b3' before making global git config changes
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0348858Z Adding repository directory to the temporary git global config as a safe directory
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0352480Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/iflow/iflow
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0390958Z Deleting the contents of '/home/runner/work/iflow/iflow'
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0396097Z ##[group]Initializing the repository
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0401604Z [command]/usr/bin/git init /home/runner/work/iflow/iflow
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0468199Z hint: Using 'master' as the name for the initial branch. This default branch name
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0471748Z hint: is subject to change. To configure the initial branch name to use in all
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0473397Z hint: of your new repositories, which will suppress this warning, call:
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0474923Z hint:
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0476464Z hint: 	git config --global init.defaultBranch <name>
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0477517Z hint:
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0478855Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0480370Z hint: 'development'. The just-created branch can be renamed via this command:
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0481634Z hint:
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0482319Z hint: 	git branch -m <name>
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0483099Z hint:
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0484417Z hint: Disable this message with "git config set advice.defaultBranchName false"
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0486108Z Initialized empty Git repository in /home/runner/work/iflow/iflow/.git/
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0489634Z [command]/usr/bin/git remote add origin https://github.com/iflow-dev/iflow
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0525175Z ##[endgroup]
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0526547Z ##[group]Disabling automatic garbage collection
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0528630Z [command]/usr/bin/git config --local gc.auto 0
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0561250Z ##[endgroup]
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0566295Z ##[group]Setting up auth
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0569130Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0603596Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0890090Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.0923558Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.1162983Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.1202383Z ##[endgroup]
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.1206405Z ##[group]Fetching the repository
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.1215345Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +52be9e21a2e8926e4e12f78c86bba3d589c14ef2:refs/remotes/pull/15/merge
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4388057Z From https://github.com/iflow-dev/iflow
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4396182Z  * [new ref]         52be9e21a2e8926e4e12f78c86bba3d589c14ef2 -> pull/15/merge
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4401856Z ##[endgroup]
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4403412Z ##[group]Determining the checkout info
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4405557Z ##[endgroup]
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4406633Z [command]/usr/bin/git sparse-checkout disable
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4445555Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4472671Z ##[group]Checking out the ref
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4476059Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/15/merge
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4552706Z Note: switching to 'refs/remotes/pull/15/merge'.
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4553620Z 
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4554949Z You are in 'detached HEAD' state. You can look around, make experimental
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4556826Z changes and commit them, and you can discard any commits you make in this
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4558678Z state without impacting any branches by switching back to a branch.
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4559842Z 
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4560642Z If you want to create a new branch to retain commits you create, you may
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4562518Z do so (now or later) by using -c with the switch command. Example:
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4563618Z 
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4564461Z   git switch -c <new-branch-name>
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4565315Z 
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4565908Z Or undo this operation with:
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4566729Z 
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4567261Z   git switch -
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4567946Z 
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4569308Z Turn off this advice by setting config variable advice.detachedHead to false
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4570592Z 
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4571918Z HEAD is now at 52be9e2 Merge 8241403861cc84520b0da015b51f43ebd30aa95b into 0b5b66a6add459533112c471188c72dab7b3df22
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4579347Z ##[endgroup]
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4613344Z [command]/usr/bin/git log -1 --format=%H
smoke-tests	Checkout iflow repository	2025-08-19T18:12:25.4636434Z 52be9e21a2e8926e4e12f78c86bba3d589c14ef2
smoke-tests	Set up Python	﻿2025-08-19T18:12:25.4908317Z ##[group]Run actions/setup-python@v4
smoke-tests	Set up Python	2025-08-19T18:12:25.4909173Z with:
smoke-tests	Set up Python	2025-08-19T18:12:25.4909808Z   python-version: 3.11
smoke-tests	Set up Python	2025-08-19T18:12:25.4910502Z   check-latest: false
smoke-tests	Set up Python	2025-08-19T18:12:25.4911333Z   token: ***
smoke-tests	Set up Python	2025-08-19T18:12:25.4911989Z   update-environment: true
smoke-tests	Set up Python	2025-08-19T18:12:25.4912709Z   allow-prereleases: false
smoke-tests	Set up Python	2025-08-19T18:12:25.4913406Z ##[endgroup]
smoke-tests	Set up Python	2025-08-19T18:12:25.6839250Z ##[group]Installed versions
smoke-tests	Set up Python	2025-08-19T18:12:25.7552581Z Successfully set up CPython (3.11.13)
smoke-tests	Set up Python	2025-08-19T18:12:25.7555617Z ##[endgroup]
smoke-tests	Install system dependencies	﻿2025-08-19T18:12:25.7705345Z ##[group]Run sudo apt-get update
smoke-tests	Install system dependencies	2025-08-19T18:12:25.7706308Z [36;1msudo apt-get update[0m
smoke-tests	Install system dependencies	2025-08-19T18:12:25.7707189Z [36;1msudo apt-get install -y git wget unzip curl[0m
smoke-tests	Install system dependencies	2025-08-19T18:12:25.7914426Z shell: /usr/bin/bash -e {0}
smoke-tests	Install system dependencies	2025-08-19T18:12:25.7916038Z env:
smoke-tests	Install system dependencies	2025-08-19T18:12:25.7917503Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install system dependencies	2025-08-19T18:12:25.7919447Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
smoke-tests	Install system dependencies	2025-08-19T18:12:25.7921381Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install system dependencies	2025-08-19T18:12:25.7923128Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install system dependencies	2025-08-19T18:12:25.7925164Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install system dependencies	2025-08-19T18:12:25.7926945Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
smoke-tests	Install system dependencies	2025-08-19T18:12:25.7928598Z ##[endgroup]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.0067197Z Get:1 file:/etc/apt/apt-mirrors.txt Mirrorlist [144 B]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.0844342Z Hit:2 http://azure.archive.ubuntu.com/ubuntu noble InRelease
smoke-tests	Install system dependencies	2025-08-19T18:12:26.1010657Z Hit:6 https://packages.microsoft.com/repos/azure-cli noble InRelease
smoke-tests	Install system dependencies	2025-08-19T18:12:26.1013163Z Get:7 https://packages.microsoft.com/ubuntu/24.04/prod noble InRelease [3600 B]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.1026210Z Get:3 http://azure.archive.ubuntu.com/ubuntu noble-updates InRelease [126 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.1028555Z Get:4 http://azure.archive.ubuntu.com/ubuntu noble-backports InRelease [126 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.1030905Z Get:5 http://azure.archive.ubuntu.com/ubuntu noble-security InRelease [126 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.4020759Z Get:8 https://packages.microsoft.com/ubuntu/24.04/prod noble/main amd64 Packages [47.9 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.4194477Z Get:9 https://packages.microsoft.com/ubuntu/24.04/prod noble/main arm64 Packages [33.1 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.4699170Z Get:10 http://azure.archive.ubuntu.com/ubuntu noble-updates/main amd64 Packages [1337 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.4826095Z Get:11 http://azure.archive.ubuntu.com/ubuntu noble-updates/main Translation-en [267 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.4857971Z Get:12 http://azure.archive.ubuntu.com/ubuntu noble-updates/main amd64 Components [175 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.4915881Z Get:13 http://azure.archive.ubuntu.com/ubuntu noble-updates/universe amd64 Packages [1122 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.5021599Z Get:14 http://azure.archive.ubuntu.com/ubuntu noble-updates/universe Translation-en [288 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.5078860Z Get:15 http://azure.archive.ubuntu.com/ubuntu noble-updates/universe amd64 Components [377 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.5163410Z Get:16 http://azure.archive.ubuntu.com/ubuntu noble-updates/restricted amd64 Packages [1700 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.5416754Z Get:17 http://azure.archive.ubuntu.com/ubuntu noble-updates/restricted Translation-en [375 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.5440622Z Get:18 http://azure.archive.ubuntu.com/ubuntu noble-updates/restricted amd64 Components [212 B]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.5516637Z Get:19 http://azure.archive.ubuntu.com/ubuntu noble-updates/multiverse amd64 Components [940 B]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.6960278Z Get:20 http://azure.archive.ubuntu.com/ubuntu noble-backports/main amd64 Components [7088 B]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.6967395Z Get:21 http://azure.archive.ubuntu.com/ubuntu noble-backports/universe amd64 Packages [30.2 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.6981290Z Get:22 http://azure.archive.ubuntu.com/ubuntu noble-backports/universe Translation-en [17.4 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.7001734Z Get:23 http://azure.archive.ubuntu.com/ubuntu noble-backports/universe amd64 Components [19.2 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.7010771Z Get:24 http://azure.archive.ubuntu.com/ubuntu noble-backports/restricted amd64 Components [216 B]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.7019640Z Get:25 http://azure.archive.ubuntu.com/ubuntu noble-backports/multiverse amd64 Components [212 B]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.7446358Z Get:26 http://azure.archive.ubuntu.com/ubuntu noble-security/main amd64 Packages [1075 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.7505721Z Get:27 http://azure.archive.ubuntu.com/ubuntu noble-security/main Translation-en [186 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.7533451Z Get:28 http://azure.archive.ubuntu.com/ubuntu noble-security/main amd64 Components [21.6 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.7541819Z Get:29 http://azure.archive.ubuntu.com/ubuntu noble-security/universe amd64 Packages [879 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.7618192Z Get:30 http://azure.archive.ubuntu.com/ubuntu noble-security/universe Translation-en [195 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.7633552Z Get:31 http://azure.archive.ubuntu.com/ubuntu noble-security/universe amd64 Components [52.3 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.7643613Z Get:32 http://azure.archive.ubuntu.com/ubuntu noble-security/restricted amd64 Packages [1610 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.7742445Z Get:33 http://azure.archive.ubuntu.com/ubuntu noble-security/restricted Translation-en [357 kB]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.8231189Z Get:34 http://azure.archive.ubuntu.com/ubuntu noble-security/restricted amd64 Components [212 B]
smoke-tests	Install system dependencies	2025-08-19T18:12:26.8240682Z Get:35 http://azure.archive.ubuntu.com/ubuntu noble-security/multiverse amd64 Components [212 B]
smoke-tests	Install system dependencies	2025-08-19T18:12:34.1042345Z Fetched 10.6 MB in 2s (5584 kB/s)
smoke-tests	Install system dependencies	2025-08-19T18:12:34.8380801Z Reading package lists...
smoke-tests	Install system dependencies	2025-08-19T18:12:34.8752670Z Reading package lists...
smoke-tests	Install system dependencies	2025-08-19T18:12:35.0433334Z Building dependency tree...
smoke-tests	Install system dependencies	2025-08-19T18:12:35.0441034Z Reading state information...
smoke-tests	Install system dependencies	2025-08-19T18:12:35.2392325Z git is already the newest version (1:2.50.1-0ppa1~ubuntu24.04.1).
smoke-tests	Install system dependencies	2025-08-19T18:12:35.2406545Z git set to manually installed.
smoke-tests	Install system dependencies	2025-08-19T18:12:35.2408420Z wget is already the newest version (1.21.4-1ubuntu4.1).
smoke-tests	Install system dependencies	2025-08-19T18:12:35.2409044Z unzip is already the newest version (6.0-28ubuntu4.1).
smoke-tests	Install system dependencies	2025-08-19T18:12:35.2409622Z curl is already the newest version (8.5.0-2ubuntu10.6).
smoke-tests	Install system dependencies	2025-08-19T18:12:35.2410261Z 0 upgraded, 0 newly installed, 0 to remove and 39 not upgraded.
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	﻿2025-08-19T18:12:35.2460497Z ##[group]Run # Install Chrome using the official Google repository
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2461023Z [36;1m# Install Chrome using the official Google repository[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2461707Z [36;1mwget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2462421Z [36;1mecho "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2462982Z [36;1msudo apt-get update[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2463257Z [36;1msudo apt-get install -y google-chrome-stable[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2463529Z [36;1m[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2463727Z [36;1m# Verify Chrome installation[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2464332Z [36;1mecho "Chrome installed successfully"[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2464628Z [36;1mgoogle-chrome --version[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2464864Z [36;1m[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2465158Z [36;1m# Selenium Manager will automatically download compatible ChromeDriver[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2465704Z [36;1mecho "✅ Chrome installed - ChromeDriver will be auto-downloaded by Selenium"[0m
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2509637Z shell: /usr/bin/bash -e {0}
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2509888Z env:
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2510146Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2510581Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2510983Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2511353Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2511749Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2512099Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.2512572Z ##[endgroup]
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.3936105Z Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.5572175Z OK
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.5730849Z deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.6515875Z Get:1 file:/etc/apt/apt-mirrors.txt Mirrorlist [144 B]
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.7247119Z Hit:2 http://azure.archive.ubuntu.com/ubuntu noble InRelease
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.7248060Z Hit:6 https://packages.microsoft.com/repos/azure-cli noble InRelease
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.7248895Z Hit:7 https://packages.microsoft.com/ubuntu/24.04/prod noble InRelease
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.7249688Z Hit:3 http://azure.archive.ubuntu.com/ubuntu noble-updates InRelease
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.7275182Z Hit:4 http://azure.archive.ubuntu.com/ubuntu noble-backports InRelease
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.7276053Z Hit:5 http://azure.archive.ubuntu.com/ubuntu noble-security InRelease
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:35.7485591Z Get:8 http://dl.google.com/linux/chrome/deb stable InRelease [1825 B]
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:36.2665713Z Get:9 http://dl.google.com/linux/chrome/deb stable/main amd64 Packages [1215 B]
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:36.4619100Z Fetched 3040 B in 1s (4592 B/s)
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:37.2481129Z Reading package lists...
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:37.2819645Z Reading package lists...
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:37.4752022Z Building dependency tree...
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:37.4762027Z Reading state information...
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:37.6662914Z The following packages will be upgraded:
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:37.6667203Z   google-chrome-stable
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:37.7782751Z 1 upgraded, 0 newly installed, 0 to remove and 39 not upgraded.
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:37.7784980Z Need to get 119 MB of archives.
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:37.7785625Z After this operation, 17.4 kB of additional disk space will be used.
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:37.7786734Z Get:1 http://dl.google.com/linux/chrome/deb stable/main amd64 google-chrome-stable amd64 139.0.7258.127-1 [119 MB]
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:38.7589656Z Fetched 119 MB in 1s (152 MB/s)
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:38.8508785Z (Reading database ... 
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:38.8509217Z (Reading database ... 5%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:38.8514462Z (Reading database ... 10%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:38.8514860Z (Reading database ... 15%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:38.8515236Z (Reading database ... 20%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:38.8515593Z (Reading database ... 25%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:38.8516488Z (Reading database ... 30%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:38.8516852Z (Reading database ... 35%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:38.8517198Z (Reading database ... 40%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:38.8517512Z (Reading database ... 45%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:38.8517857Z (Reading database ... 50%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:38.9674824Z (Reading database ... 55%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:39.1350868Z (Reading database ... 60%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:39.4568690Z (Reading database ... 65%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:39.6376674Z (Reading database ... 70%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:39.7504735Z (Reading database ... 75%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:40.2064151Z (Reading database ... 80%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:40.8838178Z (Reading database ... 85%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:41.6608069Z (Reading database ... 90%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:42.3502922Z (Reading database ... 95%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:42.3514714Z (Reading database ... 100%
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:42.3515271Z (Reading database ... 219881 files and directories currently installed.)
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:42.3556352Z Preparing to unpack .../google-chrome-stable_139.0.7258.127-1_amd64.deb ...
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:42.3686262Z Unpacking google-chrome-stable (139.0.7258.127-1) over (139.0.7258.66-1) ...
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:48.9031200Z Setting up google-chrome-stable (139.0.7258.127-1) ...
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:12:49.1012325Z Processing triggers for man-db (2.12.0-4build2) ...
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:13:35.1934617Z 
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:13:35.1935787Z Running kernel seems to be up-to-date.
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:13:35.1936634Z 
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:13:35.1936967Z Restarting services...
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:13:35.2022799Z 
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:13:35.2024179Z Service restarts being deferred:
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:13:35.2034608Z  systemctl restart hosted-compute-agent.service
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:13:35.2035710Z 
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:13:35.2035877Z No containers need to be restarted.
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:13:35.2036529Z 
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:13:35.2036719Z No user sessions are running outdated binaries.
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:13:35.2037043Z 
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:13:35.2037339Z No VM guests are running outdated hypervisor (qemu) binaries on this host.
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:13:36.1291592Z Chrome installed successfully
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:13:36.1698264Z Google Chrome 139.0.7258.127 
smoke-tests	Install Chrome and ChromeDriver (compatible versions)	2025-08-19T18:13:36.1933629Z ✅ Chrome installed - ChromeDriver will be auto-downloaded by Selenium
smoke-tests	Install Python dependencies	﻿2025-08-19T18:13:36.1964676Z ##[group]Run python -m pip install --upgrade pip
smoke-tests	Install Python dependencies	2025-08-19T18:13:36.1965103Z [36;1mpython -m pip install --upgrade pip[0m
smoke-tests	Install Python dependencies	2025-08-19T18:13:36.1965392Z [36;1mpip install -r requirements.txt[0m
smoke-tests	Install Python dependencies	2025-08-19T18:13:36.1965671Z [36;1mpip install radish-bdd selenium typer[0m
smoke-tests	Install Python dependencies	2025-08-19T18:13:36.2006464Z shell: /usr/bin/bash -e {0}
smoke-tests	Install Python dependencies	2025-08-19T18:13:36.2006702Z env:
smoke-tests	Install Python dependencies	2025-08-19T18:13:36.2006950Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install Python dependencies	2025-08-19T18:13:36.2007375Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
smoke-tests	Install Python dependencies	2025-08-19T18:13:36.2007799Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install Python dependencies	2025-08-19T18:13:36.2008177Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install Python dependencies	2025-08-19T18:13:36.2008532Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install Python dependencies	2025-08-19T18:13:36.2008891Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
smoke-tests	Install Python dependencies	2025-08-19T18:13:36.2009203Z ##[endgroup]
smoke-tests	Install Python dependencies	2025-08-19T18:13:39.4352310Z Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (25.2)
smoke-tests	Install Python dependencies	2025-08-19T18:13:40.5166968Z Collecting pywebview>=4.0 (from -r requirements.txt (line 2))
smoke-tests	Install Python dependencies	2025-08-19T18:13:40.5676559Z   Downloading pywebview-6.0-py3-none-any.whl.metadata (4.6 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:40.6179013Z Collecting PyYAML>=6.0 (from -r requirements.txt (line 3))
smoke-tests	Install Python dependencies	2025-08-19T18:13:40.6258390Z   Downloading PyYAML-6.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.1 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:40.6538296Z Collecting GitPython>=3.1.0 (from -r requirements.txt (line 4))
smoke-tests	Install Python dependencies	2025-08-19T18:13:40.6611230Z   Downloading gitpython-3.1.45-py3-none-any.whl.metadata (13 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:40.6887452Z Collecting Flask>=2.0.0 (from -r requirements.txt (line 5))
smoke-tests	Install Python dependencies	2025-08-19T18:13:40.6962957Z   Downloading flask-3.1.1-py3-none-any.whl.metadata (3.0 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:40.7120042Z Collecting proxy_tools (from pywebview>=4.0->-r requirements.txt (line 2))
smoke-tests	Install Python dependencies	2025-08-19T18:13:40.7202606Z   Downloading proxy_tools-0.1.0.tar.gz (3.0 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:40.7354545Z   Installing build dependencies: started
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.0268046Z   Installing build dependencies: finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.0273319Z   Getting requirements to build wheel: started
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.4197843Z   Getting requirements to build wheel: finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.4206958Z   Preparing metadata (pyproject.toml): started
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.5994824Z   Preparing metadata (pyproject.toml): finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.6279060Z Collecting bottle (from pywebview>=4.0->-r requirements.txt (line 2))
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.6361768Z   Downloading bottle-0.13.4-py2.py3-none-any.whl.metadata (1.6 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.6588748Z Collecting typing_extensions (from pywebview>=4.0->-r requirements.txt (line 2))
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.6660492Z   Downloading typing_extensions-4.14.1-py3-none-any.whl.metadata (3.0 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.6839859Z Collecting gitdb<5,>=4.0.1 (from GitPython>=3.1.0->-r requirements.txt (line 4))
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.6910998Z   Downloading gitdb-4.0.12-py3-none-any.whl.metadata (1.2 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.7091991Z Collecting smmap<6,>=3.0.1 (from gitdb<5,>=4.0.1->GitPython>=3.1.0->-r requirements.txt (line 4))
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.7166273Z   Downloading smmap-5.0.2-py3-none-any.whl.metadata (4.3 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.7334500Z Collecting blinker>=1.9.0 (from Flask>=2.0.0->-r requirements.txt (line 5))
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.7427474Z   Downloading blinker-1.9.0-py3-none-any.whl.metadata (1.6 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.7647599Z Collecting click>=8.1.3 (from Flask>=2.0.0->-r requirements.txt (line 5))
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.7718447Z   Downloading click-8.2.1-py3-none-any.whl.metadata (2.5 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.7878319Z Collecting itsdangerous>=2.2.0 (from Flask>=2.0.0->-r requirements.txt (line 5))
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.7957501Z   Downloading itsdangerous-2.2.0-py3-none-any.whl.metadata (1.9 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.8159031Z Collecting jinja2>=3.1.2 (from Flask>=2.0.0->-r requirements.txt (line 5))
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.8231591Z   Downloading jinja2-3.1.6-py3-none-any.whl.metadata (2.9 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.8773155Z Collecting markupsafe>=2.1.1 (from Flask>=2.0.0->-r requirements.txt (line 5))
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.8850928Z   Downloading MarkupSafe-3.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.0 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.9147932Z Collecting werkzeug>=3.1.0 (from Flask>=2.0.0->-r requirements.txt (line 5))
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.9217768Z   Downloading werkzeug-3.1.3-py3-none-any.whl.metadata (3.7 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.9395510Z Downloading pywebview-6.0-py3-none-any.whl (508 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.9680092Z Downloading PyYAML-6.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (762 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.9793527Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 763.0/763.0 kB 62.2 MB/s  0:00:00
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.9867454Z Downloading gitpython-3.1.45-py3-none-any.whl (208 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:42.9968046Z Downloading gitdb-4.0.12-py3-none-any.whl (62 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:43.0066558Z Downloading smmap-5.0.2-py3-none-any.whl (24 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:43.0166536Z Downloading flask-3.1.1-py3-none-any.whl (103 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:43.0261263Z Downloading blinker-1.9.0-py3-none-any.whl (8.5 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:43.0355317Z Downloading click-8.2.1-py3-none-any.whl (102 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:43.0457023Z Downloading itsdangerous-2.2.0-py3-none-any.whl (16 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:43.0558259Z Downloading jinja2-3.1.6-py3-none-any.whl (134 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:43.0659101Z Downloading MarkupSafe-3.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (23 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:43.0761555Z Downloading werkzeug-3.1.3-py3-none-any.whl (224 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:43.0860333Z Downloading bottle-0.13.4-py2.py3-none-any.whl (103 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:43.0960494Z Downloading typing_extensions-4.14.1-py3-none-any.whl (43 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:43.1117264Z Building wheels for collected packages: proxy_tools
smoke-tests	Install Python dependencies	2025-08-19T18:13:43.1125863Z   Building wheel for proxy_tools (pyproject.toml): started
smoke-tests	Install Python dependencies	2025-08-19T18:13:43.3107445Z   Building wheel for proxy_tools (pyproject.toml): finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:13:43.3113666Z   Created wheel for proxy_tools: filename=proxy_tools-0.1.0-py3-none-any.whl size=2936 sha256=2c905e9b24d3ce71bc7e429881b8353b15eacb8a70bd37cb2f5c7625713a6ee2
smoke-tests	Install Python dependencies	2025-08-19T18:13:43.3115941Z   Stored in directory: /home/runner/.cache/pip/wheels/2b/5f/96/7e96e7cbf06e426e168a6891a6ca2226787cc79fc816830dd4
smoke-tests	Install Python dependencies	2025-08-19T18:13:43.3130353Z Successfully built proxy_tools
smoke-tests	Install Python dependencies	2025-08-19T18:13:43.3339157Z Installing collected packages: proxy_tools, bottle, typing_extensions, smmap, PyYAML, markupsafe, itsdangerous, click, blinker, werkzeug, pywebview, jinja2, gitdb, GitPython, Flask
smoke-tests	Install Python dependencies	2025-08-19T18:13:44.0427245Z 
smoke-tests	Install Python dependencies	2025-08-19T18:13:44.0442971Z Successfully installed Flask-3.1.1 GitPython-3.1.45 PyYAML-6.0.2 blinker-1.9.0 bottle-0.13.4 click-8.2.1 gitdb-4.0.12 itsdangerous-2.2.0 jinja2-3.1.6 markupsafe-3.0.2 proxy_tools-0.1.0 pywebview-6.0 smmap-5.0.2 typing_extensions-4.14.1 werkzeug-3.1.3
smoke-tests	Install Python dependencies	2025-08-19T18:13:44.9905735Z Collecting radish-bdd
smoke-tests	Install Python dependencies	2025-08-19T18:13:45.0470262Z   Downloading radish_bdd-0.18.2-py2.py3-none-any.whl.metadata (5.4 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:45.0889378Z Collecting selenium
smoke-tests	Install Python dependencies	2025-08-19T18:13:45.0964457Z   Downloading selenium-4.35.0-py3-none-any.whl.metadata (7.4 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:45.1205088Z Collecting typer
smoke-tests	Install Python dependencies	2025-08-19T18:13:45.1279122Z   Downloading typer-0.16.1-py3-none-any.whl.metadata (15 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:45.1480027Z Collecting docopt (from radish-bdd)
smoke-tests	Install Python dependencies	2025-08-19T18:13:45.1558442Z   Downloading docopt-0.6.2.tar.gz (25 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:45.1684066Z   Installing build dependencies: started
smoke-tests	Install Python dependencies	2025-08-19T18:13:45.9012616Z   Installing build dependencies: finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:13:45.9018931Z   Getting requirements to build wheel: started
smoke-tests	Install Python dependencies	2025-08-19T18:13:46.2103123Z   Getting requirements to build wheel: finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:13:46.2111956Z   Preparing metadata (pyproject.toml): started
smoke-tests	Install Python dependencies	2025-08-19T18:13:46.3742766Z   Preparing metadata (pyproject.toml): finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:13:46.3876453Z Collecting pysingleton (from radish-bdd)
smoke-tests	Install Python dependencies	2025-08-19T18:13:46.4002396Z   Downloading pysingleton-0.2.1.tar.gz (1.3 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:46.4062541Z   Installing build dependencies: started
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.0915623Z   Installing build dependencies: finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.0920410Z   Getting requirements to build wheel: started
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.3906819Z   Getting requirements to build wheel: finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.3916874Z   Preparing metadata (pyproject.toml): started
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.5531716Z   Preparing metadata (pyproject.toml): finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.5716180Z Collecting colorful>=0.3.11 (from radish-bdd)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.5788885Z   Downloading colorful-0.5.7-py2.py3-none-any.whl.metadata (16 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.6057584Z Collecting tag-expressions>=2.0.0 (from radish-bdd)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.6141720Z   Downloading tag_expressions-2.0.1-py3-none-any.whl.metadata (3.8 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.6307323Z Collecting parse_type>0.4.0 (from radish-bdd)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.6378328Z   Downloading parse_type-0.6.6-py2.py3-none-any.whl.metadata (12 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.6631736Z Collecting humanize (from radish-bdd)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.6706136Z   Downloading humanize-4.12.3-py3-none-any.whl.metadata (7.8 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.7092241Z Collecting urllib3<3.0,>=2.5.0 (from urllib3[socks]<3.0,>=2.5.0->selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.7164893Z   Downloading urllib3-2.5.0-py3-none-any.whl.metadata (6.5 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.7374681Z Collecting trio~=0.30.0 (from selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.7446734Z   Downloading trio-0.30.0-py3-none-any.whl.metadata (8.5 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.7612063Z Collecting trio-websocket~=0.12.2 (from selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.7686925Z   Downloading trio_websocket-0.12.2-py3-none-any.whl.metadata (5.1 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.7911105Z Collecting certifi>=2025.6.15 (from selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.7982141Z   Downloading certifi-2025.8.3-py3-none-any.whl.metadata (2.4 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.8019473Z Requirement already satisfied: typing_extensions~=4.14.0 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from selenium) (4.14.1)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.8233730Z Collecting websocket-client~=1.8.0 (from selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.8321613Z   Downloading websocket_client-1.8.0-py3-none-any.whl.metadata (8.0 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.8520476Z Collecting attrs>=23.2.0 (from trio~=0.30.0->selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.8591457Z   Downloading attrs-25.3.0-py3-none-any.whl.metadata (10 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.8834299Z Collecting sortedcontainers (from trio~=0.30.0->selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.8907566Z   Downloading sortedcontainers-2.4.0-py2.py3-none-any.whl.metadata (10 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.9090007Z Collecting idna (from trio~=0.30.0->selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.9160263Z   Downloading idna-3.10-py3-none-any.whl.metadata (10 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.9322785Z Collecting outcome (from trio~=0.30.0->selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.9392394Z   Downloading outcome-1.3.0.post0-py2.py3-none-any.whl.metadata (2.6 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.9551412Z Collecting sniffio>=1.3.0 (from trio~=0.30.0->selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.9642924Z   Downloading sniffio-1.3.1-py3-none-any.whl.metadata (3.9 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.9853131Z Collecting wsproto>=0.14 (from trio-websocket~=0.12.2->selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:13:47.9925635Z   Downloading wsproto-1.2.0-py3-none-any.whl.metadata (5.6 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.0113464Z Collecting pysocks!=1.5.7,<2.0,>=1.5.6 (from urllib3[socks]<3.0,>=2.5.0->selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.0185227Z   Downloading PySocks-1.7.1-py3-none-any.whl.metadata (13 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.0257391Z Requirement already satisfied: click>=8.0.0 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from typer) (8.2.1)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.0397433Z Collecting shellingham>=1.3.0 (from typer)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.0469925Z   Downloading shellingham-1.5.4-py2.py3-none-any.whl.metadata (3.5 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.0927689Z Collecting rich>=10.11.0 (from typer)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.1051138Z   Downloading rich-14.1.0-py3-none-any.whl.metadata (18 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.1334053Z Collecting parse>=1.18.0 (from parse_type>0.4.0->radish-bdd)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.1409063Z   Downloading parse-1.20.2-py2.py3-none-any.whl.metadata (22 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.1599234Z Collecting six>=1.15 (from parse_type>0.4.0->radish-bdd)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.1678747Z   Downloading six-1.17.0-py2.py3-none-any.whl.metadata (1.7 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.1906441Z Collecting markdown-it-py>=2.2.0 (from rich>=10.11.0->typer)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.1980701Z   Downloading markdown_it_py-4.0.0-py3-none-any.whl.metadata (7.3 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.2269556Z Collecting pygments<3.0.0,>=2.13.0 (from rich>=10.11.0->typer)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.2343399Z   Downloading pygments-2.19.2-py3-none-any.whl.metadata (2.5 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.2510640Z Collecting mdurl~=0.1 (from markdown-it-py>=2.2.0->rich>=10.11.0->typer)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.2582958Z   Downloading mdurl-0.1.2-py3-none-any.whl.metadata (1.6 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.2819153Z Collecting h11<1,>=0.9.0 (from wsproto>=0.14->trio-websocket~=0.12.2->selenium)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.2890896Z   Downloading h11-0.16.0-py3-none-any.whl.metadata (8.3 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.3053669Z Downloading radish_bdd-0.18.2-py2.py3-none-any.whl (161 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.3234644Z Downloading selenium-4.35.0-py3-none-any.whl (9.6 MB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.3799192Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 9.6/9.6 MB 190.4 MB/s  0:00:00
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.3881489Z Downloading trio-0.30.0-py3-none-any.whl (499 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.4016951Z Downloading trio_websocket-0.12.2-py3-none-any.whl (21 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.4125625Z Downloading urllib3-2.5.0-py3-none-any.whl (129 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.4231074Z Downloading PySocks-1.7.1-py3-none-any.whl (16 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.4376922Z Downloading websocket_client-1.8.0-py3-none-any.whl (58 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.4475077Z Downloading typer-0.16.1-py3-none-any.whl (46 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.4571066Z Downloading attrs-25.3.0-py3-none-any.whl (63 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.4671579Z Downloading certifi-2025.8.3-py3-none-any.whl (161 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.4789408Z Downloading colorful-0.5.7-py2.py3-none-any.whl (201 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.4923725Z Downloading outcome-1.3.0.post0-py2.py3-none-any.whl (10 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.5022912Z Downloading parse_type-0.6.6-py2.py3-none-any.whl (27 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.5119061Z Downloading parse-1.20.2-py2.py3-none-any.whl (20 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.5215725Z Downloading rich-14.1.0-py3-none-any.whl (243 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.5323591Z Downloading pygments-2.19.2-py3-none-any.whl (1.2 MB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.5425832Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.2/1.2 MB 132.0 MB/s  0:00:00
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.5499516Z Downloading markdown_it_py-4.0.0-py3-none-any.whl (87 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.5596866Z Downloading mdurl-0.1.2-py3-none-any.whl (10.0 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.5697992Z Downloading shellingham-1.5.4-py2.py3-none-any.whl (9.8 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.5797326Z Downloading six-1.17.0-py2.py3-none-any.whl (11 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.5891688Z Downloading sniffio-1.3.1-py3-none-any.whl (10 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.5990960Z Downloading tag_expressions-2.0.1-py3-none-any.whl (5.5 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.6088574Z Downloading wsproto-1.2.0-py3-none-any.whl (24 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.6203156Z Downloading h11-0.16.0-py3-none-any.whl (37 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.6311774Z Downloading humanize-4.12.3-py3-none-any.whl (128 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.6411754Z Downloading idna-3.10-py3-none-any.whl (70 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.6517857Z Downloading sortedcontainers-2.4.0-py2.py3-none-any.whl (29 kB)
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.6876850Z Building wheels for collected packages: docopt, pysingleton
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.6885532Z   Building wheel for docopt (pyproject.toml): started
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.8858725Z   Building wheel for docopt (pyproject.toml): finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.8864977Z   Created wheel for docopt: filename=docopt-0.6.2-py2.py3-none-any.whl size=13783 sha256=c8323a28ad3c45c7b85d3f0f23f966456c7699c0a522893bc1e0de41ee833df3
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.8867187Z   Stored in directory: /home/runner/.cache/pip/wheels/1a/b0/8c/4b75c4116c31f83c8f9f047231251e13cc74481cca4a78a9ce
smoke-tests	Install Python dependencies	2025-08-19T18:13:48.8894717Z   Building wheel for pysingleton (pyproject.toml): started
smoke-tests	Install Python dependencies	2025-08-19T18:13:49.0864353Z   Building wheel for pysingleton (pyproject.toml): finished with status 'done'
smoke-tests	Install Python dependencies	2025-08-19T18:13:49.0871223Z   Created wheel for pysingleton: filename=pysingleton-0.2.1-py3-none-any.whl size=2205 sha256=432b2eddf9811cd2c15f2f64bca5359ed67a071141fcca05f645c3c4b6ba5c5c
smoke-tests	Install Python dependencies	2025-08-19T18:13:49.0873386Z   Stored in directory: /home/runner/.cache/pip/wheels/95/a2/a3/b005361713f41da5c86c71392c81612294183d5e0cd0c54c69
smoke-tests	Install Python dependencies	2025-08-19T18:13:49.0888152Z Successfully built docopt pysingleton
smoke-tests	Install Python dependencies	2025-08-19T18:13:49.1406765Z Installing collected packages: tag-expressions, sortedcontainers, pysingleton, parse, docopt, colorful, websocket-client, urllib3, sniffio, six, shellingham, pysocks, pygments, mdurl, idna, humanize, h11, certifi, attrs, wsproto, parse_type, outcome, markdown-it-py, trio, rich, radish-bdd, typer, trio-websocket, selenium
smoke-tests	Install Python dependencies	2025-08-19T18:13:51.6526995Z 
smoke-tests	Install Python dependencies	2025-08-19T18:13:51.6555695Z Successfully installed attrs-25.3.0 certifi-2025.8.3 colorful-0.5.7 docopt-0.6.2 h11-0.16.0 humanize-4.12.3 idna-3.10 markdown-it-py-4.0.0 mdurl-0.1.2 outcome-1.3.0.post0 parse-1.20.2 parse_type-0.6.6 pygments-2.19.2 pysingleton-0.2.1 pysocks-1.7.1 radish-bdd-0.18.2 rich-14.1.0 selenium-4.35.0 shellingham-1.5.4 six-1.17.0 sniffio-1.3.1 sortedcontainers-2.4.0 tag-expressions-2.0.1 trio-0.30.0 trio-websocket-0.12.2 typer-0.16.1 urllib3-2.5.0 websocket-client-1.8.0 wsproto-1.2.0
smoke-tests	Install iflow package	﻿2025-08-19T18:13:51.7589577Z ##[group]Run pip install -e .
smoke-tests	Install iflow package	2025-08-19T18:13:51.7590089Z [36;1mpip install -e .[0m
smoke-tests	Install iflow package	2025-08-19T18:13:51.7649381Z shell: /usr/bin/bash -e {0}
smoke-tests	Install iflow package	2025-08-19T18:13:51.7649790Z env:
smoke-tests	Install iflow package	2025-08-19T18:13:51.7650212Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install iflow package	2025-08-19T18:13:51.7650956Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
smoke-tests	Install iflow package	2025-08-19T18:13:51.7651670Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install iflow package	2025-08-19T18:13:51.7652325Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install iflow package	2025-08-19T18:13:51.7652954Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Install iflow package	2025-08-19T18:13:51.7653600Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
smoke-tests	Install iflow package	2025-08-19T18:13:51.7654681Z ##[endgroup]
smoke-tests	Install iflow package	2025-08-19T18:13:52.1345819Z Obtaining file:///home/runner/work/iflow/iflow
smoke-tests	Install iflow package	2025-08-19T18:13:52.1367004Z   Installing build dependencies: started
smoke-tests	Install iflow package	2025-08-19T18:13:52.8742399Z   Installing build dependencies: finished with status 'done'
smoke-tests	Install iflow package	2025-08-19T18:13:52.8748415Z   Checking if build backend supports build_editable: started
smoke-tests	Install iflow package	2025-08-19T18:13:53.1294690Z   Checking if build backend supports build_editable: finished with status 'done'
smoke-tests	Install iflow package	2025-08-19T18:13:53.1302387Z   Getting requirements to build editable: started
smoke-tests	Install iflow package	2025-08-19T18:13:53.3073535Z   Getting requirements to build editable: finished with status 'done'
smoke-tests	Install iflow package	2025-08-19T18:13:53.3082825Z   Preparing editable metadata (pyproject.toml): started
smoke-tests	Install iflow package	2025-08-19T18:13:53.4726319Z   Preparing editable metadata (pyproject.toml): finished with status 'done'
smoke-tests	Install iflow package	2025-08-19T18:13:53.4764463Z Requirement already satisfied: flask in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from iflow==0.4.0a2) (3.1.1)
smoke-tests	Install iflow package	2025-08-19T18:13:53.4769104Z Requirement already satisfied: gitpython in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from iflow==0.4.0a2) (3.1.45)
smoke-tests	Install iflow package	2025-08-19T18:13:53.4773695Z Requirement already satisfied: pyyaml in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from iflow==0.4.0a2) (6.0.2)
smoke-tests	Install iflow package	2025-08-19T18:13:53.4778423Z Requirement already satisfied: typer in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from iflow==0.4.0a2) (0.16.1)
smoke-tests	Install iflow package	2025-08-19T18:13:53.4790051Z Requirement already satisfied: blinker>=1.9.0 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from flask->iflow==0.4.0a2) (1.9.0)
smoke-tests	Install iflow package	2025-08-19T18:13:53.4796048Z Requirement already satisfied: click>=8.1.3 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from flask->iflow==0.4.0a2) (8.2.1)
smoke-tests	Install iflow package	2025-08-19T18:13:53.4804208Z Requirement already satisfied: itsdangerous>=2.2.0 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from flask->iflow==0.4.0a2) (2.2.0)
smoke-tests	Install iflow package	2025-08-19T18:13:53.4810051Z Requirement already satisfied: jinja2>=3.1.2 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from flask->iflow==0.4.0a2) (3.1.6)
smoke-tests	Install iflow package	2025-08-19T18:13:53.4816063Z Requirement already satisfied: markupsafe>=2.1.1 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from flask->iflow==0.4.0a2) (3.0.2)
smoke-tests	Install iflow package	2025-08-19T18:13:53.4820984Z Requirement already satisfied: werkzeug>=3.1.0 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from flask->iflow==0.4.0a2) (3.1.3)
smoke-tests	Install iflow package	2025-08-19T18:13:53.4870695Z Requirement already satisfied: gitdb<5,>=4.0.1 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from gitpython->iflow==0.4.0a2) (4.0.12)
smoke-tests	Install iflow package	2025-08-19T18:13:53.4894329Z Requirement already satisfied: smmap<6,>=3.0.1 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from gitdb<5,>=4.0.1->gitpython->iflow==0.4.0a2) (5.0.2)
smoke-tests	Install iflow package	2025-08-19T18:13:53.4919669Z Requirement already satisfied: typing-extensions>=3.7.4.3 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from typer->iflow==0.4.0a2) (4.14.1)
smoke-tests	Install iflow package	2025-08-19T18:13:53.4925608Z Requirement already satisfied: shellingham>=1.3.0 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from typer->iflow==0.4.0a2) (1.5.4)
smoke-tests	Install iflow package	2025-08-19T18:13:53.4930735Z Requirement already satisfied: rich>=10.11.0 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from typer->iflow==0.4.0a2) (14.1.0)
smoke-tests	Install iflow package	2025-08-19T18:13:53.4947584Z Requirement already satisfied: markdown-it-py>=2.2.0 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from rich>=10.11.0->typer->iflow==0.4.0a2) (4.0.0)
smoke-tests	Install iflow package	2025-08-19T18:13:53.4953640Z Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from rich>=10.11.0->typer->iflow==0.4.0a2) (2.19.2)
smoke-tests	Install iflow package	2025-08-19T18:13:53.4974127Z Requirement already satisfied: mdurl~=0.1 in /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages (from markdown-it-py>=2.2.0->rich>=10.11.0->typer->iflow==0.4.0a2) (0.1.2)
smoke-tests	Install iflow package	2025-08-19T18:13:53.5020816Z Building wheels for collected packages: iflow
smoke-tests	Install iflow package	2025-08-19T18:13:53.5028370Z   Building editable for iflow (pyproject.toml): started
smoke-tests	Install iflow package	2025-08-19T18:13:53.6968514Z   Building editable for iflow (pyproject.toml): finished with status 'done'
smoke-tests	Install iflow package	2025-08-19T18:13:53.6974497Z   Created wheel for iflow: filename=iflow-0.4.0a2-0.editable-py3-none-any.whl size=1523 sha256=178a4e8d5d00c0fcdcddd65c5222fec58431dc26a6ded787ba063a9ee2789f31
smoke-tests	Install iflow package	2025-08-19T18:13:53.6976557Z   Stored in directory: /tmp/pip-ephem-wheel-cache-_kkdrs8r/wheels/32/41/fe/4b6c4d03ba1db3388a5127d7f84477b4073948da3c26ad78fc
smoke-tests	Install iflow package	2025-08-19T18:13:53.6996558Z Successfully built iflow
smoke-tests	Install iflow package	2025-08-19T18:13:53.7319005Z Installing collected packages: iflow
smoke-tests	Install iflow package	2025-08-19T18:13:53.7404187Z Successfully installed iflow-0.4.0a2
smoke-tests	Start iflow server with init-db	﻿2025-08-19T18:13:53.8034867Z ##[group]Run # Start the server in the background with --init-db to create initial repository
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8036278Z [36;1m# Start the server in the background with --init-db to create initial repository[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8037268Z [36;1mpython -m iflow.web_server \[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8037716Z [36;1m  --port 8080 \[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8038078Z [36;1m  --init-db \[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8038433Z [36;1m  --host 0.0.0.0 \[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8038841Z [36;1m  --title "iflow - Test Server" &[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8039272Z [36;1m[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8039604Z [36;1m# Store the server PID for cleanup[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8040063Z [36;1mecho $! > /tmp/iflow_server.pid[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8040464Z [36;1m[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8040799Z [36;1m# Wait for server to start with retry logic[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8041334Z [36;1mecho "Waiting for server to start..."[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8041797Z [36;1mfor i in {1..30}; do[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8042405Z [36;1m  if curl -f http://localhost:8080/api/project-info > /dev/null 2>&1; then[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8043187Z [36;1m    echo "✅ Server is responding after $i seconds"[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8043711Z [36;1m    break[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8044382Z [36;1m  fi[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8044717Z [36;1m  if [ $i -eq 30 ]; then[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8045215Z [36;1m    echo "❌ Server failed to start within 30 seconds"[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8045708Z [36;1m    exit 1[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8046105Z [36;1m  fi[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8046415Z [36;1m  sleep 1[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8046747Z [36;1mdone[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8047037Z [36;1m[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8047376Z [36;1m# Verify initial ticket was created[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8047901Z [36;1mecho "Verifying initial database setup..."[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8048605Z [36;1mif curl -f http://localhost:8080/api/artifacts > /dev/null 2>&1; then[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8049348Z [36;1m  echo "✅ Initial database and artifacts are accessible"[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8049890Z [36;1melse[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8050262Z [36;1m  echo "❌ Failed to access artifacts API"[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8050719Z [36;1m  exit 1[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8051033Z [36;1mfi[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8051304Z [36;1m[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8051762Z [36;1mecho "✅ iflow server started successfully with initial database"[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8107374Z shell: /usr/bin/bash -e {0}
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8107617Z env:
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8107867Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8108370Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8108788Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8109344Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8110001Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8110644Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8111184Z ##[endgroup]
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:53.8184607Z Waiting for server to start...
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2138410Z DEBUG: __file__ = /home/runner/work/iflow/iflow/sw/iflow/web_server.py
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2140926Z DEBUG: static_folder = /home/runner/work/iflow/iflow/sw/iflow/static
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2141531Z DEBUG: static_folder exists = True
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2142022Z Default database path not found: ../../.iflow-demo
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2142527Z Starting iflow web server...
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2142910Z Database: .iflow-demo
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2143230Z Host: 0.0.0.0
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2143536Z Port: 8080
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2144310Z Title: iflow - Test Server
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2144716Z Initialize DB: True
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2145109Z Initializing database with initial artifact...
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2145945Z ✅ Created initial artifact: 00001 - Initial ticket
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2146446Z Starting iflow web server...
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2146828Z Database: .iflow-demo
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2147215Z URL: http://0.0.0.0:8080
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2147887Z Press Ctrl+C to stop
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2148247Z  * Serving Flask app 'web_server'
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2148641Z  * Debug mode: off
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2161465Z [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2162728Z  * Running on all addresses (0.0.0.0)
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2163367Z  * Running on http://127.0.0.1:8080
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2164490Z  * Running on http://10.1.0.8:8080
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.2165514Z [33mPress CTRL+C to quit[0m
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.8362838Z 127.0.0.1 - - [19/Aug/2025 18:13:54] "GET /api/project-info HTTP/1.1" 200 -
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.8374600Z ✅ Server is responding after 2 seconds
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.8375284Z Verifying initial database setup...
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.8442046Z 127.0.0.1 - - [19/Aug/2025 18:13:54] "GET /api/artifacts HTTP/1.1" 200 -
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.8456109Z ✅ Initial database and artifacts are accessible
smoke-tests	Start iflow server with init-db	2025-08-19T18:13:54.8456875Z ✅ iflow server started successfully with initial database
smoke-tests	Run smoke tests	﻿2025-08-19T18:13:59.8500724Z ##[group]Run # Set environment variables for tests
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8501132Z [36;1m# Set environment variables for tests[0m
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8501503Z [36;1mexport IFLOW_BASE_URL="http://localhost:8080"[0m
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8501824Z [36;1mexport PYTHONPATH="tests:$PYTHONPATH"[0m
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8502100Z [36;1mexport DISPLAY=":99"[0m
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8502306Z [36;1m[0m
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8502479Z [36;1m# Run smoke tests[0m
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8502701Z [36;1mecho "Running smoke tests..."[0m
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8502985Z [36;1mradish -b tests tests/features/ --tags smoke[0m
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8503257Z [36;1m[0m
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8503467Z [36;1mecho "✅ Smoke tests completed successfully"[0m
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8544213Z shell: /usr/bin/bash -e {0}
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8544457Z env:
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8544704Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8545125Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8545605Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8545965Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8546305Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8546663Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8546956Z ##[endgroup]
smoke-tests	Run smoke tests	2025-08-19T18:13:59.8609737Z Running smoke tests...
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7299964Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7301360Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7311029Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7314485Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7315445Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7316427Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7317525Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7318539Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7319370Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7320206Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7321155Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7322767Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7324587Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7326394Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7331787Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7333490Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7335862Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7340449Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7341561Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7346677Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7347612Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7352882Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7356256Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7361426Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7362599Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7363684Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7365290Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7366737Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7368214Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7369978Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7371534Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7372774Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7374105Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7375117Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7376036Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7377023Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7378207Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7379231Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7379936Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7380907Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7382333Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7383571Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7385122Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7386571Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7388653Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7390365Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7392067Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7403672Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7410078Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7414996Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7421104Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7424386Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7432808Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7436845Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7441600Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7446599Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7452584Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7454594Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7455605Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7456419Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7457247Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7458254Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7459255Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7460374Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7461650Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7462715Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7463716Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7498479Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7501250Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7503747Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7512376Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7513332Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7514543Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7515699Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7516953Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7518112Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7519205Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7520799Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7522225Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7523684Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7541477Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7545318Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7548641Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7552262Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7554430Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7557247Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7559759Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7561480Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7562483Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7563184Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7564307Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7565714Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7566963Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7568251Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7569701Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7570949Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7572148Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7573330Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7591684Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7594206Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7596938Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7599310Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7601301Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7603417Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7605543Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7608189Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7610659Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7612673Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7614016Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7615105Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7616071Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7616877Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7617692Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7618639Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7619747Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7620932Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7622520Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7623578Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7639855Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7642814Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7646776Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7649409Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7651488Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7653651Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7656334Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7659190Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7661060Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7662234Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7663492Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7665036Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7666448Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7667919Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7669674Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7671282Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7672501Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7673640Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7692453Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7694650Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7695700Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7697127Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7698132Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7698835Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7699808Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7701201Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7702428Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7703730Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7705615Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7706873Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7708091Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7709263Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7710391Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7711396Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7712409Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7713287Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7743554Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7746092Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7749108Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7752601Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7755908Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7759019Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7761836Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7765085Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7768460Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7772733Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7776721Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7779783Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7780737Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7781815Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7782872Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7789593Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7793104Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7795552Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7796509Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7798060Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7799640Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7800875Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7802771Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7804697Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7806023Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7807209Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7808414Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7809509Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7810807Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7811987Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7813047Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7837331Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7841284Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7845472Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7848641Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7851144Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7853757Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7856478Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7858879Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7862600Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7866403Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7869477Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7870746Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7872046Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7873172Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7881734Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7885480Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7888404Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7889625Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7890699Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7892029Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7893029Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7894138Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7895140Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7896139Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7897290Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7898444Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7899507Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7900589Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7901621Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7902669Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7903802Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7926042Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7929184Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7931323Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7933076Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7935274Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7937786Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7940408Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7943086Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7945701Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7948459Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7950595Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7951590Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7952402Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7953257Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7954625Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7955651Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7956784Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7958069Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7959143Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7960139Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7961342Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7962824Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7980755Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7983103Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7985396Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7988390Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7991517Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7994357Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.7997589Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8000222Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8004022Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8005933Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8007406Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8009185Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8010741Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8011975Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8013152Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8025843Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8028166Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8030859Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8033744Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8036729Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8038861Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8041277Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8042738Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8044534Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8045852Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8047320Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8048584Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8049798Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8050989Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8052357Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8053387Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8070325Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8073205Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8074832Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8075741Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8076911Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8078195Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8079441Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8080598Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8081628Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8082846Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8084307Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8085692Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8087050Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8088062Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8088987Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8090047Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8091098Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8092022Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8093222Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8114523Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8115498Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8117047Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8118871Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8120079Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8121613Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8123340Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8124793Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8126235Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8127424Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8128505Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8129789Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8130960Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8131959Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8133181Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8146235Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8147767Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8148907Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8158780Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8159789Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8160709Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8161684Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8163056Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8164774Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8166039Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8167249Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8168266Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8169376Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8170851Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8172096Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8173294Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8190528Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8191605Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8192702Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8193662Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8194750Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8195745Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8196723Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8198089Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8199253Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8200307Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8201368Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8202382Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8203423Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8204684Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8205820Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8206914Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8207835Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8208573Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8209334Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8210158Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8211093Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8212085Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8212986Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8215111Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8216241Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8217249Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8218055Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8218874Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8219814Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8220795Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8221917Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8223182Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8240706Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8241899Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8250362Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8251628Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8252680Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8253539Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8259219Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8260277Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8261675Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8262941Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8264277Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8265354Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8266698Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8268091Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8269587Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8271328Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8272869Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8289724Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8290898Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8291877Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8292781Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8293751Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8295076Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8296089Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8296790Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8297754Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8299119Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8300349Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8301629Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8303055Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8304470Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8305906Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8307071Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8308165Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8309231Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8310238Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8311109Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8311869Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8312929Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8338647Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8339713Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8340666Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8341595Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8342672Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8343631Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8344595Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8345405Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8346362Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8347389Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8348502Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8349767Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8350826Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8351842Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8353035Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8367154Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8368262Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8369104Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8370050Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8371085Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8372224Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8373473Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8374784Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8375883Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8377245Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8378875Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8380322Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8382072Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8383599Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8387809Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8389290Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8390280Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8391183Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8392162Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8393318Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8394481Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8395189Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8396155Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8397520Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8398774Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8400058Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8401523Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8402779Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8421275Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8422512Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8423647Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8424830Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8425762Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8426573Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8427489Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8428831Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8429699Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8430636Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8431701Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8432686Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8433705Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8434706Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8435656Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8436647Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8437765Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8439036Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8440110Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8441162Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8442587Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8466922Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8468045Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8468891Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8469786Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8470785Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8471925Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8473157Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8474499Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8475574Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8476906Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8478315Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8479761Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8481506Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8483040Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8501975Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8503149Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8504290Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8505185Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8506164Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8507319Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8508317Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8509030Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8510253Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8511657Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8512894Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8514299Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8515760Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8516991Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8518405Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8519592Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8520680Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8521671Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8522686Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8523569Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8536659Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8537572Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8538746Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8540077Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8541361Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8542493Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8543534Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8544921Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8546231Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8547629Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8549006Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8550028Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8550934Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8551986Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8553025Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8554094Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8565830Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8567027Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8568211Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8569727Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8571287Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8572476Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8574135Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8575867Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8577377Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8578547Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8579722Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8580791Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8582087Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8583249Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8604024Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8605274Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8606771Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8608345Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8609547Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8610513Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8611469Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8612351Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8613316Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8614841Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8616368Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8617602Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8618781Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8619796Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8620957Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8622387Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8644617Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8645886Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8647074Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8648122Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8649208Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8650156Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8651080Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8652303Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8653286Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8654553Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8655692Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8656746Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8657803Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8658818Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8659859Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8660988Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8662128Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8663198Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8683749Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8684665Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8685430Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8686267Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8687187Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8688191Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8689138Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8690053Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8691117Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8692078Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8692887Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8693699Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8694788Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8695785Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8696883Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8698408Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8699485Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8700492Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8701688Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8702913Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8705197Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8706070Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8707159Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8708205Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8709344Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8710594Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8711767Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8712845Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8734128Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8735584Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8737126Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8738891Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8740489Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8741719Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8742874Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8754297Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8755262Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8756256Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8757411Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8758404Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8759100Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8760055Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8761425Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8762646Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8764076Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8765855Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8767097Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8768269Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8769446Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8770596Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8771583Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8772598Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8773733Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8794661Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8795548Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8796715Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8798011Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8799237Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8800429Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8801476Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8802707Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8804205Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8805597Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8806971Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8807999Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8808908Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8810239Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8811506Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8812912Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8834990Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8836394Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8837559Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8839310Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8841118Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8842541Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8844776Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8919097Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8920454Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8921645Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8922858Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8924189Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8926708Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8946281Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8947309Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8948553Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8950045Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8951634Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8952838Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8962581Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8963612Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8964733Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8965712Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8967081Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8968621Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8969869Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8971069Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8972098Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8973216Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8974812Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8976059Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8977236Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8978410Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8979466Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8980809Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8981763Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8982690Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.8983686Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9006340Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9007487Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9008652Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9009717Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9011035Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9012075Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9013113Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9014406Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9015525Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9016594Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9017506Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9018245Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9019024Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9019860Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9020791Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9021776Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9022674Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9023602Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9043475Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9044616Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9045443Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9046298Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9047265Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9048280Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9049397Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9050670Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9051745Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9052754Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9054109Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9055358Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9056659Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9057497Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9058381Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9059402Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9060540Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9061773Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9062935Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9091123Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9092513Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9094088Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9095475Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9097083Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9098531Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9099682Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9100732Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9101677Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9102505Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9103401Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9104611Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9105573Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9106212Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9107100Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9108385Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9109558Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9110761Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9112119Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9113274Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9114537Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9115640Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9116919Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9117875Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9118847Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9119687Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9120457Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9121282Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9122430Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9123734Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9125397Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9126538Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9127588Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9128805Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9130095Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9131488Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9132851Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9134048Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9134933Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9135922Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9136904Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9137802Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9138972Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9140075Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9141059Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9142529Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9144148Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9145295Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9146784Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9148449Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9149693Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9150832Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9152187Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9153264Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9154724Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9155895Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9156896Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9158107Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9159810Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9161397Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9162598Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9163566Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9164667Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9165494Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9166419Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9167721Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9169199Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9170389Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9171498Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9172506Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9173611Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9175213Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9176466Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9177671Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9178862Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9179929Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9181009Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9181962Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9182893Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9184055Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9185064Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9186419Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9187570Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9188630Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9189701Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9190748Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9191796Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9192927Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9194514Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9195537Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9196412Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9197078Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9197837Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9198591Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9199488Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9200410Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9201290Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9202170Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9203242Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9204385Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9205185Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9206019Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9206974Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9207985Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9209111Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9210385Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9211468Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9212489Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9213691Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9215092Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9216144Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9216988Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9217873Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9218902Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9220059Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9221556Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9222752Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9224015Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9225300Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9226747Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9228153Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9230057Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9231546Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9232702Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9233771Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9235012Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9235867Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9236784Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9237907Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9238850Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9239540Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9240489Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9241830Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9243014Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9244396Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9245800Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9247018Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9248159Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9249257Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9250325Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9251261Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9252230Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9253064Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9253811Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9254803Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9256208Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9257502Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9258746Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9259893Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9260938Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9262167Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9263698Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9265208Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9266504Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9267504Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9268357Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9269398Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9270399Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9271301Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9272475Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9273658Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9274765Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9276309Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9277836Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9279046Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9280610Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9282382Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9283688Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9285045Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9286244Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9287341Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9288638Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9289825Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9291145Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9292367Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9293999Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9295511Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9296645Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9297580Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9298680Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9299531Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9300430Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9301732Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9303194Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9304576Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9305719Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9306672Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9307743Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9309106Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9310259Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9311396Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9312534Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9313516Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9314703Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9315611Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9316505Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9317447Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9318356Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9319447Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9320526Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9321584Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9322752Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9323793Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9325250Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9326379Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9327513Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9328587Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9329496Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9330239Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9331003Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9331825Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9332971Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9334133Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9334980Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9335849Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9336839Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9337751Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9338497Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9339279Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9340136Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9341159Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9342220Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9343418Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9344604Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9345530Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9346682Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9347856Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9348918Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9349757Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9350622Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9351645Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9352776Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9354222Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9355379Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9356444Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9357791Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9359431Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9360875Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9362633Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9364325Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9365474Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9366516Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9367693Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9368539Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9369462Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9370548Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9371482Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9372156Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9373074Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9374547Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9375735Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9376966Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9378323Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9379507Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9380621Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9381749Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9382811Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9383757Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9384908Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9385748Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9386463Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9387343Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9388499Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9389797Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9391025Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9392184Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9393477Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9394868Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9396185Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9397580Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9398948Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9399973Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9401105Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9402197Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9403236Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9404300Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9405444Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9406547Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9407461Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9408906Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9410348Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9411503Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9412967Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9414801Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9416051Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9417224Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9418419Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9419527Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9420806Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9421964Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9422954Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9425125Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9426652Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9428213Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9429649Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9430613Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9431579Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9432468Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9433430Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9434934Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9436354Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9437762Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9438909Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9439850Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9440991Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9442351Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9443509Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9444828Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9445964Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9446966Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9447988Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9448855Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9449764Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9450678Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9451619Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9452692Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9453993Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9455078Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9456145Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9457164Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9458207Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9459326Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9460475Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9461544Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9462458Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9463404Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9464318Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9465081Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9465943Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9466299Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9466616Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9467028Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9467495Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9467974Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9468276Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9468614Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9469053Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9469437Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9469955Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9470510Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9470929Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9471399Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9471941Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9472459Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9472825Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9473148Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9473547Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9474186Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9474700Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9475277Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9475726Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9476205Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9476903Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9477454Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9478212Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9479059Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9479832Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9480367Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9480808Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9481179Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9481542Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9481986Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9482546Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9482828Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9483300Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9484003Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9484699Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9485091Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9485832Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9486396Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9486939Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9487436Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9487979Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9488402Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9488825Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9489279Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9489555Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9489896Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9490226Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9490669Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9491065Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9491413Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9491828Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9492309Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9492637Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9492959Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9493287Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9493735Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9494297Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9495020Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9495553Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9495895Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9496351Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9496862Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9497392Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9497737Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9498279Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9498668Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9499132Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9499613Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9500140Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9500552Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9501016Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9501684Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9502211Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9502942Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9503735Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9504432Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9504939Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9505356Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9505702Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9506072Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9506511Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9507022Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9507277Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9507537Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9508061Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9508710Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9509082Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9510010Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9510517Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9511033Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9511517Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9512012Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9512398Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9512786Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9513446Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9513732Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9514221Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9514555Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9515178Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9515668Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9516247Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9516656Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9517132Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9517734Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9518302Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9518975Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9519516Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9519849Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9520329Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9520947Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9521360Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9521715Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9522408Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9522726Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9523209Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9524245Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9524719Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9525413Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9526190Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9526914Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9527291Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9527878Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9528256Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9528996Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9529592Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9529947Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9530374Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9530970Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9531643Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9532317Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9532659Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9533096Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9533400Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9533769Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9534347Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9535097Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9535653Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9536187Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9536720Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9537053Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9537685Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9538344Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9538776Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9539381Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9539808Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9540571Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9541030Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9541381Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9541802Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9542204Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9542637Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9543173Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9543624Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9544469Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9544928Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9545346Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9545819Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9546328Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9546800Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9547252Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9547563Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9547843Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9548203Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9548523Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9548971Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9549371Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9549717Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9550137Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9550634Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9550963Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9551299Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9551645Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9552089Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9552500Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9553062Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9553629Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9554144Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9554624Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9555140Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9555846Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9556182Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9556476Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9556846Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9557304Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9557797Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9558316Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9558951Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9559431Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9560079Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9560599Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9561323Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9562112Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9562644Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9563151Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9563559Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9564078Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9564458Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9564881Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9565394Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9565660Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9565926Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9566458Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9567116Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9567481Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9568191Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9568703Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9569206Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9569720Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9570497Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9570939Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9571357Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9571811Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9572087Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9572438Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9572816Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9573450Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9574314Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9574908Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9575316Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9575783Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9576377Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9576946Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9577617Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9578170Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9578503Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9578928Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9579413Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9579811Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9580167Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9580865Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9581186Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9581680Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9582563Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9583055Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9583608Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9584585Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9585303Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9585691Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9586510Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9586887Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9587405Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9588009Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9588363Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9588776Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9589368Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9590251Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9590942Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9591291Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9591722Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9592025Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9592381Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9592795Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9593557Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9594280Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9594794Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9595282Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9595579Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9596185Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9596807Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9597220Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9597800Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9598216Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9598658Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9599061Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9599396Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9599815Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9600212Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9600781Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9601300Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9601758Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9602210Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9602660Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9603084Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9603551Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9604416Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9604908Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9605355Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9605663Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9605938Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9606284Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9606596Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9607042Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9607424Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9607778Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9608212Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9608693Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9609015Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9609340Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9609680Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9610125Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9610527Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9611093Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9611658Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9612017Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9612526Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9613075Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9613608Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9614145Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9614460Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9614824Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9615267Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9615968Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9616496Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9616920Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9617385Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9618036Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9618559Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9619568Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9620375Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9620905Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9621404Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9621814Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9622179Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9622534Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9622955Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9623479Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9623750Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9624179Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9624708Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9625347Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9625725Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9626444Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9626956Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9627482Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9627967Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9628471Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9628850Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9629262Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9629696Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9629959Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9630467Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9630821Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9631447Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9631922Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9632462Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9632858Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9633330Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9634310Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9634897Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9635572Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9636127Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9636457Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9636887Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9637380Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9637778Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9638150Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9638865Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9639178Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9639654Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9640590Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9641080Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9641636Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9642493Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9643252Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9643641Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9644427Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9644807Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9645278Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9645878Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9646450Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9646860Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9647473Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9648147Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9648807Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9649159Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9649599Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9650088Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9650454Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9651314Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9652088Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9652677Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9653173Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9653653Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9654129Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9654757Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9655368Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9655771Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9656353Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9656759Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9657199Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9657617Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9657973Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9658383Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9658753Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9659143Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9659668Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9660093Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9660503Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9660938Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9661578Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9662053Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9662567Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9663034Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9663488Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9663804Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9664238Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9664583Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9665120Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9665580Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9665978Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9666324Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9666747Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9667229Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9667548Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9667880Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9668212Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9668659Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9669077Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9669639Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9670213Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9670618Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9671106Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9671653Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9672200Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9672579Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9672898Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9673308Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9673778Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9674441Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9674977Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9675371Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9675831Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9676690Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9677188Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9677888Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9678704Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9679211Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9679696Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9680294Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9680628Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9680960Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9681371Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9681880Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9682158Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9682436Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9682945Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9683591Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9684118Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9684806Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9685306Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9685806Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9686292Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9686791Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9687189Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9687574Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9687976Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9688224Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9688539Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9688874Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9689461Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9689945Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9690506Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9691074Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9691513Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9692053Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9692566Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9693189Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9693709Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9694385Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9694798Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9695232Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9695595Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9695923Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9696568Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9696852Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9697343Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9698181Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9698631Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9699148Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9699947Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9700700Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9701118Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9701758Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9702181Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9702718Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9703341Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9703736Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9704349Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9704971Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9705692Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9706631Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9706986Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9707460Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9707812Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9708200Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9708618Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9709419Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9710215Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9710732Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9711270Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9711599Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9712224Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9712879Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9713316Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9714082Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9714523Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9714967Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9715367Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9715689Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9716073Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9716440Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9716835Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9717331Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9717756Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9718187Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9718600Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9718974Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9719403Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9719860Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9720282Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9720696Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9721170Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9721441Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9721777Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9722081Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9722485Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9722830Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9723147Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9723521Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9724295Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9724598Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9724889Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9725191Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9725634Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9726031Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9726552Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9727070Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9727393Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9727841Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9728343Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9728830Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9729148Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9729455Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9729843Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9730276Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9730752Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9731282Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9731669Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9732108Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9732766Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9733286Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9734146Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9734933Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9735737Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9736270Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9736721Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9737076Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9737457Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9737906Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9738469Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9739008Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9739279Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9739826Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9740568Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9740967Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9741707Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9742260Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9742824Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9743325Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9744005Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9744441Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9744860Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9745307Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9745592Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9745948Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9746324Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9746982Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9747487Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9748073Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9748499Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9748973Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9749565Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9750145Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9751076Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9751615Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9751945Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9752371Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9752853Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9753282Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9753639Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9754653Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9755752Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9756547Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9757887Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9759337Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9760495Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9761981Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9763668Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9765086Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9766207Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9767309Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9768470Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9769727Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9770950Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9771890Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9773058Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9774617Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9776107Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9777252Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9778179Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9779097Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9779922Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9781133Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9782395Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9784008Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9785212Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9786327Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9787287Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9788332Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9789875Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9791037Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9792156Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9793274Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9794453Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9795453Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9796368Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9797264Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9798269Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9799222Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9800299Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9801379Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9802411Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9824751Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9825771Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9826801Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9827900Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9828966Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9829983Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9830856Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9831524Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9832244Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9833023Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9834413Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9835713Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9836617Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9837542Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9838614Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9839588Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9840393Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9841287Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9842236Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9843479Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9853335Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9856798Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9857895Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9858901Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9860088Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9861316Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9862374Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9863347Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9873335Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9874518Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9875611Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9876748Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9877810Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9878838Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9880088Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9881380Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9882772Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9884674Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9886225Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9887447Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9888592Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9889581Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9890733Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9891711Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9892881Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9914962Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9915752Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9916735Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9918143Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9919666Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9921047Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9922528Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9923786Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9925157Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9926326Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9927440Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9928446Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9929480Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9930378Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9931158Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9932044Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9933219Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9935790Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9937095Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9938186Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9939298Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9940644Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9942009Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9943347Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9944874Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9945891Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9946800Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9947880Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9949175Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9950105Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9951334Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9952523Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9953469Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9955153Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9957183Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9958422Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9959962Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9961705Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9962996Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9964309Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9966494Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9967657Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9968902Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9970112Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9971204Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9972358Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9974014Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9975643Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9976926Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9977966Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9978867Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9979848Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9980753Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9982139Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9983696Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9985143Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9986578Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9987616Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9988750Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9990177Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9991433Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9992638Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9993819Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9996272Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9997312Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9998338Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:00.9999234Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0000268Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0001347Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0002413Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0003628Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0004932Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0005924Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0007038Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0008029Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0009202Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0010394Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0011408Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0012385Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0013095Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0014033Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0014865Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0015794Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0016782Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0017667Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0018598Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0019656Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0020701Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0021521Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0022598Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0023612Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0025739Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0039454Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0040813Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0041905Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0042904Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0045709Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0047039Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0048035Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0048956Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0049783Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0050880Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0052092Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0053278Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0054612Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0055696Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0057055Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0058449Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0059908Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0061659Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0063199Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0064612Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0065764Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0066733Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0067649Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0068624Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0069790Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0070793Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0071555Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0072947Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0075389Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0076739Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0078139Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0079566Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0080879Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0082143Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0083651Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0084891Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0085961Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0087064Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0087882Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0088769Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0089589Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0090831Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0092207Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0093411Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0094751Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0095865Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0097141Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0098390Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0099788Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0101169Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0102213Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0103117Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0104355Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0105397Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0106326Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0107550Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0108731Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0109699Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0111436Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0112968Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0114318Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0117640Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0119385Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0121024Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0122212Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0123407Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0132307Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0133656Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0134999Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0136005Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0137212Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0138691Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0140266Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0141551Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0142517Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0143498Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0144547Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0145547Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0146947Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0148499Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0149769Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0150980Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0152025Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0153151Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0155862Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0157413Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0158560Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0159796Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0160937Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0161962Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0163038Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0164200Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0165351Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0166413Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0167516Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0168669Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0169752Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0170816Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0171849Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0172897Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0174219Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0175364Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0176441Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0177353Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0178080Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0178851Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0179672Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0180598Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0181595Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0182504Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0183431Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0185572Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0186583Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0187484Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0188240Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0189256Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0190204Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0191374Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0192805Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0194294Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0195240Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0196487Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0197785Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0198789Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0199619Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0200509Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0201772Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0202938Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0204356Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0205519Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0206596Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0207935Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0209326Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0210788Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0212549Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0214246Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0216492Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0217573Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0218618Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0219474Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0220522Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0221784Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0222718Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0223522Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0224578Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0225962Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0227210Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0228505Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0230224Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0231484Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0232675Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0234013Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0245758Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0246853Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0250066Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0251193Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0252009Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0252898Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0254258Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0255565Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0256807Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0257957Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0258993Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0260226Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0261545Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0262959Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0295958Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0297063Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0297995Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0299050Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0300097Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0301040Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0302255Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0303438Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0304640Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0306188Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0307703Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0308907Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0310450Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0312479Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0313771Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0334198Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0335499Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0336531Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0337882Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0339440Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0340412Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0341696Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0343261Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0345019Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0346225Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0347211Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0348188Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0349066Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0350035Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0351418Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0352955Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0355425Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0356656Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0357755Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0358820Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0360294Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0361583Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0362844Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0364251Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0365248Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0366411Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0367668Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0368533Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0369629Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0370544Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0371679Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0372841Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0374089Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0375462Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0376537Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0377600Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0378748Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0379887Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0380976Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0381914Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0382648Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0383422Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0385336Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0386351Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0387429Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0388266Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0389281Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0390306Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0391352Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0392204Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0393162Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0394244Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0395304Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0396503Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0397722Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0398796Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0399804Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0401004Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0402272Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0403574Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0404609Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0405506Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0406539Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0407692Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0408944Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0410106Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0411433Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0412784Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0414339Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0416765Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0418567Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0420153Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0421419Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0422635Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0423538Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0424681Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0425623Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0426836Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0427916Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0428561Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0429601Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0430936Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0432228Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0433580Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0435215Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0436431Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0437632Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0438813Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0439931Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0441243Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0442245Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0443134Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0444089Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0445886Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0447115Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0448489Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0450019Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0451111Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0452156Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0453394Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0454981Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0456382Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0457749Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0458786Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0459706Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0460779Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0461859Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0462784Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0464191Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0475271Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0476238Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0477788Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0479308Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0480505Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0482066Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0483806Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0485291Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0486461Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0487928Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0489022Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0490305Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0491564Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0492576Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0493779Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0496528Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0498418Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0499620Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0500594Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0501556Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0502444Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0503422Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0505833Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0507446Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0508748Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0510005Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0511009Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0512119Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0513565Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0514978Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0516201Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0517397Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0518459Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0518914Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0519272Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0519702Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0520116Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0520544Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0521090Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0521806Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0522264Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0522724Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0523150Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0523626Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0524297Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0542100Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0542865Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0543201Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0543476Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0543995Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0544325Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0544775Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0545176Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0545533Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0545953Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0546454Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0546785Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0547142Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0547480Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0547929Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0548327Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0548885Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0549453Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0549808Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0550311Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0550856Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0551389Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0551763Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0552084Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0552484Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0552954Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0553471Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0555455Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0556655Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0557140Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0557918Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0558435Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0559278Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0560278Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0560940Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0561429Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0561856Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0562237Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0562615Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0563077Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0563643Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0564105Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0564391Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0564935Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0565655Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0566061Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0566815Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0567386Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0567935Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0568441Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0568986Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0569413Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0569838Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0570291Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0570563Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0570907Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0571246Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0571928Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0572319Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0572673Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0573090Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0573571Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0574065Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0575285Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0575639Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0576430Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0576813Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0577351Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0578776Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0579131Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0579618Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0580168Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0580700Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0581075Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0581409Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0581817Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0582286Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0582798Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0583378Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0583818Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0584484Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0585207Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0585765Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0586529Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0587390Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0587933Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0588466Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0588925Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0589627Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0590009Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0590477Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0591055Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0591369Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0591714Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0592271Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0592972Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0593612Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0595577Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0604013Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0604623Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0605138Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0605670Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0606103Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0606540Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0606982Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0607284Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0607619Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0607982Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0608632Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0608988Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0609310Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0609786Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0610190Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0610536Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0610969Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0611452Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0611783Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0612107Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0612446Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0612888Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0613300Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0614245Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0614804Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0615159Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0615663Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0616205Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0616733Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0617097Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0617640Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0618054Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0618527Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0619042Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0619614Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0620052Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0620533Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0621243Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0621815Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0622567Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0623412Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0631805Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0632387Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0632845Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0633257Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0633644Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0658413Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0659017Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0659316Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0659583Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0660137Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0660828Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0661234Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0662239Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0662813Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0663353Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0664018Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0664546Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0664956Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0665617Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0666047Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0666325Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0666680Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0667043Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0667677Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0668192Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0668768Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0669185Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0669673Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0670261Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0670821Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0671500Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0672043Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0672375Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0672798Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0673304Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0673715Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0676068Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0676804Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0677125Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0677620Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0678505Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0679005Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0679793Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0680641Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0681397Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0681783Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0682421Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0682827Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0683565Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0684379Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0684781Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0685235Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0685858Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0686575Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0687281Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0687658Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0688126Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0688475Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0688874Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0689287Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0690081Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0690679Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0691216Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0691808Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0692150Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0692775Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0693428Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0694026Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0724228Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0724711Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0725453Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0725907Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0726258Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0726691Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0727086Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0727514Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0728061Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0728713Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0729180Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0729637Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0730050Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0730511Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0731017Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0731477Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0731913Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0732238Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0732512Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0732849Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0733182Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0733619Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0734165Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0734528Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0734944Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0735433Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0735765Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0736113Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0736446Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0736894Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0737302Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0737852Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0738420Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0738780Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0739272Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0739831Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0740600Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0741024Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0741361Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0741772Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0742235Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0742748Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0743331Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0785192Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0785716Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0786439Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0786983Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0787742Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0788600Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0789172Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0789716Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0790180Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0790553Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0790979Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0791437Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0791993Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0792278Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0792567Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0793116Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0793814Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0794373Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0795108Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0795659Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0796203Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0796700Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0797459Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0797885Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0798305Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0798743Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0799023Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0799372Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0799736Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0800366Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0801097Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0801674Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0802074Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0802548Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0803127Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0803686Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0842648Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0843244Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0843578Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0844179Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0844668Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0845076Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0845436Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0846140Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0846469Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0846975Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0847847Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0848326Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0848889Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0849717Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0850476Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0851104Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0851736Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0852142Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0852673Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0853299Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0853690Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0854307Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0855230Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0855957Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0856665Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0857016Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0857481Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0857824Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0858209Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0858621Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0859438Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0860031Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0860547Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0861080Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0861409Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0862030Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0862682Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0863133Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0863738Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0874836Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0875353Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0875800Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0876167Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0876598Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0877014Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0877674Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0878224Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0878684Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0879160Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0879624Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0880045Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0880524Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0881228Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0881699Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0882153Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0882463Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0882727Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0883088Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0883403Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0884018Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0917743Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0918168Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0918614Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0919106Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0919446Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0919778Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0920122Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0920577Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0920976Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0921525Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0922107Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0922460Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0922948Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0923501Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0936864Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0937252Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0937589Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0937992Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0938714Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0939246Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0939815Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0940247Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0940748Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0941491Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0942035Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0943016Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0944018Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0944578Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0945118Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0945568Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0945943Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0946322Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0946783Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0947342Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0947631Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0947899Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0948434Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0949128Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0949521Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0950255Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0950831Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0951374Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0951857Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0952390Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0952804Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0953217Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0953661Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0989813Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0990436Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0990830Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0991553Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0992115Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0992693Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0993106Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0993603Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0994571Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0995167Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0995841Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0996377Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0996708Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0997138Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0997616Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0998031Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0998399Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0999099Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0999418Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.0999900Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1000852Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1001350Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1001915Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1002766Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1003529Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1004063Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1004783Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1005200Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1005726Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1006362Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1006990Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1007439Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1008050Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1008778Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1009476Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1009829Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1010529Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1010892Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1011283Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1011712Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1012512Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1013112Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1013641Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1019026Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1019404Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1020057Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1020721Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1021162Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1021773Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1022203Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1022682Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1023149Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1023504Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1024101Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1055352Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1055780Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1056285Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1056850Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1057277Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1057700Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1058354Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1058910Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1059371Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1059831Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1060368Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1060650Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1060898Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1061452Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1061778Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1062221Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1062619Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1062967Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1063385Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1064048Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1064485Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1064790Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1065109Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1065545Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1066053Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1066584Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1067132Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1067576Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1068033Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1068555Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1069189Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1069544Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1069860Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1070357Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1070831Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1071470Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1072138Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1072559Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1073155Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1074208Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1074858Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1075588Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1076526Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1077169Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1077900Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1078460Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1078819Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1079188Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1079738Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1080279Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1080627Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1080996Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1081534Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1082244Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1082668Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1083412Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1084141Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1084699Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1085195Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1085735Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1086167Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1086595Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1087043Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1087322Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1087676Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1088053Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1088698Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1089200Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1089798Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1090438Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1090913Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1091567Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1092140Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1092822Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1093380Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1094079Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1095446Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1096371Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1096915Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1097434Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1098147Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1098569Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1099189Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1100184Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1100924Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1101519Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1102512Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1103338Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1103802Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1105014Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1105557Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1106140Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1106888Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1107357Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1107836Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1108676Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1109507Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1110555Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1130340Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1130868Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1131223Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1131622Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1132047Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1132856Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1133716Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1134453Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1134994Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1135338Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1135970Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1136619Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1137063Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1137674Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1138115Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1138601Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1139043Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1139392Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1139822Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1140239Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1140671Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1141285Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1141822Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1142273Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1142726Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1143152Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1143619Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1146015Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1157718Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1158424Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1158740Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1159025Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1159373Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1159696Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1160149Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1160531Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1160878Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1161310Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1162082Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1162411Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1162745Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1163078Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1163524Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1164097Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1164676Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1165247Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1165619Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1166140Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1166689Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1167226Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1167598Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1167924Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1168319Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1168791Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1169316Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1169890Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1170335Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1170813Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1171517Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1172063Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1172816Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1173676Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1191541Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1192088Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1192546Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1192933Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1193303Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1193750Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1194725Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1195026Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1195307Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1195865Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1196557Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1196958Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1197704Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1198256Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1198801Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1199302Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1199826Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1200235Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1200663Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1201104Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1201375Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1201735Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1202110Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1202752Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1203265Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1203991Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1204405Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1204873Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1205464Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1206038Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1206946Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1207485Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1207814Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1208247Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1208720Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1209122Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1209485Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1210398Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1210725Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1211206Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1212085Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1212562Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1213114Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1225065Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1225876Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1226289Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1226965Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1227380Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1227913Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1228540Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1228933Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1229407Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1230023Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1230741Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1231459Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1231814Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1232281Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1232635Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1233035Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1233675Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1234643Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1235265Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1235786Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1236318Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1236655Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1237496Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1238080Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1238477Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1239032Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1239454Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1239905Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1240276Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1240588Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1241038Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1241417Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1241822Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1242281Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1242680Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1243083Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1243500Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1244152Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1245584Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1246094Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1246526Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1246942Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1248265Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1248539Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1248885Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1250233Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1250647Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1251225Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1251542Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1251919Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1252330Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1252569Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1252814Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1253108Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1253507Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1254243Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1254775Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1255292Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1255630Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1256089Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1256586Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1257064Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1257383Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1257678Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1258037Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1258458Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1258933Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1259456Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1259854Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1260287Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1260928Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1261447Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1262144Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1262914Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1263403Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1264069Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1264503Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1264862Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1265488Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1265907Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1266412Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1266680Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1266924Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1267356Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1268011Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1268572Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1269375Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1269897Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1270395Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1270847Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1271325Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1271694Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1272061Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1272476Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1272727Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1273038Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1273335Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1273743Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1274426Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1274771Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1275170Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1275614Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1275942Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1276256Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1276568Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1277074Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1277482Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1278006Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1278535Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1278879Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1279351Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1280067Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1280578Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1280907Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1281209Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1281591Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1282023Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1282494Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1283211Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1283634Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1284273Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1284924Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1285445Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1286154Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1286980Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1287510Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1288005Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1288456Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1288803Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1289145Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1289685Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1290219Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1290512Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1290797Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1291362Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1292096Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1292504Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1293205Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1293729Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1294544Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1295213Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1295718Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1296124Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1296615Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1297035Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1297303Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1297636Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1297986Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1298786Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1299265Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1299823Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1300220Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1300661Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1301216Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1301756Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1302422Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1302936Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1303242Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1303649Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1304299Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1304780Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1305130Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1305807Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1306117Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1306584Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1307416Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1307869Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1308359Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1309132Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1309843Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1310443Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1311019Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1311402Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1311890Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1312487Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1312902Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1313631Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1316022Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1316813Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1317491Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1317934Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1318382Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1318704Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1319078Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1319488Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1320251Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1320815Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1321292Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1321777Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1322070Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1322606Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1323220Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1323644Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1324583Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1324981Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1325437Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1325853Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1326185Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1326591Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1327124Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1327483Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1327935Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1328335Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1328719Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1329105Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1329506Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1330162Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1330645Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1331092Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1331506Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1331765Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1332018Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1332256Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1332440Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1332706Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1332932Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1333172Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1333439Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1333705Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1334122Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1334351Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1334528Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1334766Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1334978Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1335282Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1335582Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1335763Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1336036Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1336333Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1336612Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1336807Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1336976Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1337347Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1337595Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1337861Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1338165Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1338397Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1338645Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1339018Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1339413Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1339818Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1340272Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1340559Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1340831Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1341105Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1341325Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1341537Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1341777Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1342072Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1342219Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1342356Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1342649Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1343011Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1343214Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1343618Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1344068Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1344356Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1344614Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1344883Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1345092Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1345313Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1345546Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1345821Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1346009Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1346199Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1346538Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1346799Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1347098Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1347305Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1347654Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1347966Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1348261Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1348615Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1348895Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1349062Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1349293Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1349547Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1349757Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1349938Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1350314Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1350477Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1350732Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1351198Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1351440Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1351733Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1352173Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1352564Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1352771Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1353099Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1353308Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1353589Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1354260Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1354465Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1354698Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1355022Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1355394Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1355762Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1356060Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1356309Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1356486Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1356689Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1356901Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1357314Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1357622Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1357887Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1358162Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1358338Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1358667Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1359001Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1359227Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1359532Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1359754Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1360013Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1360243Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1360421Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1360646Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1360855Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1361078Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1361360Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1361591Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1361823Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1362166Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1362377Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1362614Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1362880Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1363119Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1363348Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1363509Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1363717Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1364164Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1364345Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1364575Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1364770Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1364950Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1365164Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1365410Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1365576Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1365755Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1365927Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1366156Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1366363Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1366648Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1366934Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1367119Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1367373Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1367659Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1367953Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1368143Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1368309Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1368520Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1368758Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1369016Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1369311Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1369536Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1369909Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1370282Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1370561Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1370958Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1371398Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1371679Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1372053Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1372291Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1372485Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1372672Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1372905Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1373193Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1373337Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1373479Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1373761Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1374403Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1374612Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1374998Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1375279Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1375561Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1375811Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1376085Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1376303Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1376518Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1376745Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1376887Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1377067Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1377257Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1377593Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1377858Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1378292Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1378497Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1378742Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1379055Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1379344Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1379697Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1380070Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1380243Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1380464Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1380714Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1380921Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1381111Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1381477Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1381639Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1381902Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1382363Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1382610Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1382901Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1383334Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1383722Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1384209Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1384555Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1384764Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1385042Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1385361Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1385563Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1385797Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1386110Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1386656Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1387030Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1387208Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1387445Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1387624Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1387820Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1388034Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1388550Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1388859Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1389121Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1389397Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1389564Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1389886Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1390225Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1390446Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1390758Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1390982Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1391234Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1391462Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1391643Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1391865Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1392192Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1392618Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1393145Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1393561Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1394103Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1394380Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1394605Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1394852Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1395115Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1395518Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1395755Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1395919Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1396059Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1396247Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1396416Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1396658Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1396865Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1397052Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1397378Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1397630Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1397806Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1397977Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1398151Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1398386Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1398599Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1398889Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1399185Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1399374Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1399636Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1399930Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1400210Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1400395Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1400571Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1400782Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1401031Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1401305Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1401602Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1401830Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1402083Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1402450Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1402735Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1403142Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1403665Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1404141Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1404434Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1404666Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1404858Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1405051Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1405406Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1405699Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1405849Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1405985Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1406266Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1406630Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1406839Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1407226Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1407517Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1407804Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1408053Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1408327Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1408537Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1408754Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1408984Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1409132Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1409315Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1409504Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1409850Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1410104Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1410407Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1410617Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1410865Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1411181Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1411594Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1411939Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1412215Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1412389Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1412614Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1412862Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1413075Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1413335Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1413707Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1414097Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1414370Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1414843Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1415094Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1415385Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1415825Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1416224Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1416421Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1416752Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1416970Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1417240Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1417560Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1417767Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1417998Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1418315Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1418689Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1419056Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1419232Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1419474Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1419793Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1419987Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1420207Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1420620Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1420922Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1421192Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1421464Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1421734Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1422069Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1422398Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1422617Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1422925Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1423142Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1423389Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1423620Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1423799Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1424219Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1424437Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1424657Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1424935Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1425170Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1425402Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1425640Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1425861Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1426099Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1426364Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1426610Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1426837Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1426994Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1427136Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1427312Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1427477Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1427835Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1428031Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1428213Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1428427Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1428680Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1428847Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1429015Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1429195Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1429532Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1429743Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1430039Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1430322Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1430497Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1430754Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1431037Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1431312Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1431501Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1431666Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1431868Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1432111Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1432368Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1432664Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1432893Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1433133Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1433505Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1433791Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1434293Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1434734Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1435015Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1435284Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1435518Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1435822Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1436010Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1436238Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1436525Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1436669Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1436806Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1437093Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1437554Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1437757Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1438147Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1438428Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1438705Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1438958Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1439228Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1439440Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1439661Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1439886Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1440025Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1440202Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1440395Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1440723Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1441003Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1441310Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1441520Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1441765Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1442090Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1442394Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1442739Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1443020Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1443189Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1443505Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1443760Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1444058Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1444238Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1444605Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1444765Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1445013Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1445480Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1445880Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1446164Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1446602Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1446988Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1447184Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1447518Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1447730Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1448000Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1448330Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1448525Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1448753Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1449078Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1449445Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1449809Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1449994Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1450230Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1450403Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1450603Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1450815Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1451230Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1451553Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1451925Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1452199Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1452370Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1452695Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1453033Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1453253Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1453635Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1453961Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1454212Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1454441Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1454620Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1454848Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1455055Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1455278Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1455560Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1455796Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1456025Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1456257Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1456468Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1456705Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1456970Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1457210Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1457441Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1457610Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1457747Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1457926Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1458095Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1458322Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1458517Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1458703Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1458917Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1459167Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1459448Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1459616Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1459784Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1460020Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1460221Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1460508Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1460798Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1460974Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1461330Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1461616Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1461896Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1462080Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1462244Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1462452Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1462691Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1462950Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1463255Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1463475Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1463718Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1464188Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1464468Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1464861Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1465306Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1465587Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1465858Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1466093Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1466279Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1466465Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1466696Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1466983Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1467131Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1467385Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1467665Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1468021Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1468224Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1468608Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1468888Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1469274Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1469524Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1469793Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1470008Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1470221Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1470447Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1470592Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1470769Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1470959Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1471296Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1471551Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1471848Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1472057Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1472297Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1472605Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1472905Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1473254Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1473533Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1473704Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1474026Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1474276Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1474485Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1474663Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1475024Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1475308Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1475557Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1476018Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1476266Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1476553Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1476991Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1477485Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1477683Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1478005Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1478219Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1478485Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1478804Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1479006Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1479236Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1479557Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1479929Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1480291Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1480466Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1480706Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1480879Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1481073Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1481295Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1481710Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1482013Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1482280Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1482550Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1482718Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1483047Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1483486Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1483706Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1484113Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1484331Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1484585Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1484816Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1484993Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1485323Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1485533Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1485755Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1486036Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1486266Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1486499Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1486727Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1486936Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1487179Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1487441Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1487677Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1487910Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1488067Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1488202Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1488381Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1488547Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1488793Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1489005Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1489189Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1489405Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1489662Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1489831Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1490001Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1490179Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1490412Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1490622Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1491054Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1491351Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1491527Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1491782Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1492072Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1492349Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1492532Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1492777Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1492982Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1493218Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1493486Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1493780Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1494107Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1494359Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1494725Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1495009Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1495416Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1495856Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1496133Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1496411Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1496640Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1496832Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1497025Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1497274Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1497791Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1498008Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1498150Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1498435Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1498809Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1499012Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1499405Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1499831Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1500109Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1500360Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1500634Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1500844Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1501058Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1501397Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1501648Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1501966Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1502261Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1502744Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1503144Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1503469Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1503781Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1504248Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1504427Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1504608Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1504783Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1505015Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1505232Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1505517Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1505811Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1505997Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1506256Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1506543Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1506823Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1507010Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1507181Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1507396Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1507640Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1507905Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1508206Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1508580Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1508830Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1509206Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1509486Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1509886Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1510334Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1510753Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1511028Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1511265Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1511454Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1511642Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1511874Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1512163Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1512313Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1512458Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1512740Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1513096Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1513305Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1513692Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1514269Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1514765Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1515200Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1515671Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1516041Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1516406Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1516794Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1517030Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1517336Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1517660Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1518233Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1518825Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1519341Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1519693Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1520112Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1520634Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1521135Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1521866Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1522349Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1522628Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1523011Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1523436Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1523786Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1524259Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1524892Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1525169Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1525609Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1526398Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1526827Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1527325Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1528075Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1528748Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1529098Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1529659Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1530011Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1530475Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1531027Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1531364Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1531760Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1532308Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1533096Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1533731Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1534321Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1534740Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1535023Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1535229Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1535581Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1536009Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1536318Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1536585Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1536862Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1537042Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1537370Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1537719Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1537944Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1538258Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1538484Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1538731Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1538909Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1539079Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1539313Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1539513Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1539699Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1539920Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1540170Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1540343Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1540513Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1540689Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1540923Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1541163Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1541562Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1541851Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1542037Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1542290Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1542572Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1542852Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1543036Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1543276Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1543489Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1543728Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1544169Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1544471Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1544696Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1544949Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1545322Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1545611Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1546012Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1546462Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1546740Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1547010Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1547247Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1547443Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1547642Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1547878Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1548167Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1548313Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1548459Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1548740Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1549100Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1549304Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1549816Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1550101Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1550387Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1550634Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1550905Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1551124Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1551342Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1551674Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1551822Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1551998Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1552160Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1552395Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1552591Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1552767Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1552989Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1553234Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1553403Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1553573Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1553748Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1554222Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1554581Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1555076Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1555566Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1555868Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1556314Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1556800Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1557271Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1557584Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1557861Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1558210Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1558623Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1559081Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1559590Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1560127Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1560551Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1561177Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1561677Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1562353Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1563113Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1563724Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1564323Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1564714Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1565039Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1565363Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1565753Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1566248Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1566492Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1566730Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1567221Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1567834Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1568173Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1568845Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1569330Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1569808Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1570246Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1570717Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1571081Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1571457Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1571844Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1572077Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1572386Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1572707Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1573281Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1573993Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1574514Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1574879Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1575309Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1575865Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1576377Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1577213Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1577723Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1578024Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1578418Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1578872Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1579239Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1579554Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1580245Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1580544Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1581002Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1581864Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1582316Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1582830Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1583610Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1584476Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1584836Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1585411Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1585765Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1586228Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1586790Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1587132Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1587434Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1587725Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1588291Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1588627Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1588937Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1589308Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1589733Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1590018Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1590303Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1590592Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1591121Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1591486Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1591989Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1592487Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1592788Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1593223Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1593709Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1594322Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1594648Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1594930Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1595279Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1595687Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1596140Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1596652Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1597028Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1597452Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1598093Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1598569Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1599245Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1600005Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1600478Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1600949Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1601342Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1601861Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1602187Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1602575Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1603067Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1603308Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1603546Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1604162Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1604982Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1605363Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1606062Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1606571Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1607062Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1607493Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1607969Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1608358Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1608740Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1609132Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1609388Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1609708Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1610053Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1610646Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1611089Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1611619Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1612010Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1612435Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1612973Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1613481Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1614315Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1614805Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1615101Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1615652Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1616080Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1616438Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1616749Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1617379Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1617654Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1618074Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1618535Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1618919Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1619219Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1619664Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1620062Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1620264Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1620591Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1620814Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1621090Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1621409Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1621614Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1621845Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1622166Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1622545Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1622913Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1623093Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1623345Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1623521Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1623716Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1624160Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1624427Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1624598Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1624845Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1625166Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1625345Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1625562Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1625819Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1625987Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1626157Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1626340Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1626572Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1626875Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1627172Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1627461Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1627641Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1627901Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1628183Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1628459Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1628652Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1628818Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1629021Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1629266Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1629528Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1629827Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1630055Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1630302Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1630673Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1630966Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1631363Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1631803Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1632090Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1632363Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1632592Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1632872Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1633064Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1633293Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1633584Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1633727Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1634077Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1634400Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1634766Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1635109Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1635523Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1635825Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1636115Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1636372Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1636645Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1636863Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1637088Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1637321Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1637462Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1637648Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1637849Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1638190Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1638448Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1638756Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1638970Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1639215Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1639534Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1639830Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1640181Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1640461Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1640626Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1640850Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1641331Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1641539Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1641721Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1642091Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1642250Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1642499Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1642965Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1643293Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1643585Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1644251Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1644658Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1644858Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1645198Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1645413Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1645697Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1646021Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1646219Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1646450Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1646774Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1647149Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1647513Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1647706Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1647947Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1648121Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1648321Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1648535Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1648951Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1649136Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1649307Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1649663Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1649866Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1650044Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1650264Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1650517Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1650682Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1650853Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1651028Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1651360Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1651566Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1651866Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1652159Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1652340Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1652594Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1652881Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1653159Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1653343Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1653518Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1653723Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1654148Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1654424Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1654722Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1654947Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1655205Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1655576Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1655871Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1656277Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1656713Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1656992Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1657275Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1657509Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1657825Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1658020Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1658249Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1658538Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1658687Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1658826Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1659107Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1659471Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1659788Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1660177Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1660468Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1660746Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1660995Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1661273Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1661487Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1661708Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1661949Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1662087Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1662262Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1662432Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1662668Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1662863Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1663045Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1663267Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1663521Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1663691Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1663963Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1664139Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1664365Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1664582Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1664868Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1665154Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1665341Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1665711Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1665995Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1666280Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1666463Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1666627Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1666840Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1667084Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1667453Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1667759Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1667984Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1668229Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1668602Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1668887Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1669287Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1669744Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1670020Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1670290Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1670523Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1670717Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1670904Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1671136Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1671425Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1671569Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1671712Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1671993Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1672349Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1672552Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1672934Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1673219Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1673624Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1673968Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1674241Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1674461Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1674675Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1674858Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1675031Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1675261Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1675567Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1675754Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1675970Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1676217Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1676380Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1676550Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1676718Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1676944Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1677155Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1677444Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1677730Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1677911Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1678166Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1678447Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1678728Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1678910Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1679077Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1679290Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1679528Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1679790Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1680090Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1680314Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1680561Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1680934Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1681220Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1681878Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1682678Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1683174Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1683664Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1684240Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1684625Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1684830Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1685074Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1685365Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1685512Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1685656Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1685939Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1686298Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1686507Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1686900Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1687188Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1687471Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1687719Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1687992Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1688213Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1688430Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1688663Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1688810Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1688991Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1689184Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1689523Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1689787Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1690090Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1690299Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1690549Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1690977Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1691281Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1691631Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1691921Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1692092Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1699920Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1700416Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1700650Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1700849Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1701225Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1701392Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1701661Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1702126Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1702377Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1702686Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1703122Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1703515Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1703722Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1704194Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1704412Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1704700Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1705025Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1705231Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1705467Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1705787Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1706162Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1706533Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1706718Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1707077Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1707262Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1707461Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1707676Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1708091Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1708397Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1708574Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1708850Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1709086Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1709282Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1709465Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1709683Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1709931Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1710103Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1710266Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1710434Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1710672Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1710884Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1711174Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1711467Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1711654Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1711910Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1712195Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1712478Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1712667Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1712831Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1713040Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1713279Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1713545Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1713947Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1714174Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1714425Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1714914Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1715199Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1715603Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1716055Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1716333Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1716605Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1716948Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1717141Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1717329Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1717563Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1717852Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1717999Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1718137Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1718419Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1718786Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1718996Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1719383Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1719667Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1719954Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1720198Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1720469Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1720689Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1720906Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1721136Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1721282Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1721466Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1721656Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1721995Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1722261Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1722566Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1722855Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1723101Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1723409Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1723700Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1724155Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1724436Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1724722Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1724950Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1725200Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1725404Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1725595Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1725968Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1726129Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1726386Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1726851Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1727107Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1727402Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1727838Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1728233Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1728439Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1728766Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1728983Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1729268Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1729590Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1729788Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1730027Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1730339Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1730710Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1731203Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1731383Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1731620Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1731797Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1731991Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1732205Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1732390Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1732559Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1732866Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1733072Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1733251Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1733470Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1733726Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1733990Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1734162Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1734341Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1734572Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1734787Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1735081Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1735367Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1735547Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1735807Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1736092Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1736366Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1736558Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1736725Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1736930Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1737172Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1737442Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1737740Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1737968Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1738219Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1738590Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1738988Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1739394Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1739837Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1740115Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1740391Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1740762Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1740959Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1741190Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1741419Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1741707Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1741855Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1741992Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1742274Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1742634Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1742848Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1743236Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1743520Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1743799Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1744143Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1744539Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1744930Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1745337Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1745649Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1745790Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1745976Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1746166Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1746501Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1746766Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1747080Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1747290Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1747683Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1747993Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1748289Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1748645Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1748920Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1749090Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1749547Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1750009Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1750383Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1750710Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1751087Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1751251Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1751511Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1751970Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1752234Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1752530Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1752963Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1753358Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1753582Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1754037Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1754257Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1754539Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1754864Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1755067Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1755303Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1755618Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1755993Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1756366Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1756683Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1756926Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1757111Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1757308Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1757525Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1757947Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1758125Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1758405Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1758847Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1759213Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1759543Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1759937Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1760242Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1760413Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1760595Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1760765Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1761006Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1761217Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1761522Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1761809Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1761985Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1762246Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1762531Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1762803Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1763001Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1763164Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1763368Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1763616Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1763994Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1764296Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1764524Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1764769Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1765292Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1765582Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1765979Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1766418Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1766702Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1766978Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1767310Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1767511Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1767697Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1767929Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1768219Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1768360Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1768497Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1768786Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1769148Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1769355Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1769749Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1770027Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1770301Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1770552Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1770823Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1771036Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1771257Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1771484Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1771621Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1771802Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1771971Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1772199Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1772401Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1772575Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1772793Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1773140Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1773310Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1773476Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1773645Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1773977Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1774186Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1774469Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1774761Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1775063Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1775318Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1775605Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1775881Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1776064Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1776237Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1776438Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1776686Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1776958Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1777256Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1777478Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1777722Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1778091Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1778375Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1778766Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1779209Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1779492Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1779761Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1779990Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1780182Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1780369Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1780593Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1780888Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1781144Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1781282Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1781567Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1781924Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1782127Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1782518Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1782881Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1783161Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1783414Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1783684Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1784003Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1784222Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1784448Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1784586Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1784775Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1784967Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1785299Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1785560Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1785861Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1786064Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1786242Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1786404Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1786629Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1786837Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1787012Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1787229Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1787480Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1787645Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1787811Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1787982Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1788215Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1788426Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1788891Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1789176Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1789350Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1789601Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1789886Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1790159Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1790343Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1790618Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1790825Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1791061Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1791325Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1791612Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1791831Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1792081Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1792446Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1792742Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1793140Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1793572Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1793948Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1794224Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1794455Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1794648Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1794844Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1795070Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1795352Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1795496Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1795631Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1795908Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1796270Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1796473Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1796976Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1797262Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1797539Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1797782Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1798052Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1798261Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1798473Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1798806Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1798948Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1799125Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1799313Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1799648Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1799902Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1800197Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1800407Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1800653Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1800834Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1801001Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1801228Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1801422Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1801600Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1801814Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1802059Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1802234Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1802405Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1802576Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1802811Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1803017Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1803304Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1803594Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1803771Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1804136Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1804432Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1804823Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1805144Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1805432Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1805799Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1806228Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1806699Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1807115Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1807535Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1807787Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1808160Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1808436Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1808833Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1809273Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1809554Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1809832Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1810058Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1810247Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1810436Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1810668Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1810950Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1811089Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1811238Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1811522Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1811879Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1812084Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1812472Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1812750Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1813032Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1813281Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1813634Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1813965Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1814182Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1814410Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1814552Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1814726Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1814917Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1815259Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1815636Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1815933Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1816144Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1816385Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1816692Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1816990Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1817339Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1817623Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1817794Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1818012Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1818260Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1818464Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1818642Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1819008Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1819178Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1819429Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1819886Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1820137Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1820425Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1820864Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1821262Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1821460Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1821895Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1822107Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1822377Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1822701Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1822902Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1823132Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1823533Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1824334Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1824992Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1825241Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1825487Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1825662Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1825856Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1826077Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1826508Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1826819Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1827091Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1827359Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1827527Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1827852Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1828183Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1828409Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1828720Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1828941Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1829187Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1829419Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1829595Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1829811Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1830028Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1830392Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1830670Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1830900Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1831133Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1831360Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1831572Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1831813Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1832175Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1832420Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1832653Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1832810Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1832953Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1833135Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1833296Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1833523Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1833724Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1834119Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1834346Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1834600Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1834765Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1834930Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1835105Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1835336Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1835540Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1835828Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1836128Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1836316Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1836571Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1836862Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1837136Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1837317Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1837485Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1837688Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1838056Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1838324Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1838614Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1838835Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1839084Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1839450Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1839731Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1840235Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1840677Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1840953Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1841261Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1841489Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1841677Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1841872Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1842106Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1842393Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1842540Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1842676Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1842954Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1843323Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1843525Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1844009Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1844309Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1844590Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1844838Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1845108Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1845320Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1845534Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1845764Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1845905Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1846202Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1846396Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1846726Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1846978Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1847281Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1847487Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1847730Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1848247Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1848550Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1848895Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1849176Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1849339Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1849559Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1849808Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1850015Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1850197Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1850564Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1850724Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1850974Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1851430Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1851677Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1851961Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1852407Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1852798Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1852993Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1853325Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1853526Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1853795Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1854232Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1854563Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1854794Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1855115Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1855484Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1855844Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1856023Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1856363Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1856542Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1856738Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1856951Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1857367Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1857673Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1857936Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1858415Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1858734Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1859322Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1859889Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1860124Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1860433Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1860651Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1860900Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1861142Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1861317Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1861536Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1861747Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1861963Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1862238Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1862470Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1862699Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1862930Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1863250Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1863484Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1863742Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1864104Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1864332Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1864491Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1864635Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1865179Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1865463Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1866824Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1867071Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1867253Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1867478Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1867729Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1867893Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1868063Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1868244Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1868478Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1868683Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1868977Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1869261Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1869439Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1869696Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1869980Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1870260Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1870453Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1870618Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1870822Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1871069Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1871329Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1871627Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1871852Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1872102Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1872659Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1872947Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1873346Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1873789Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1874205Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1874595Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1874830Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1875035Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1875227Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1875456Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1875748Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1875893Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1876033Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1876319Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1876681Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1876883Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1877274Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1877556Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1877832Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1878087Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1878355Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1878569Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1878792Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1879017Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1879157Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1879342Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1879538Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1879874Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1880128Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1880441Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1880764Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1881002Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1881313Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1881602Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1881950Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1882228Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1882470Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1882692Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1882943Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1883147Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1883330Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1883819Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1884246Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1884689Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1885486Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1885752Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1886037Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1886467Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1886860Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1887057Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1887393Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1887599Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1887870Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1888205Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1888400Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1888629Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1888942Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1889322Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1889837Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1890016Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1890255Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1890428Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1890623Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1890841Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1891254Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1891667Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1891939Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1892209Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1892374Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1892701Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1893033Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1893255Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1893577Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1893803Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1894254Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1894488Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1894667Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1894887Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1895102Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1895324Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1895608Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1895848Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1896074Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1896302Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1896519Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1896754Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1897014Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1897260Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1897627Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1897786Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1897927Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1898103Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1898267Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1898498Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1898693Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1898870Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1899088Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1899444Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1899612Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1899778Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1899952Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1900181Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1900385Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1900674Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1900960Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1901140Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1901402Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1901685Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1901957Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1902146Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1902308Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1902511Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1902755Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1903017Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1903316Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1903542Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1903788Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1904262Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1904553Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1904948Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1905398Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1905793Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1906061Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1906289Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1906485Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1906686Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1906922Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1907310Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1907462Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1907605Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1907885Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1908242Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1908441Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1908831Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1909112Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1909394Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1909652Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1909921Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1910135Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1910354Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1910579Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1910716Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1910897Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1911087Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1911426Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1911683Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1911979Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1912185Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1912429Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1912739Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1913035Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1913472Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1913748Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1914013Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1914240Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1914489Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1914691Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1914876Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1915411Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1915582Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1915852Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1916306Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1916548Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1916835Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1917268Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1917663Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1917863Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1918186Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1918388Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1918663Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1918981Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1919174Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1919418Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1919734Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1920103Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1920469Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1920644Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1920877Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1921054Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1921254Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1921581Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1921995Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1922295Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1922557Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1922832Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1923000Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1923403Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1923745Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1924064Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1924368Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1924719Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1925028Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1925257Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1925445Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1925671Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1925879Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1926100Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1926376Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1926610Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1926852Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1927082Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1927468Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1927861Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1928316Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1928730Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1929115Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1929365Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1929580Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1929862Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1930130Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1930511Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1931005Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1931304Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1931655Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1932090Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1932357Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1932639Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1932941Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1933317Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1933683Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1934232Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1934537Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1934719Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1934974Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1935266Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1935542Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1935726Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1935903Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1936110Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1936350Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1936612Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1936910Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1937131Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1937376Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1937748Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1938036Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1938432Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1938879Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1939156Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1939431Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1939661Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1939853Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1940228Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1940459Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1940746Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1940893Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1941035Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1941350Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1941712Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1942023Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1942412Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1942696Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1942979Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1943225Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1943493Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1943706Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1944107Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1944345Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1944487Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1944663Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1944852Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1945189Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1945451Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1945753Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1945969Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1946215Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1946524Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1946822Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1947168Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1947443Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1947613Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1947831Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1948209Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1948418Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1948598Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1948959Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1949127Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1949374Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1949929Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1950304Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1950598Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1951036Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1951428Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1951627Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1951955Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1952168Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1952438Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1952760Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1952963Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1953195Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1953510Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1954119Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1954519Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1954708Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1954964Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1955141Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1955343Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1955566Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1955986Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1956297Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1956572Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1956983Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1957154Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1957486Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1957820Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1958042Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1958357Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1958678Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1958933Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1959171Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1959351Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1959573Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1959787Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1960008Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1960289Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1960531Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1960765Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1960995Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1961209Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1961453Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1961714Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1961951Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1962185Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1962349Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1962491Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1962673Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1962837Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1963065Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1963264Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1963442Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1963657Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1964123Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1964306Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1964601Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1964782Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1965013Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1965219Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1965513Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1965800Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1965982Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1966241Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1966633Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1966913Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1967097Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1967267Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1967474Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1967714Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1967984Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1968279Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1968509Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1968761Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1969130Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1969413Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1969813Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1970255Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1970537Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1970821Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1971050Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1971240Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1971434Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1971666Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1971954Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1972102Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1972245Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1972613Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1972975Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1973176Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1973560Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1973957Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1974246Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1974614Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1974897Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1975112Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1975326Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1975563Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1975707Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1975890Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1976087Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1976431Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1976699Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1977011Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1977219Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1977462Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1977779Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1978074Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1978429Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1978719Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1978887Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1979111Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1979367Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1979573Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1979754Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1980126Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1980295Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1980655Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1981120Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1981367Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1981652Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1982096Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1982489Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1982769Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1983100Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1983308Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1983583Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1984098Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1984307Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1984540Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1984867Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1985250Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1985617Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1985802Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1986041Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1986216Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1986420Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1986636Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1987064Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1987377Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1987643Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1987916Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1988090Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1988418Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1988756Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1989124Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1989437Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1989657Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1989909Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1990138Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1990319Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1990540Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1990863Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1991097Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1991391Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1991632Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1991865Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1992099Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1992318Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1992557Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1992828Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1993077Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1993433Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1993731Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1994154Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1994403Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1994574Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1994815Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1995014Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1995202Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1995429Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1995680Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1995846Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1996019Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1996191Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1996424Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1996630Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1996926Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1997359Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1997541Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1997802Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1998085Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1998364Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1998552Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1998719Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1998926Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1999314Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1999578Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.1999873Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2000102Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2000350Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2000720Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2001007Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2001410Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2001855Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2002138Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2002411Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2002640Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2002835Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2003027Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2003267Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2003559Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2003707Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2004027Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2004343Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2004706Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2004910Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2005302Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2005722Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2006001Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2006255Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2006528Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2006741Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2006964Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2007195Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2007438Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2007627Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2007817Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2008152Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2008420Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2008724Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2008931Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2009180Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2009495Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2009795Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2010146Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2010425Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2010591Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2010821Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2011071Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2011282Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2011469Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2011851Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2012015Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2012267Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2012736Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2012984Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2013269Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2013804Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2014303Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2014510Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2014842Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2015051Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2015325Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2015764Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2015969Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2016198Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2016519Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2016892Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2017256Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2017441Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2017689Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2017866Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2018067Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2018280Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2018693Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2019007Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2019273Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2019545Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2019728Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2020053Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2020385Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2020611Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2020920Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2021143Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2021396Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2021742Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2021924Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2022154Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2022361Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2022581Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2022867Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2023102Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2023334Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2023644Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2023961Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2024202Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2024473Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2024714Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2024942Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2025106Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2025243Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2025431Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2025606Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2025836Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2026033Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2026214Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2026432Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2026683Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2026847Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2027022Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2027199Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2027434Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2027643Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2027933Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2028221Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2028407Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2028667Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2028951Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2029239Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2029541Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2029704Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2029918Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2030158Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2030421Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2030719Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2030941Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2031289Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2031665Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2031947Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2032346Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2032795Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2033074Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2033350Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2033593Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2033784Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2034071Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2034306Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2034594Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2034740Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2034887Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2035170Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2035536Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2035748Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2036129Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2036413Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2036696Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2036946Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2037221Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2037559Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2037778Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2038016Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2038166Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2038346Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2038511Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2038745Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2038951Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2039128Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2039460Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2039722Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2039888Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2040060Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2040238Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2040470Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2040675Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2040967Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2041293Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2041480Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2041746Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2042030Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2042308Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2042498Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2042664Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2042870Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2043120Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2043388Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2043681Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2044004Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2044253Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2044626Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2044913Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2045321Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2045888Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2046178Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2046451Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2046683Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2046880Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2047071Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2047404Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2047705Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2047849Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2047985Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2048267Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2048633Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2048833Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2049219Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2049510Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2049792Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2050042Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2050321Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2050538Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2050755Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2050992Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2051129Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2051312Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2051509Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2051846Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2052103Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2052415Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2052620Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2052819Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2053121Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2053563Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2054222Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2054560Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2054796Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2055044Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2055218Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2055384Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2055559Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2055796Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2056140Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2056434Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2056727Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2056906Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2057166Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2057449Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2057728Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2057922Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2058090Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2058300Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2058540Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2058800Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2059102Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2059326Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2059574Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2059955Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2060239Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2060637Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2061086Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2061363Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2061637Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2061870Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2062183Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2062375Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2062612Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2062898Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2063045Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2063193Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2063483Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2064036Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2064471Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2064880Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2065173Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2065461Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2065714Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2065996Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2066218Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2066445Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2066680Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2066831Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2067015Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2067205Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2067550Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2067812Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2068116Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2068334Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2068580Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2068760Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2068932Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2069165Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2069365Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2069550Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2069769Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2070019Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2070190Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2070477Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2070649Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2070876Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2071087Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2071375Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2071665Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2071852Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2072184Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2072477Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2072764Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2072950Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2073118Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2073332Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2073573Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2073945Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2074256Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2074487Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2074732Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2075103Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2075385Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2075782Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2076233Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2076521Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2076792Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2077040Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2077238Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2077433Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2077675Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2077968Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2078119Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2078380Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2078664Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2079025Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2079233Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2079623Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2079912Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2080197Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2080552Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2080831Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2081049Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2081269Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2081497Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2081655Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2081835Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2082025Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2082371Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2082640Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2082942Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2083150Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2083396Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2083707Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2084102Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2084462Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2084743Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2084913Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2085142Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2085390Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2085599Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2085789Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2086157Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2086323Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2086699Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2087165Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2087413Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2087709Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2088143Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2088541Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2088858Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2089188Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2089394Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2089673Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2089999Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2090199Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2090432Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2090755Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2091135Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2091508Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2091686Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2091925Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2092105Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2092301Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2092522Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2092946Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2093259Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2093527Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2093802Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2094067Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2094397Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2094739Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2095079Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2095391Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2095620Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2095871Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2096100Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2096287Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2096512Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2096829Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2097058Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2097339Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2097575Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2097812Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2098043Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2098257Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2098501Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2098775Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2099012Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2099247Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2099408Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2099550Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2099734Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2099901Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2100138Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2100340Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2100528Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2100754Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2101009Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2101181Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2101351Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2101520Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2101757Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2101961Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2102253Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2102631Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2102812Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2103073Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2103365Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2103645Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2103924Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2104096Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2104423Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2104672Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2104946Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2105244Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2105470Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2105731Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2106100Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2106388Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2106798Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2107396Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2107894Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2108320Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2108559Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2108753Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2108955Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2109189Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2109478Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2109627Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2109768Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2110053Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2110410Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2110620Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2111009Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2111438Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2111724Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2111975Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2112246Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2112467Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2112684Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2112914Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2113150Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2113330Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2113535Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2114005Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2114270Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2114578Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2114796Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2115041Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2115364Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2121594Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2122030Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2122338Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2122514Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2122743Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2123002Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2123221Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2123412Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2123790Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2124104Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2124367Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2124836Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2125086Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2125383Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2126008Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2126408Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2126608Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2126945Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2127154Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2127428Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2127865Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2128076Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2128310Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2128637Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2129014Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2129380Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2129565Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2129814Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2129985Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2130190Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2130405Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2130819Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2131130Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2131396Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2131673Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2131854Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2132181Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2132514Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2132747Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2133056Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2133280Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2133530Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2133993Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2134178Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2134400Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2134616Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2134835Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2135114Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2135351Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2135699Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2135937Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2136157Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2136394Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2136658Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2136903Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2137133Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2137290Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2137439Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2137625Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2137796Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2138035Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2138235Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2138412Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2138633Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2138884Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2139051Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2139227Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2139403Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2139987Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2140207Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2140498Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2140786Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2140968Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2141264Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2141551Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2141990Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2142181Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2142349Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2142554Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2142801Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2143065Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2143365Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2143595Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2144046Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2144419Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2144708Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2145109Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2145553Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2145839Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2146118Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2146355Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2146552Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2146740Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2146972Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2147269Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2147414Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2147554Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2147846Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2148213Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2148415Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2148810Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2149092Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2149367Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2149624Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2149902Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2150233Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2150454Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2150683Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2150824Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2151015Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2151204Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2151538Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2151799Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2152210Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2152415Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2152664Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2152979Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2153271Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2153624Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2154004Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2154184Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2154412Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2154660Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2154869Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2155055Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2155420Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2155584Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2155835Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2156310Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2156557Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2156854Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2157291Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2157682Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2157886Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2158219Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2158572Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2158852Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2159170Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2159367Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2159602Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2159920Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2160410Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2160784Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2160962Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2161201Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2161379Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2161577Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2161790Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2162206Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2162526Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2162791Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2163063Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2163236Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2163557Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2163988Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2164220Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2164540Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2164759Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2165006Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2165241Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2165419Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2165641Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2165859Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2166084Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2166490Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2166767Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2167159Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2167576Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2167955Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2168274Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2168548Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2168940Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2169184Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2169344Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2169485Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2169673Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2169837Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2170068Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2170272Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2170453Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2170677Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2170941Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2171110Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2171282Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2171463Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2171694Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2171905Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2172200Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2172491Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2172680Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2172943Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2173226Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2173502Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2173690Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2174054Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2174375Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2174631Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2174914Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2175369Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2175594Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2175855Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2176223Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2176503Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2176908Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2177460Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2177740Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2178020Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2178249Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2178440Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2178636Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2178868Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2179163Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2179320Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2179460Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2179742Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2180108Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2180308Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2180698Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2180994Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2181278Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2181526Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2181807Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2182020Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2182236Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2182474Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2182615Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2182799Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2183091Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2183422Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2183676Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2184160Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2184378Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2184626Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2184946Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2185359Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2185715Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2186004Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2186173Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2186392Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2186647Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2186855Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2187040Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2187413Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2187579Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2187831Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2188295Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2188540Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2188826Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2189266Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2189669Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2189870Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2190200Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2190408Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2190682Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2191008Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2191211Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2191555Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2191883Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2192258Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2192623Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2192805Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2193044Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2193293Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2193501Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2193715Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2194328Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2194651Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2194918Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2195191Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2195362Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2195695Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2196034Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2196264Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2196573Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2196793Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2197048Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2197275Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2197462Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2197686Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2197901Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2198130Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2198411Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2198645Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2198882Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2199114Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2199333Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2199748Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2200015Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2200257Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2200484Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2200650Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2200789Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2200967Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2201136Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2201472Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2201679Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2201863Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2202078Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2202328Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2202499Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2202665Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2202836Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2203071Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2203285Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2203574Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2204117Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2204352Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2204614Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2204904Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2205182Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2205373Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2205549Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2205758Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2206001Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2206269Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2206570Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2206794Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2207041Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2207422Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2207843Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2208243Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2208690Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2208972Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2209244Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2209583Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2209781Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2209969Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2210205Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2210492Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2210635Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2210779Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2211063Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2211426Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2211643Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2212031Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2212316Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2212595Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2212842Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2213113Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2213331Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2213550Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2213784Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2214158Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2214361Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2214557Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2214903Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2215165Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2215469Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2215693Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2216082Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2216396Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2216692Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2217039Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2217315Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2217483Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2217805Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2218057Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2218267Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2218448Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2218818Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2218983Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2219233Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2219692Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2219949Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2220237Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2220670Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2221061Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2221257Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2221589Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2221804Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2222079Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2222399Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2222599Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2222827Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2223147Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2223522Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2224003Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2224298Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2224538Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2224712Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2224905Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2225123Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2225539Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2225851Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2226226Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2226495Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2226663Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2227189Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2227779Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2228116Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2228434Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2228672Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2228918Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2229151Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2229330Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2229552Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2229758Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2229985Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2230262Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2230496Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2230736Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2230964Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2231180Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2231422Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2231681Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2231918Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2232153Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2232421Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2232562Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2232747Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2232913Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2233144Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2233346Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2233525Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2233739Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2234110Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2234397Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2234569Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2234742Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2234973Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2235176Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2235463Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2235754Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2235933Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2236191Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2236483Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2236757Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2236940Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2237109Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2237312Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2237549Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2237818Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2238118Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2238344Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2238593Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2238957Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2239240Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2239642Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2240083Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2240482Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2240758Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2240987Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2241207Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2241399Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2241632Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2241920Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2242153Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2242301Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2242585Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2242951Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2243150Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2243537Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2243922Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2244208Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2244466Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2244747Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2244955Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2245169Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2245401Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2245540Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2245718Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2245914Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2246253Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2246514Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2246821Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2247030Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2247269Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2247580Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2247871Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2248219Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2248628Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2248793Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2249013Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2249266Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2249469Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2249651Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2250026Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2250297Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2250552Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2251005Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2251257Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2251541Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2251979Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2252368Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2252571Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2252902Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2253111Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2253384Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2253708Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2254008Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2254242Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2254563Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2254942Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2255306Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2255490Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2255729Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2255911Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2256109Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2256331Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2256862Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2257168Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2257434Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2257701Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2257869Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2258199Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2258671Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2258897Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2259210Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2259426Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2259674Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2259905Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2260082Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2260306Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2260530Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2260749Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2261031Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2261269Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2261500Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2261731Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2261950Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2262186Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2262457Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2262701Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2262931Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2263089Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2263233Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2263409Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2263575Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2263812Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2264113Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2264407Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2264631Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2264876Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2265038Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2265206Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2265380Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2265609Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2265816Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2266220Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2266512Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2266686Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2266945Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2267227Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2267500Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2267688Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2267850Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2268065Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2268315Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2268574Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2268867Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2269093Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2269335Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2269700Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2269992Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2270396Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2270833Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2271117Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2271394Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2271624Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2271817Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2272010Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2272321Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2272613Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2272756Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2272894Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2273181Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2273542Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2273740Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2274310Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2274599Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2274876Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2275130Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2275399Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2275612Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2275828Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2276057Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2276202Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2276388Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2276576Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2276907Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2277167Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2277470Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2277677Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2277917Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2278239Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2278527Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2278876Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2279153Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2279317Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2279538Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2279791Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2279999Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2280298Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2280668Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2280828Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2281077Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2281535Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2281780Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2282171Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2282612Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2283003Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2283197Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2283526Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2283730Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2284095Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2284428Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2284627Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2284860Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2285179Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2285553Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2285920Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2286106Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2286346Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2286518Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2286722Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2286936Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2287348Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2287657Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2287920Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2288192Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2288481Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2288804Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2289139Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2289366Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2289670Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2289888Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2290245Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2290478Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2290658Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2290884Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2291091Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2291311Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2291595Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2291829Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2292065Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2292302Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2292512Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2292747Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2293014Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2293254Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2293485Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2293648Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2293784Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2294061Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2294237Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2294467Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2294664Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2294840Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2295060Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2295306Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2295470Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2295645Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2295942Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2296180Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2296390Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2296677Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2296963Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2297148Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2297403Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2297681Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2298066Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2298258Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2298421Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2298623Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2298869Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2299128Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2299424Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2299650Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2299901Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2300267Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2300554Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2300950Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2301390Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2301671Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2301947Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2302182Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2302375Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2302566Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2302795Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2303086Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2303229Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2303369Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2303790Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2304738Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2305029Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2305447Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2305744Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2306034Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2306290Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2306700Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2306922Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2307144Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2307374Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2307513Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2307706Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2307906Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2308243Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2308499Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2308816Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2309029Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2309267Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2309586Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2309882Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2310230Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2310511Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2310685Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2310904Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2311158Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2311367Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2311547Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2311921Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2312084Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2312333Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2312898Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2313144Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2313433Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2314087Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2314513Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2314718Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2315184Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2315404Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2315677Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2316003Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2316210Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2316440Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2316767Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2317145Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2317515Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2317701Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2317934Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2318106Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2318307Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2318522Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2318942Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2319261Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2319526Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2319803Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2319977Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2320300Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2320641Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2320875Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2321296Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2321516Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2321769Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2321998Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2322177Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2322403Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2322613Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2322949Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2323240Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2323473Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2323703Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2324044Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2324259Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2324502Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2324772Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2325017Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2325250Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2325424Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2325563Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2325742Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2325909Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2326141Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2326338Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2326524Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2326745Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2326998Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2327170Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2327338Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2327509Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2327744Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2327950Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2328240Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2328535Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2328843Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2329106Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2329397Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2329674Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2329859Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2330031Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2330238Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2330482Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2330856Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2331156Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2331381Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2331629Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2332001Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2332282Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2332680Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2333132Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2333412Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2333693Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2334020Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2334212Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2334406Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2334637Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2334934Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2335084Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2335226Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2335509Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2335866Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2336074Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2336462Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2336752Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2337155Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2337403Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2337672Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2337890Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2338108Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2338338Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2338480Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2338762Z DEBUG:parse:format 'Given I am on the main page' -> 'Given I am on the main page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2338954Z DEBUG:parse:format 'Given I am on the search page' -> 'Given I am on the search page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2339292Z DEBUG:parse:format 'When I click the {button_text:QuotedString} button' -> 'When I click the (?P<button_text>"(?:[^"\\\\]|\\\\.)*") button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2339550Z DEBUG:parse:format 'Then the page title should be displayed' -> 'Then the page title should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2339850Z DEBUG:parse:format 'Then the artifact creation modal should be open' -> 'Then the artifact creation modal should be open'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2340066Z DEBUG:parse:format 'When I create a new requirement' -> 'When I create a new requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2340309Z DEBUG:parse:format 'Then I see the artifact creation form' -> 'Then I see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2340620Z DEBUG:parse:format 'I set the type to {artifact_type:QuotedString}' -> 'I set the type to (?P<artifact_type>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2340921Z DEBUG:parse:format 'I set the summary to {summary:QuotedString}' -> 'I set the summary to (?P<summary>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2341309Z DEBUG:parse:format 'I set the description to {description:QuotedString}' -> 'I set the description to (?P<description>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2341588Z DEBUG:parse:format 'I set the status to {status:QuotedString}' -> 'I set the status to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2341760Z DEBUG:parse:format 'I save the new artifact' -> 'I save the new artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2341981Z DEBUG:parse:format 'I see the new artifact in the list' -> 'I see the new artifact in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2342227Z DEBUG:parse:format 'I do not see the artifact creation form' -> 'I do not see the artifact creation form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2342438Z DEBUG:parse:format 'I cancel the artifact creation' -> 'I cancel the artifact creation'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2342624Z DEBUG:parse:format 'I remain on the search view' -> 'I remain on the search view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2342995Z DEBUG:parse:format 'I search for artifacts with {search_text:QuotedString}' -> 'I search for artifacts with (?P<search_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2343162Z DEBUG:parse:format 'I see 0 search results' -> 'I see 0 search results'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2343413Z DEBUG:parse:format 'Then I should see a verification field' -> 'Then I should see a verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2343961Z DEBUG:parse:format 'Then the verification field should have default value {default_value}' -> 'Then the verification field should have default value (?P<default_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2344213Z DEBUG:parse:format 'Then I can edit the verification field' -> 'Then I can edit the verification field'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2344502Z DEBUG:parse:format 'When I set the verification field to {value}' -> 'When I set the verification field to (?P<value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2344938Z DEBUG:parse:format 'Then the artifact should be saved with verification method {method}' -> 'Then the artifact should be saved with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2345474Z DEBUG:parse:format 'Given there is an artifact with verification method {method}' -> 'Given there is an artifact with verification method (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2345673Z DEBUG:parse:format 'When I view the artifact tile' -> 'When I view the artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2346004Z DEBUG:parse:format 'Then I should see the verification method displayed' -> 'Then I should see the verification method displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2346214Z DEBUG:parse:format 'Then it should show {method}' -> 'Then it should show (?P<method>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2346483Z DEBUG:parse:format 'When I fill in the summary with {summary}' -> 'When I fill in the summary with (?P<summary>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2346804Z DEBUG:parse:format 'When I fill in the description with {description}' -> 'When I fill in the description with (?P<description>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2347110Z DEBUG:parse:format 'When I click the Create button' -> 'When I click the Create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2347349Z DEBUG:parse:format 'Then I should see a success message' -> 'Then I should see a success message'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2347669Z DEBUG:parse:format 'I set the status filter to {status:QuotedString}' -> 'I set the status filter to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2348042Z DEBUG:parse:format 'I verify the status filter is set to {status:QuotedString}' -> 'I verify the status filter is set to (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2348406Z DEBUG:parse:format 'I see only artifacts with status {status:QuotedString}' -> 'I see only artifacts with status (?P<status>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2348579Z DEBUG:parse:format 'I clear the status filter' -> 'I clear the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2348823Z DEBUG:parse:format 'I verify the status filter is cleared' -> 'I verify the status filter is cleared'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2349001Z DEBUG:parse:format 'I see all artifacts again' -> 'I see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2349200Z DEBUG:parse:format 'When I click the create button' -> 'When I click the create button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2349416Z DEBUG:parse:format 'Then I should see the edit dialog' -> 'Then I should see the edit dialog'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2349833Z DEBUG:parse:format 'Then the submit button should say {expected_text:QuotedString}' -> 'Then the submit button should say (?P<expected_text>"(?:[^"\\\\]|\\\\.)*")'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2350140Z DEBUG:parse:format 'When I click the edit button on the first artifact' -> 'When I click the edit button on the first artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2350412Z DEBUG:parse:format 'Given I filter for type {filter_value}' -> 'Given I filter for type (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2350683Z DEBUG:parse:format 'Given I filter for status {filter_value}' -> 'Given I filter for status (?P<filter_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2350853Z DEBUG:parse:format 'When I refresh the view' -> 'When I refresh the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2351194Z DEBUG:parse:format 'Then I see the type filter is set to {expected_value}' -> 'Then I see the type filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2351530Z DEBUG:parse:format 'Then I see the status filter is set to {expected_value}' -> 'Then I see the status filter is set to (?P<expected_value>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2351756Z DEBUG:parse:format 'Then I only see requirement items' -> 'Then I only see requirement items'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2352070Z DEBUG:parse:format 'Then I only see requirement items with open status' -> 'Then I only see requirement items with open status'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2352290Z DEBUG:parse:format 'Then I see the artifact #{key:S}' -> 'Then I see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2352539Z DEBUG:parse:format 'Then I do not see the artifact #{key:S}' -> 'Then I do not see the artifact #(?P<key>\\S+)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2352773Z DEBUG:parse:format 'I reset the database to {branch}' -> 'I reset the database to (?P<branch>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2353039Z DEBUG:parse:format 'I see artifacts displayed' -> 'I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2353260Z DEBUG:parse:format 'I flag artifact #{artifact_id}' -> 'I flag artifact #(?P<artifact_id>.+?)'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2353473Z DEBUG:parse:format 'the artifact should be flagged' -> 'the artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2353694Z DEBUG:parse:format 'the artifact should be unflagged' -> 'the artifact should be unflagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2354072Z DEBUG:parse:format 'I click the flag filter button in the toolbar' -> 'I click the flag filter button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2354311Z DEBUG:parse:format 'I click the flag filter button again' -> 'I click the flag filter button again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2354545Z DEBUG:parse:format 'I should see only flagged artifacts' -> 'I should see only flagged artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2354776Z DEBUG:parse:format 'the flag filter button should be red' -> 'the flag filter button should be red'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2355108Z DEBUG:parse:format 'I should see all artifacts again' -> 'I should see all artifacts again'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2355355Z DEBUG:parse:format 'the flag filter button should be grey' -> 'the flag filter button should be grey'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2355618Z DEBUG:parse:format 'I check the "Flag this artifact" checkbox' -> 'I check the "Flag this artifact" checkbox'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2355857Z DEBUG:parse:format 'I should see the new artifact created' -> 'I should see the new artifact created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2356092Z DEBUG:parse:format 'the new artifact should be flagged' -> 'the new artifact should be flagged'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2356255Z DEBUG:parse:format 'And I submit the form' -> 'And I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2356396Z DEBUG:parse:format 'I submit the form' -> 'I submit the form'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2356579Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2356745Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2356987Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2357190Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2357367Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2357585Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2357839Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2358003Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2358171Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2358346Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2358580Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2358790Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2359084Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2359377Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2359556Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2359813Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2360107Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2360385Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2360575Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2360858Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2361062Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2361303Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2361573Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2361866Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2362092Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2362346Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2362787Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2363080Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2363483Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2364020Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2364307Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2364584Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2364819Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2365015Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2365209Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2365438Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2365728Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2365878Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2366092Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2366594Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2367068Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2367287Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2367679Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2367971Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2368249Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2368498Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2368774Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2368988Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2369207Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2369588Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2369729Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2369905Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2370074Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2370304Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2370502Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2370685Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2370904Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2371257Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2371435Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2371604Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2371779Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2372005Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2372214Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2372506Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2372798Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2372988Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2373253Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2373538Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2373821Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2374121Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2374287Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2374499Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2374741Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2375012Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2375315Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2375539Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2375785Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2376155Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2376433Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2376829Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2377278Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2377685Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2377957Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2378190Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2378380Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2378570Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2378804Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2379198Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2379346Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2379488Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2379770Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2379948Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2380119Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2380348Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2380544Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2380722Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2380948Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2381200Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2381363Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2381537Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2381707Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2381936Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2382148Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2382433Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2382718Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2382908Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2383166Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2383445Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2383725Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2384008Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2384175Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2384384Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2384626Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2384894Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2385358Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2385586Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2385833Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2386213Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2386497Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2386898Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2387459Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2387737Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2388009Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2388242Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2388432Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2388621Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2388854Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2389150Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2389298Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2389443Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2389723Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2390083Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2390264Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2390426Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2390656Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2390863Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2391045Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2391264Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2391511Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2391685Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2391853Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2392023Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2392266Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2392475Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2392766Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2393143Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2393322Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2393579Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2393958Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2394238Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2394420Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2394587Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2394911Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2395153Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2395423Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2395717Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2395939Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2396192Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2396557Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2396848Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2397255Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2397694Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2397972Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2398248Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2398478Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2398670Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2398871Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2399104Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2399390Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2399538Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2399674Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2399957Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2400317Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2400521Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2400915Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2401318Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2401597Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2401847Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2402123Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2402335Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2402551Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2402865Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2403008Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2403182Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2403348Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2403587Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2403782Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2404054Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2404280Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2404529Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2404698Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2404874Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2405045Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2405274Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2405486Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2405771Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2406056Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2406240Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2406494Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2406787Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2407066Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2407249Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2407411Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2407621Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2407860Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2408123Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2408421Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2408766Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2409010Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2409381Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2409663Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2410057Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2410500Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2410879Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2411160Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2411393Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2411582Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2411776Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2412011Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2412297Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2412437Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2412580Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2412872Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2413228Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2413427Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2413608Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2413772Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2414095Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2414298Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2414479Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2414701Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2414955Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2415117Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2415286Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2415461Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2415689Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2415894Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2416185Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2416473Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2416765Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2417026Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2417309Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2417587Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2417775Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2417942Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2418148Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2418497Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2418768Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2419088Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2419461Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2419870Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2420496Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2420947Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2421362Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2421812Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2422099Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2422373Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2422602Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2422797Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2422988Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2423224Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2423517Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2423668Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2423806Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2424345Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2424712Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2424930Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2425315Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2425506Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2425821Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2426056Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2426257Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2426436Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2426656Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2426910Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2427075Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2427242Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2427523Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2427758Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2427965Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2428253Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2428540Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2428723Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2428983Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2429262Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2429549Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2429737Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2429906Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2430114Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2430360Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2430625Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2430916Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2431145Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2431401Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2431768Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2432057Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2432455Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2432898Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2433181Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2433461Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2433774Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2434154Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2434348Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2434579Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2434864Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2435016Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2435156Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2435559Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2435928Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2436131Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2436524Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2436814Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2437092Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2437342Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2437627Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2437844Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2438061Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2438296Z DEBUG:parse:format 'the page should load successfully' -> 'the page should load successfully'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2438436Z DEBUG:parse:format 'Given I go to home' -> 'Given I go to home'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2438614Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2438783Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2439013Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2439211Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2439399Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2439621Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2439868Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2440039Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2440206Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2440375Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2440609Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2440815Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2441099Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2441432Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2441759Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2442018Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2442303Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2442586Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2442772Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2442937Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2443149Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2443462Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2443730Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2444315Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2444547Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2444795Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2445167Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2445448Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2445857Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2446312Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2446599Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2446872Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2447108Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2447300Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2447490Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2447731Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2448022Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2448165Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2448308Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2448588Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2448945Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2449154Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2449543Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2450007Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2450295Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2450547Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2450823Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2451041Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2451256Z DEBUG:parse:format 'Given I see artifacts displayed' -> 'Given I see artifacts displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2451432Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2451704Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2451940Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2452138Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2452317Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2452533Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2452780Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2452948Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2453116Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2453287Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2453523Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2453742Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2454234Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2454526Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2454709Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2454967Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2455249Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2455533Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2455721Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2455890Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2456101Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2456346Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2456611Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2456914Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2457136Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2457390Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2457767Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2458181Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2458579Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2459026Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2459303Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2459575Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2459910Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2460105Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2460296Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2460532Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2460819Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2460961Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2461103Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2461384Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2461738Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2461950Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2462336Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2462618Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2462801Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2462964Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2463197Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2463400Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2463578Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2463802Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2464161Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2464327Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2464495Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2464665Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2464899Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2465104Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2465390Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2465688Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2465996Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2466252Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2466543Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2466820Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2467002Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2467172Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2467378Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2467724Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2468005Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2468299Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2468521Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2468775Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2469137Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2469417Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2469824Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2470268Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2470544Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2470822Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2471054Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2471244Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2471443Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2471677Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2471965Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2472114Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2472253Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2472533Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2472897Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2473099Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2473488Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2473962Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2474241Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2474491Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2474677Z DEBUG:parse:format 'I am on the artifacts page' -> 'I am on the artifacts page'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2474842Z DEBUG:parse:format 'I am logged in as a user' -> 'I am logged in as a user'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2475071Z DEBUG:parse:format 'I click the "{button_text}" button' -> 'I click the "(?P<button_text>.+?)" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2475275Z DEBUG:parse:format 'I fill in the artifact details' -> 'I fill in the artifact details'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2475450Z DEBUG:parse:format 'I click "{button_text}"' -> 'I click "(?P<button_text>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2475781Z DEBUG:parse:format 'a new artifact should be created' -> 'a new artifact should be created'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2476038Z DEBUG:parse:format 'it should appear in the artifacts list' -> 'it should appear in the artifacts list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2476202Z DEBUG:parse:format 'the modal should close' -> 'the modal should close'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2476370Z DEBUG:parse:format 'I am viewing an artifact' -> 'I am viewing an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2476541Z DEBUG:parse:format 'I click the "Edit" button' -> 'I click the "Edit" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2476779Z DEBUG:parse:format 'I modify the artifact description' -> 'I modify the artifact description'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2476986Z DEBUG:parse:format 'the artifact should be updated' -> 'the artifact should be updated'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2477271Z DEBUG:parse:format 'the changes should be reflected immediately' -> 'the changes should be reflected immediately'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2477566Z DEBUG:parse:format 'the current filter state should be preserved' -> 'the current filter state should be preserved'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2477750Z DEBUG:parse:format 'I am viewing all artifacts' -> 'I am viewing all artifacts'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2478008Z DEBUG:parse:format 'I select "{value}" from the type filter' -> 'I select "(?P<value>.+?)" from the type filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2478296Z DEBUG:parse:format 'only {type} artifacts should be displayed' -> 'only (?P<type>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2478572Z DEBUG:parse:format 'the filter dropdown should show "{value}"' -> 'the filter dropdown should show "(?P<value>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2478754Z DEBUG:parse:format 'I click the "Delete" button' -> 'I click the "Delete" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2478923Z DEBUG:parse:format 'I confirm the deletion' -> 'I confirm the deletion'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2479130Z DEBUG:parse:format 'the artifact should be removed' -> 'the artifact should be removed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2479371Z DEBUG:parse:format 'it should no longer appear in the list' -> 'it should no longer appear in the list'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2479649Z DEBUG:parse:format 'I select "{value}" from the status filter' -> 'I select "(?P<value>.+?)" from the status filter'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2479945Z DEBUG:parse:format 'only {status} artifacts should be displayed' -> 'only (?P<status>.+?) artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2480165Z DEBUG:parse:format 'I enter "{text}" in the search box' -> 'I enter "(?P<text>.+?)" in the search box'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2480416Z DEBUG:parse:format 'the results should filter in real-time' -> 'the results should filter in real-time'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2480783Z DEBUG:parse:format 'only artifacts containing "{text}" should be displayed' -> 'only artifacts containing "(?P<text>.+?)" should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2481065Z DEBUG:parse:format 'I click on a category link in an artifact tile' -> 'I click on a category link in an artifact tile'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2481466Z DEBUG:parse:format 'the view should filter to show only artifacts with that category' -> 'the view should filter to show only artifacts with that category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2482023Z DEBUG:parse:format 'the category filter input should be updated with the selected category' -> 'the category filter input should be updated with the selected category'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2482304Z DEBUG:parse:format 'I have filtered artifacts by type "{type}"' -> 'I have filtered artifacts by type "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2482583Z DEBUG:parse:format 'the type filter should still show "{type}"' -> 'the type filter should still show "(?P<type>.+?)"'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2482813Z DEBUG:parse:format 'I have applied filters to the view' -> 'I have applied filters to the view'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2483002Z DEBUG:parse:format 'I click the "Refresh" button' -> 'I click the "Refresh" button'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2483193Z DEBUG:parse:format 'all filters should be reset' -> 'all filters should be reset'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2483420Z DEBUG:parse:format 'all artifacts should be displayed' -> 'all artifacts should be displayed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2483787Z DEBUG:parse:format 'filter dropdowns should show default values' -> 'filter dropdowns should show default values'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2484035Z DEBUG:parse:format 'I edit an artifact' -> 'I edit an artifact'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2484176Z DEBUG:parse:format 'I save the changes' -> 'I save the changes'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2484459Z DEBUG:parse:format 'Then I see version information in the header' -> 'Then I see version information in the header'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2484820Z DEBUG:parse:format 'Then I do not see version information in the statistics line' -> 'Then I do not see version information in the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2485020Z DEBUG:parse:format 'Then I see the statistics line' -> 'Then I see the statistics line'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2485405Z DEBUG:parse:format 'Then the statistics line does not contain version information' -> 'Then the statistics line does not contain version information'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2485698Z DEBUG:parse:format 'When I click the refresh button in the toolbar' -> 'When I click the refresh button in the toolbar'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2485982Z DEBUG:parse:format 'Then the artifacts list should be refreshed' -> 'Then the artifacts list should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2486231Z DEBUG:parse:format 'Then the artifacts should be refreshed' -> 'Then the artifacts should be refreshed'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2486511Z DEBUG:parse:format 'Then I should see the latest artifacts data' -> 'Then I should see the latest artifacts data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2486726Z DEBUG:parse:format 'Then I should see the latest data' -> 'Then I should see the latest data'
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2486829Z DEBUG:support.hooks:Starting BDD tests...
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2486995Z DEBUG:support.hooks:Testing against: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2487159Z DEBUG:support.hooks:Base URL set in world: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2487348Z DEBUG:support.hooks:Initializing Chrome driver for entire test session...
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2487968Z DEBUG:selenium.webdriver.common.selenium_manager:Selenium Manager binary found at: /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/selenium/webdriver/common/linux/selenium-manager
smoke-tests	Run smoke tests	2025-08-19T18:14:01.2488791Z DEBUG:selenium.webdriver.common.selenium_manager:Executing process: /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/selenium/webdriver/common/linux/selenium-manager --browser chrome --debug --language-binding python --output json
smoke-tests	Run smoke tests	2025-08-19T18:14:01.5361671Z DEBUG:selenium.webdriver.common.selenium_manager:Sending stats to Plausible: Props { browser: "chrome", browser_version: "", os: "linux", arch: "x86_64", lang: "python", selenium_version: "4.35" }
smoke-tests	Run smoke tests	2025-08-19T18:14:01.5363726Z DEBUG:selenium.webdriver.common.selenium_manager:Found chromedriver 139.0.7258.66 in PATH: /usr/bin/chromedriver
smoke-tests	Run smoke tests	2025-08-19T18:14:01.5366266Z DEBUG:selenium.webdriver.common.selenium_manager:chrome detected at /usr/bin/google-chrome
smoke-tests	Run smoke tests	2025-08-19T18:14:01.5367653Z DEBUG:selenium.webdriver.common.selenium_manager:Running command: /usr/bin/google-chrome --version
smoke-tests	Run smoke tests	2025-08-19T18:14:01.5368984Z DEBUG:selenium.webdriver.common.selenium_manager:Output: "Google Chrome 139.0.7258.127 "
smoke-tests	Run smoke tests	2025-08-19T18:14:01.5369771Z DEBUG:selenium.webdriver.common.selenium_manager:Detected browser: chrome 139.0.7258.127
smoke-tests	Run smoke tests	2025-08-19T18:14:01.5371225Z DEBUG:selenium.webdriver.common.selenium_manager:Discovering versions from https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json
smoke-tests	Run smoke tests	2025-08-19T18:14:01.5372866Z DEBUG:selenium.webdriver.common.selenium_manager:Required driver: chromedriver 139.0.7258.68
smoke-tests	Run smoke tests	2025-08-19T18:14:01.5375083Z DEBUG:selenium.webdriver.common.selenium_manager:Driver path: /usr/bin/chromedriver
smoke-tests	Run smoke tests	2025-08-19T18:14:01.5376098Z DEBUG:selenium.webdriver.common.selenium_manager:Browser path: /usr/bin/google-chrome
smoke-tests	Run smoke tests	2025-08-19T18:14:01.5380815Z DEBUG:selenium.webdriver.common.service:Started executable: `/usr/bin/chromedriver` in a child process with pid: 3938 using 0 to output -3
smoke-tests	Run smoke tests	2025-08-19T18:14:02.3544965Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:51285/session {'capabilities': {'firstMatch': [{}], 'alwaysMatch': {'browserName': 'chrome', 'pageLoadStrategy': <PageLoadStrategy.normal: 'normal'>, 'browserVersion': None, 'goog:chromeOptions': {'extensions': [], 'binary': '/usr/bin/google-chrome', 'args': ['--headless', '--no-sandbox', '--disable-dev-shm-usage', '--disable-gpu', '--window-size=1920,1080']}}}}
smoke-tests	Run smoke tests	2025-08-19T18:14:02.3549027Z DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): localhost:51285
smoke-tests	Run smoke tests	2025-08-19T18:14:02.6691974Z DEBUG:urllib3.connectionpool:http://localhost:51285 "POST /session HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:02.6703749Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"139.0.7258.127","chrome":{"chromedriverVersion":"139.0.7258.66 (a62d329947691f76c376a873eae39f56381103c8-refs/branch-heads/7258@{#2226})","userDataDir":"/tmp/.org.chromium.Chromium.lS7I91"},"fedcm:accounts":true,"goog:chromeOptions":{"debuggerAddress":"localhost:33977"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"linux","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true},"sessionId":"4d0596f28b177abfbc4a269f9f2a8b53"}} | headers=HTTPHeaderDict({'Content-Length': '849', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:02.6725357Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:02.6726648Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:51285/session/4d0596f28b177abfbc4a269f9f2a8b53/timeouts {'implicit': 10000}
smoke-tests	Run smoke tests	2025-08-19T18:14:02.6738168Z DEBUG:urllib3.connectionpool:http://localhost:51285 "POST /session/4d0596f28b177abfbc4a269f9f2a8b53/timeouts HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:02.6743011Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:02.6756468Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:02.6757303Z DEBUG:support.hooks:Chrome driver initialized successfully for entire test session
smoke-tests	Run smoke tests	2025-08-19T18:14:02.6757956Z DEBUG:hooks:Starting BDD tests...
smoke-tests	Run smoke tests	2025-08-19T18:14:02.6758420Z DEBUG:hooks:Testing against: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:02.6758993Z DEBUG:hooks:Base URL set in world: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:02.6759643Z DEBUG:hooks:Initializing Chrome driver for entire test session...
smoke-tests	Run smoke tests	2025-08-19T18:14:02.6762505Z DEBUG:selenium.webdriver.common.selenium_manager:Selenium Manager binary found at: /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/selenium/webdriver/common/linux/selenium-manager
smoke-tests	Run smoke tests	2025-08-19T18:14:02.6765610Z DEBUG:selenium.webdriver.common.selenium_manager:Executing process: /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/selenium/webdriver/common/linux/selenium-manager --browser chrome --debug --language-binding python --output json
smoke-tests	Run smoke tests	2025-08-19T18:14:02.7305601Z DEBUG:selenium.webdriver.common.selenium_manager:Found chromedriver 139.0.7258.66 in PATH: /usr/bin/chromedriver
smoke-tests	Run smoke tests	2025-08-19T18:14:02.7310713Z DEBUG:selenium.webdriver.common.selenium_manager:chrome detected at /usr/bin/google-chrome
smoke-tests	Run smoke tests	2025-08-19T18:14:02.7311998Z DEBUG:selenium.webdriver.common.selenium_manager:Running command: /usr/bin/google-chrome --version
smoke-tests	Run smoke tests	2025-08-19T18:14:02.7313096Z DEBUG:selenium.webdriver.common.selenium_manager:Output: "Google Chrome 139.0.7258.127 "
smoke-tests	Run smoke tests	2025-08-19T18:14:02.7323304Z DEBUG:selenium.webdriver.common.selenium_manager:Detected browser: chrome 139.0.7258.127
smoke-tests	Run smoke tests	2025-08-19T18:14:02.7324991Z DEBUG:selenium.webdriver.common.selenium_manager:Required driver: chromedriver 139.0.7258.68
smoke-tests	Run smoke tests	2025-08-19T18:14:02.7326357Z DEBUG:selenium.webdriver.common.selenium_manager:Driver path: /usr/bin/chromedriver
smoke-tests	Run smoke tests	2025-08-19T18:14:02.7328207Z DEBUG:selenium.webdriver.common.selenium_manager:Browser path: /usr/bin/google-chrome
smoke-tests	Run smoke tests	2025-08-19T18:14:02.7329573Z DEBUG:selenium.webdriver.common.service:Started executable: `/usr/bin/chromedriver` in a child process with pid: 4058 using 0 to output -3
smoke-tests	Run smoke tests	2025-08-19T18:14:02.7435607Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session {'capabilities': {'firstMatch': [{}], 'alwaysMatch': {'browserName': 'chrome', 'pageLoadStrategy': <PageLoadStrategy.normal: 'normal'>, 'browserVersion': None, 'goog:chromeOptions': {'extensions': [], 'binary': '/usr/bin/google-chrome', 'args': ['--headless', '--no-sandbox', '--disable-dev-shm-usage', '--disable-gpu', '--window-size=1920,1080']}}}}
smoke-tests	Run smoke tests	2025-08-19T18:14:02.7438485Z DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): localhost:47685
smoke-tests	Run smoke tests	2025-08-19T18:14:03.1373654Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.1386913Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"139.0.7258.127","chrome":{"chromedriverVersion":"139.0.7258.66 (a62d329947691f76c376a873eae39f56381103c8-refs/branch-heads/7258@{#2226})","userDataDir":"/tmp/.org.chromium.Chromium.Gx1ugU"},"fedcm:accounts":true,"goog:chromeOptions":{"debuggerAddress":"localhost:46643"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"linux","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true},"sessionId":"6e85a80ed81e5e0d058604bc99eea863"}} | headers=HTTPHeaderDict({'Content-Length': '849', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.1407210Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.1408540Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/timeouts {'implicit': 10000}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.1410136Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/timeouts HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.1412120Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.1413786Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.1415106Z DEBUG:hooks:Chrome driver initialized successfully for entire test session
smoke-tests	Run smoke tests	2025-08-19T18:14:03.1419097Z DEBUG:support.hooks:Setting up scenario: Placeholder - Dropdown tests temporarily disabled
smoke-tests	Run smoke tests	2025-08-19T18:14:03.1420919Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.2989212Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.2991677Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.2997659Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.3003690Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:03.3004757Z DEBUG:hooks:Setting up scenario: Placeholder - Dropdown tests temporarily disabled
smoke-tests	Run smoke tests	2025-08-19T18:14:03.3006214Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.3617359Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.3646148Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.3647874Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.3648581Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:03.3649808Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.4151377Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.4163590Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.4190428Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.4204572Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.5251326Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.5253805Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.5256238Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.5257892Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6133011Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6139276Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.21A126B98DC390ACB607EC1572FC18DC.e.42"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6143149Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6144649Z DEBUG:controls.base:Looking for element with XPath: //h1[contains(text(), 'iflow')]
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6146241Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//h1[contains(text(), 'iflow')]"}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6254223Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6263180Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.21A126B98DC390ACB607EC1572FC18DC.e.47"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6265627Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6267764Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.21A126B98DC390ACB607EC1572FC18DC.e.47/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6375390Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.21A126B98DC390ACB607EC1572FC18DC.e.47/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6380601Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"iflow - Git-based artifact management system"} | headers=HTTPHeaderDict({'Content-Length': '56', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6388338Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6389227Z DEBUG:controls.base:Found element: iflow - Git-based artifact management system...
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6390587Z DEBUG:support.hooks:Completed scenario: Placeholder - Dropdown tests temporarily disabled in 0.34s
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6391987Z DEBUG:hooks:Completed scenario: Placeholder - Dropdown tests temporarily disabled in 0.34s
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6392935Z DEBUG:support.hooks:Setting up scenario: Flag and unflag an artifact
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6394518Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6850572Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6856303Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6857993Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6858782Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6859456Z DEBUG:hooks:Setting up scenario: Flag and unflag an artifact
smoke-tests	Run smoke tests	2025-08-19T18:14:03.6860769Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.7483614Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.7486329Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.7488311Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.7489310Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:03.7508297Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8095593Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8113601Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8117621Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8118641Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8326318Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8328808Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8331268Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8335305Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8503313Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8506856Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.88"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8522675Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8524771Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8674209Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8677460Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.93"}]} | headers=HTTPHeaderDict({'Content-Length': '128', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8680197Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8682557Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8734929Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8738646Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.93"}]} | headers=HTTPHeaderDict({'Content-Length': '128', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8741099Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8743106Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.93/element {'using': 'css selector', 'value': '.artifact-id'}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8825358Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.93/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8830304Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.94"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8832719Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8834617Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.94/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8890977Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.94/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8896729Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"00001"} | headers=HTTPHeaderDict({'Content-Length': '17', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8898406Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8900576Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.93/element {'using': 'css selector', 'value': '.artifact-actions button:first-child'}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8974743Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.93/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8979211Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.89"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8981616Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.8983663Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.89/element {'using': 'css selector', 'value': 'ion-icon'}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.9062098Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.89/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.9066623Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.95"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.9069027Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.9071659Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.95'}, 'name']}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.9118726Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.9121831Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"flag-outline"} | headers=HTTPHeaderDict({'Content-Length': '24', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.9124191Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.9125963Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.89/click {}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.9659766Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.89/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.9667498Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.9669558Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:03.9671070Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:03.9847227Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:03.9848949Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.98"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:03.9850323Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:04.4850097Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:04.4904582Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:04.4906946Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.98"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:04.4908317Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:04.9909724Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:04.9964947Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:04.9968221Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.98"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:04.9969572Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:05.4972234Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:05.5027867Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:05.5030334Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.98"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:05.5032061Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:06.0034279Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:06.0089206Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:06.0092779Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.98"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:06.0095418Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0100395Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.artifact-card:first-child .artifact-actions button:first-child'}
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0184004Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0187764Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.97"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0190136Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0192182Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.97/element {'using': 'css selector', 'value': 'ion-icon'}
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0251678Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.97/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0256069Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.99"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0258403Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0261048Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.99'}, 'name']}
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0297090Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0299329Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"flag"} | headers=HTTPHeaderDict({'Content-Length': '16', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0301978Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0304885Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0354550Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0358334Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.101"}]} | headers=HTTPHeaderDict({'Content-Length': '129', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0360754Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0362844Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.101/element {'using': 'css selector', 'value': '.artifact-id'}
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0413055Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.101/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0417325Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.102"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0420508Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0423664Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.102/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0477797Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.102/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0480821Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"00001"} | headers=HTTPHeaderDict({'Content-Length': '17', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0482666Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0484975Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.101/element {'using': 'css selector', 'value': '.artifact-actions button:first-child'}
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0535220Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.101/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0539052Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.97"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0541395Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0543355Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.97/element {'using': 'css selector', 'value': 'ion-icon'}
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0597370Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.97/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0602132Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.99"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0604675Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0607269Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.99'}, 'name']}
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0641903Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0644900Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"flag"} | headers=HTTPHeaderDict({'Content-Length': '16', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0648567Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:07.0650296Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.97/click {}
smoke-tests	Run smoke tests	2025-08-19T18:14:07.1056042Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.97/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:07.1058745Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:07.1060662Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:07.1062326Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:07.1114287Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:07.1124197Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.98"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:07.1126667Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:07.6122810Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:07.6178236Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:07.6184352Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.98"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:07.6185741Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:08.1183618Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:08.1237792Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:08.1240652Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.98"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:08.1242092Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:08.6244225Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:08.6296623Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:08.6300095Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.98"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:08.6301516Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:09.1302702Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:09.1357524Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:09.1360550Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.98"}} | headers=HTTPHeaderDict({'Content-Length': '126', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:09.1362331Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1366977Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.artifact-card:first-child .artifact-actions button:first-child'}
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1421668Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1425908Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.103"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1428459Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1431715Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.103/element {'using': 'css selector', 'value': 'ion-icon'}
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1480459Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.103/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1484452Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.104"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1486951Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1489605Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.104'}, 'name']}
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1529237Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1535106Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"flag-outline"} | headers=HTTPHeaderDict({'Content-Length': '24', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1537151Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1539736Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.03D12E52DD237DCA4FFA50D411D80FC6.e.104'}, 'name']}
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1570813Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1574381Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"flag-outline"} | headers=HTTPHeaderDict({'Content-Length': '24', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1576167Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1577688Z DEBUG:support.hooks:Completed scenario: Flag and unflag an artifact in 6.47s
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1578573Z DEBUG:hooks:Completed scenario: Flag and unflag an artifact in 6.47s
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1579333Z DEBUG:support.hooks:Setting up scenario: Filter by flagged artifacts
smoke-tests	Run smoke tests	2025-08-19T18:14:10.1580614Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:10.2111156Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:10.2125838Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:10.2128682Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:10.2137457Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:10.2141373Z DEBUG:hooks:Setting up scenario: Filter by flagged artifacts
smoke-tests	Run smoke tests	2025-08-19T18:14:10.2143146Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:10.2809552Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:10.2811857Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:10.2813723Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:10.2814973Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:10.2852579Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:10.3487392Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:10.3503021Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:10.3513662Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:10.3516063Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {}
smoke-tests	Run smoke tests	2025-08-19T18:14:10.3665860Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:10.3673330Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:10.3682719Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:10.3684640Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:14:10.3837794Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:10.3841778Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.147"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:10.3846071Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:10.3847657Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:14:10.3958285Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:10.3963702Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.151"}]} | headers=HTTPHeaderDict({'Content-Length': '129', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:10.3966122Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:10.3968036Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.151/element {'using': 'css selector', 'value': '.artifact-id'}
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4034774Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.151/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4046762Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.152"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4050127Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4051769Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.152/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4121170Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.152/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4125290Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"00001"} | headers=HTTPHeaderDict({'Content-Length': '17', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4126987Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4129192Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.151/element {'using': 'css selector', 'value': '.artifact-actions button:first-child'}
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4178860Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.151/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4183381Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.146"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4185986Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4188021Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.146/element {'using': 'css selector', 'value': 'ion-icon'}
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4258438Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.146/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4263767Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.153"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4266346Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4269692Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.153'}, 'name']}
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4303681Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4306993Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"flag-outline"} | headers=HTTPHeaderDict({'Content-Length': '24', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4308721Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4310484Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.146/click {}
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4794804Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.146/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4806429Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4814848Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4816419Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4946823Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4949080Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.156"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:10.4951256Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:10.9951780Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:11.0005781Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:11.0008052Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.156"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:11.0009576Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:11.5011586Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:11.5067174Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:11.5069283Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.156"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:11.5070823Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:12.0073196Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:12.0133389Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:12.0135792Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.156"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:12.0137295Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5139233Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5192099Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5199957Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.156"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5202547Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5204167Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5257337Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5262321Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.157"}]} | headers=HTTPHeaderDict({'Content-Length': '129', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5265297Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5267388Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.157/element {'using': 'css selector', 'value': '.artifact-id'}
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5316049Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.157/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5319836Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.158"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5323650Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5325560Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.158/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5377276Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.158/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5380336Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"00001"} | headers=HTTPHeaderDict({'Content-Length': '17', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5384060Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5386227Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.157/element {'using': 'css selector', 'value': '.artifact-actions button:first-child'}
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5437897Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.157/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5442917Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.155"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5445409Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5447475Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.155/element {'using': 'css selector', 'value': 'ion-icon'}
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5489798Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.155/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5493541Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.159"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5496046Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5498521Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.159'}, 'name']}
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5549426Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5552490Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"flag"} | headers=HTTPHeaderDict({'Content-Length': '16', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5554750Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5556834Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.155/click {}
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5949027Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.155/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5952002Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5954314Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:12.5956783Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:12.6044423Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:12.6073516Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.156"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:12.6076703Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:13.1074718Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:13.1185767Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:13.1192873Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.156"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:13.1196533Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:13.6181724Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:13.6239299Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:13.6242069Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.156"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:13.6244151Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:14.1245729Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:14.1299992Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:14.1302657Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.156"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:14.1304221Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:14.6306355Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.modal-content'}
smoke-tests	Run smoke tests	2025-08-19T18:14:14.6359479Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:14.6364796Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.156"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:14.6367877Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:14.6369338Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '[id="flagFilter"]'}
smoke-tests	Run smoke tests	2025-08-19T18:14:14.6444655Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:14.6448415Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.162"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:14.6450804Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:14.6452608Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.162/click {}
smoke-tests	Run smoke tests	2025-08-19T18:14:14.6891068Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.162/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:14.6900027Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:14.6902283Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:15.6902679Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7057691Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7060757Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7062933Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7064836Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '[id="flagFilter"]'}
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7116038Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7119720Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.162"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7122106Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7124153Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.162/css/background-color {}
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7199275Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.162/css/background-color HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7203022Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"rgba(220, 53, 69, 1)"} | headers=HTTPHeaderDict({'Content-Length': '32', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7204943Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7206473Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '[id="flagFilter"]'}
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7257327Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7261009Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.162"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7263426Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7265383Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.162/click {}
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7672545Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.162/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7679760Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:25.7682586Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:26.7683267Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4725558Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4726826Z [36m@smoke
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4731621Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.164"}]} | headers=HTTPHeaderDict({'Content-Length': '129', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4734632Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4736838Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.164/element {'using': 'css selector', 'value': '.artifact-actions button:first-child'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4739983Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.164/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4743224Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.163"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4786960Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4788600Z [39m[1m[37mFeature[22m[39m[26m: [1m[37mDropdown Selection in Artifact Editor (Temporarily Disabled)[22m[39m[26m  # [1m[30mtests/features/test_dropdown_selection.feature[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4791203Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.163/element {'using': 'css selector', 'value': 'ion-icon'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4808090Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.163/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4816664Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.165"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4818853Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4821361Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.165'}, 'name']}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4848834Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4850942Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"flag-outline"} | headers=HTTPHeaderDict({'Content-Length': '24', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4852951Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4870678Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.165'}, 'name']}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4875314Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4877355Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"flag-outline"} | headers=HTTPHeaderDict({'Content-Length': '24', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4879172Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4880583Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '[id="flagFilter"]'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4882306Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4884964Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.162"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4887202Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4888937Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.162/css/background-color {}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4891690Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.FD4DA3C2E3FE7CDF57347C3425ADDE12.e.162/css/background-color HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4898777Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"rgba(108, 117, 125, 1)"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4900486Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4901291Z DEBUG:support.hooks:Completed scenario: Filter by flagged artifacts in 16.59s
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4902136Z DEBUG:hooks:Completed scenario: Filter by flagged artifacts in 16.59s
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4902881Z DEBUG:support.hooks:Setting up scenario: Create artifact with flag
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4904545Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4906111Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4907847Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4909348Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4910070Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4910773Z DEBUG:hooks:Setting up scenario: Create artifact with flag
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4912303Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4915693Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4918242Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4919820Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4920491Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4921698Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4923501Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4925554Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4927150Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4928221Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4929499Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4931405Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4933040Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4934857Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4936646Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4939151Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.1CCAA0FF712E5DA8BC3AF3EF1CA8BF76.e.207"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4941357Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4948064Z DEBUG:controls.base:Looking for element with XPath: //button[contains(text(), 'Create')]
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4949698Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//button[contains(text(), 'Create')]"}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4951336Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4954226Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.1CCAA0FF712E5DA8BC3AF3EF1CA8BF76.e.209"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4956526Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4958205Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.1CCAA0FF712E5DA8BC3AF3EF1CA8BF76.e.209/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4960812Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.1CCAA0FF712E5DA8BC3AF3EF1CA8BF76.e.209/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4963112Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"Create"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4965144Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4965766Z DEBUG:controls.base:Found element: Create...
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4967155Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.1CCAA0FF712E5DA8BC3AF3EF1CA8BF76.e.209/click {}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4969875Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.1CCAA0FF712E5DA8BC3AF3EF1CA8BF76.e.209/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4972328Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4974085Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4975513Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '[id="artifactModal"]'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4977198Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4979698Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.1CCAA0FF712E5DA8BC3AF3EF1CA8BF76.e.215"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4981998Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4984627Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.1CCAA0FF712E5DA8BC3AF3EF1CA8BF76.e.215'}]}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4988143Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4990028Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4992554Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4993380Z DEBUG:support.hooks:Completed scenario: Create artifact with flag in 0.25s
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4994445Z DEBUG:hooks:Completed scenario: Create artifact with flag in 0.25s
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4996351Z DEBUG:support.hooks:Setting up scenario: Filter Artifacts by Status
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4997730Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.4999340Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5001126Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5002883Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5003555Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5041856Z DEBUG:hooks:Setting up scenario: Filter Artifacts by Status
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5043157Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5044951Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5046809Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5048658Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5049342Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5050503Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5052086Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5074295Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5075996Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5077142Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5078539Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5108821Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5110575Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5112079Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5119541Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5122302Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.54EC091730B13F26DF4F8071584DCE0E.e.257"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5124780Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5125713Z DEBUG:status_filtering_steps:Using JavaScript accessibility function to set status filter to 'open'...
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5127427Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': "return setDropdownValue('statusFilter', 'open');", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5129219Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5166193Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5168090Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5169016Z DEBUG:status_filtering_steps:Successfully set status filter to 'open' using JavaScript accessibility function
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5170753Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': "return getDropdownValue('statusFilter');", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5172586Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5174703Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"open"} | headers=HTTPHeaderDict({'Content-Length': '16', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5176632Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5177397Z DEBUG:status_filtering_steps:Verified status filter is now 'open'
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5195069Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5197303Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5202045Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.54EC091730B13F26DF4F8071584DCE0E.e.263"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5204305Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5205624Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5207223Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5209629Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.54EC091730B13F26DF4F8071584DCE0E.e.263"}]} | headers=HTTPHeaderDict({'Content-Length': '129', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5211766Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5213706Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.54EC091730B13F26DF4F8071584DCE0E.e.263/element {'using': 'css selector', 'value': '.status-indicator, .artifact-status'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5219607Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.54EC091730B13F26DF4F8071584DCE0E.e.263/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5222667Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.54EC091730B13F26DF4F8071584DCE0E.e.264"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5225024Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5226590Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.54EC091730B13F26DF4F8071584DCE0E.e.264/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5228906Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.54EC091730B13F26DF4F8071584DCE0E.e.264/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5231977Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"🟢 Open"} | headers=HTTPHeaderDict({'Content-Length': '21', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5246672Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5247577Z DEBUG:status_filtering_steps:Found artifact with status: '🟢 Open'
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5248415Z DEBUG:status_filtering_steps:Found 1 artifacts with status 'open' out of 1 visible artifacts
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5251531Z DEBUG:status_filtering_steps:Using JavaScript accessibility function to clear status filter...
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5253192Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': "return setDropdownValue('statusFilter', '');", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5255689Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5264168Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5265784Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5266719Z DEBUG:status_filtering_steps:Successfully cleared status filter using JavaScript accessibility function
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5272643Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': "return getDropdownValue('statusFilter');", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5282906Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5285124Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5286757Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5287485Z DEBUG:status_filtering_steps:Verified status filter is now cleared
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5288818Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5290464Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5292986Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.54EC091730B13F26DF4F8071584DCE0E.e.265"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5313282Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5315066Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5316922Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5319435Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.54EC091730B13F26DF4F8071584DCE0E.e.265"}]} | headers=HTTPHeaderDict({'Content-Length': '129', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5322047Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5322852Z DEBUG:support.hooks:Completed scenario: Filter Artifacts by Status in 0.23s
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5323624Z DEBUG:hooks:Completed scenario: Filter Artifacts by Status in 0.23s
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5324589Z DEBUG:support.hooks:Setting up scenario: Verify Artifact Tile does not Exist
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5325960Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5327572Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5329452Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5331287Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5331966Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5332640Z DEBUG:hooks:Setting up scenario: Verify Artifact Tile does not Exist
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5345411Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5375805Z     [37mAs a user
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5376351Z     I want to be able to select values from dropdowns in the artifact editor
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5377452Z     So that I can create and edit artifacts properly[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5377826Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5378414Z     [1m[37mScenario[22m[39m[26m: [1m[37mPlaceholder - Dropdown tests temporarily disabled[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5378981Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5379224Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5379525Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5379779Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5380085Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5380351Z         [1m[33mAnd I am on the main page[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5380655Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5380954Z [A[K        [1m[32mAnd I am on the main page[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5381308Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5381677Z         [1m[33mThen the page should load successfully[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5382074Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5382460Z [A[K        [1m[32mThen the page should load successfully[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5382858Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5383013Z [36m@smoke
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5384057Z [39m[1m[37mFeature[22m[39m[26m: [1m[37mArtifact Flags[22m[39m[26m  # [1m[30mtests/features/test_artifact_flags.feature[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5384923Z     [37mAs a user
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5385307Z     I want to flag artifacts for easy identification
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5385993Z     So that I can filter and find important artifacts quickly[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5386389Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5386821Z     [1m[37mScenario[22m[39m[26m: [1m[37mFlag and unflag an artifact[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5387283Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5387610Z         [1m[33mGiven I reset the database to master[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5388614Z ⚠️ Reset script not found at /Users/claudio/realtime/reos2/reset_test_db.sh, continuing without reset
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5389256Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5389608Z [A[K        [1m[32mGiven I reset the database to master[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5390037Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5390298Z         [1m[33mAnd I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5390602Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5390860Z [A[K        [1m[32mAnd I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5391175Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5391463Z         [1m[33mAnd I see artifacts displayed[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5392051Z ✅ Found 1 artifacts displayed
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5392603Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5392936Z [A[K        [1m[32mAnd I see artifacts displayed[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5393317Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5393611Z         [1m[33mWhen I flag artifact #00001[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5394617Z ✅ Flagged artifact #0 (previous state: unflagged)
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5394950Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5395243Z [A[K        [1m[32mWhen I flag artifact #00001[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5395582Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5395906Z         [1m[33mThen the artifact should be flagged[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5396467Z ✅ Artifact flag state changed successfully
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5396768Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5399800Z [A[K        [1m[32mThen the artifact should be flagged[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5400192Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5400463Z         [1m[33mWhen I flag artifact #00001[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5401327Z ✅ Flagged artifact #0 (previous state: flagged)
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5401669Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5401964Z [A[K        [1m[32mWhen I flag artifact #00001[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5402284Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5402593Z         [1m[33mThen the artifact should be unflagged[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5403181Z ✅ Artifact flag state changed successfully
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5403468Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5403790Z [A[K        [1m[32mThen the artifact should be unflagged[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5404511Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5404935Z     [1m[37mScenario[22m[39m[26m: [1m[37mFilter by flagged artifacts[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5405378Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5405694Z         [1m[33mGiven I reset the database to master[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5406615Z ⚠️ Reset script not found at /Users/claudio/realtime/reos2/reset_test_db.sh, continuing without reset
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5407212Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5407540Z [A[K        [1m[32mGiven I reset the database to master[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5407934Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5408185Z         [1m[33mAnd I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5408482Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5408728Z [A[K        [1m[32mAnd I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5409432Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5409767Z         [1m[33mAnd I flag artifact #00001[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5410355Z ✅ Flagged artifact #0 (previous state: unflagged)
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5410675Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5410955Z [A[K        [1m[32mAnd I flag artifact #00001[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5411281Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5411543Z         [1m[33mAnd I flag artifact #00002[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5412495Z ✅ Flagged artifact #0 (previous state: flagged)
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5412871Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5413661Z [A[K        [1m[32mAnd I flag artifact #00002[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5414260Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5414674Z         [1m[33mWhen I click the flag filter button in the toolbar[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5419595Z ✅ Clicked flag filter button in toolbar
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5419924Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5420342Z [A[K        [1m[32mWhen I click the flag filter button in the toolbar[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5420799Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5421167Z         [1m[33mThen I should see only flagged artifacts[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5422043Z ⚠️ No artifacts visible after flag filter
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5422520Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5423075Z [A[K        [1m[32mThen I should see only flagged artifacts[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5423448Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5423769Z         [1m[33mAnd the flag filter button should be red[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5424644Z ✅ Flag filter button is red (active filter)
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5425215Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5425867Z [A[K        [1m[32mAnd the flag filter button should be red[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5426284Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5426856Z         [1m[33mWhen I click the flag filter button again[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5427766Z ✅ Clicked flag filter button again
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5428996Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5429669Z [A[K        [1m[32mWhen I click the flag filter button again[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5430083Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5430424Z         [1m[33mThen I should see all artifacts again[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5431046Z ✅ Showing all artifacts again (0 flagged, 1 unflagged)
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5431402Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5431750Z [A[K        [1m[32mThen I should see all artifacts again[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5437043Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5437487Z         [1m[33mAnd the flag filter button should be grey[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5438208Z ✅ Flag filter button is grey (inactive filter)
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5438545Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5438927Z [A[K        [1m[32mAnd the flag filter button should be grey[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5448024Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5448561Z     [1m[37mScenario[22m[39m[26m: [1m[37mCreate artifact with flag[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5449300Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5449679Z         [1m[33mGiven I reset the database to master[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5450639Z ⚠️ Reset script not found at /Users/claudio/realtime/reos2/reset_test_db.sh, continuing without reset
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5451245Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5451581Z [A[K        [1m[32mGiven I reset the database to master[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5451969Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5452203Z         [1m[33mAnd I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5452502Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5452736Z [A[K        [1m[32mAnd I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5453045Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5453342Z         [1m[33mWhen I click the "Create" button[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5453676Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5466947Z [A[K        [1m[32mWhen I click the "Create" button[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5467368Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5467791Z         [1m[33mAnd I fill in the artifact details[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5475351Z           [1m[37m|[22m[39m[26m [37mField      [39m [1m[37m|[22m[39m[26m [37mValue                               [39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5476598Z           [1m[37m|[22m[39m[26m [1m[33mType       [22m[39m [1m[37m|[22m[39m[26m [1m[33mrequirement                         [22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5477856Z           [1m[37m|[22m[39m[26m [1m[33mSummary    [22m[39m [1m[37m|[22m[39m[26m [1m[33mTest artifact with flag             [22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5479291Z           [1m[37m|[22m[39m[26m [1m[33mDescription[22m[39m [1m[37m|[22m[39m[26m [1m[33mTest artifact for flag functionality[22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5480645Z           [1m[37m|[22m[39m[26m [1m[33mCategory   [22m[39m [1m[37m|[22m[39m[26m [1m[33mTest                                [22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5481827Z           [1m[37m|[22m[39m[26m [1m[33mStatus     [22m[39m [1m[37m|[22m[39m[26m [1m[33mopen                                [22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5482391Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5482538Z [A[K
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5482798Z [A[K
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5483067Z [A[K
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5483328Z [A[K
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5483589Z [A[K
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5484055Z [A[K
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5484529Z [A[K        [1m[31mAnd I fill in the artifact details[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5485503Z           [1m[37m|[22m[39m[26m [37mField      [39m [1m[37m|[22m[39m[26m [37mValue                               [39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5486824Z           [1m[37m|[22m[39m[26m [1m[31mType       [22m[39m [1m[37m|[22m[39m[26m [1m[31mrequirement                         [22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5488278Z           [1m[37m|[22m[39m[26m [1m[31mSummary    [22m[39m [1m[37m|[22m[39m[26m [1m[31mTest artifact with flag             [22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5490039Z           [1m[37m|[22m[39m[26m [1m[31mDescription[22m[39m [1m[37m|[22m[39m[26m [1m[31mTest artifact for flag functionality[22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5491429Z           [1m[37m|[22m[39m[26m [1m[31mCategory   [22m[39m [1m[37m|[22m[39m[26m [1m[31mTest                                [22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5492669Z           [1m[37m|[22m[39m[26m [1m[31mStatus     [22m[39m [1m[37m|[22m[39m[26m [1m[31mopen                                [22m[39m [1m[37m|[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5493551Z           [1m[31mKeyError[22m[39m[26m: [31m0[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5559857Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5560545Z         [1m[33mAnd I check the "Flag this artifact" checkbox[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5561050Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5561767Z [A[K        [36mAnd I check the "Flag this artifact" checkbox[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5562162Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5562411Z         [1m[33mAnd I submit the form[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5562740Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5562979Z [A[K        [36mAnd I submit the form[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5563284Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5563628Z         [1m[33mThen I should see the new artifact created[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5564349Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5564751Z [A[K        [36mThen I should see the new artifact created[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5565163Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5565547Z         [1m[33mAnd the new artifact should be flagged[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5565967Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5566327Z [A[K        [36mAnd the new artifact should be flagged[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5566735Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5566915Z [36m@smoke
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5567940Z [39m[1m[37mFeature[22m[39m[26m: [1m[37mTest Status Filtering[22m[39m[26m  # [1m[30mtests/features/test_status_filtering.feature[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5568991Z     [37mAs a user
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5569400Z     I want to filter artifacts by status
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5571510Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5580782Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5596571Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5597325Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5598516Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5812525Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5822256Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5827894Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.5864846Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.6067796Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.6074748Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.6079391Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.6085842Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:14:27.6191759Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:27.6197733Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.9AAF41C2E280D3B4D1D066591D3F4461.e.307"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:27.6199999Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:27.6200614Z DEBUG:artifacts:I do not see the artifact #99999
smoke-tests	Run smoke tests	2025-08-19T18:14:27.6201709Z DEBUG:controls.base:Looking for element with XPath: //div[@class='artifact-card' and contains(., '99999')]
smoke-tests	Run smoke tests	2025-08-19T18:14:27.6203468Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//div[@class='artifact-card' and contains(., '99999')]"}
smoke-tests	Run smoke tests	2025-08-19T18:14:37.6597672Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 404 0
smoke-tests	Run smoke tests	2025-08-19T18:14:37.6608819Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=404 | data={"value":{"error":"no such element","message":"no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class='artifact-card' and contains(., '99999')]\"}\n  (Session info: chrome=139.0.7258.127)","stacktrace":"#0 0x5653fbb5305a \u003Cunknown>\n#1 0x5653fb5f2a70 \u003Cunknown>\n#2 0x5653fb644907 \u003Cunknown>\n#3 0x5653fb644b01 \u003Cunknown>\n#4 0x5653fb692d54 \u003Cunknown>\n#5 0x5653fb66a40d \u003Cunknown>\n#6 0x5653fb69014f \u003Cunknown>\n#7 0x5653fb66a1b3 \u003Cunknown>\n#8 0x5653fb63659b \u003Cunknown>\n#9 0x5653fb637971 \u003Cunknown>\n#10 0x5653fbb1822b \u003Cunknown>\n#11 0x5653fbb1bf79 \u003Cunknown>\n#12 0x5653fbaff309 \u003Cunknown>\n#13 0x5653fbb1cb28 \u003Cunknown>\n#14 0x5653fbae3bef \u003Cunknown>\n#15 0x5653fbb400e8 \u003Cunknown>\n#16 0x5653fbb402c6 \u003Cunknown>\n#17 0x5653fbb52036 \u003Cunknown>\n#18 0x7fe77e29caa4 \u003Cunknown>\n#19 0x7fe77e329c3c \u003Cunknown>\n"}} | headers=HTTPHeaderDict({'Content-Length': '934', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:37.6615547Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:37.6616246Z DEBUG:artifacts:Artifact #99999 correctly not found
smoke-tests	Run smoke tests	2025-08-19T18:14:37.6617040Z DEBUG:support.hooks:Completed scenario: Verify Artifact Tile does not Exist in 10.22s
smoke-tests	Run smoke tests	2025-08-19T18:14:37.6617972Z DEBUG:hooks:Completed scenario: Verify Artifact Tile does not Exist in 10.22s
smoke-tests	Run smoke tests	2025-08-19T18:14:37.6618745Z DEBUG:support.hooks:Setting up scenario: Create new artifact shows "Create" button
smoke-tests	Run smoke tests	2025-08-19T18:14:37.6620002Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4751514Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4754165Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4756088Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4756870Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4757658Z DEBUG:hooks:Setting up scenario: Create new artifact shows "Create" button
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4758938Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4760684Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4762342Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4763769Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4764563Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4765749Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4767055Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4768764Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4769982Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4770951Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {}
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4772015Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4773387Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4774691Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4775843Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4777108Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4778827Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.B237BFD17E1838506ECD785B54D7A883.e.353"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4780293Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4781481Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//div[@id='artifactModal']//button[@type='submit']"}
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4782790Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4784599Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.B237BFD17E1838506ECD785B54D7A883.e.355"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4786074Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:38.4787222Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.B237BFD17E1838506ECD785B54D7A883.e.355/click {}
smoke-tests	Run smoke tests	2025-08-19T18:14:47.9434785Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.B237BFD17E1838506ECD785B54D7A883.e.355/click HTTP/1.1" 400 0
smoke-tests	Run smoke tests	2025-08-19T18:14:47.9442701Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=400 | data={"value":{"error":"element not interactable","message":"element not interactable\n  (Session info: chrome=139.0.7258.127)","stacktrace":"#0 0x5653fbb5305a \u003Cunknown>\n#1 0x5653fb5f28c3 \u003Cunknown>\n#2 0x5653fb645b1e \u003Cunknown>\n#3 0x5653fb638b1b \u003Cunknown>\n#4 0x5653fb66a3e2 \u003Cunknown>\n#5 0x5653fb63849a \u003Cunknown>\n#6 0x5653fb66a5ae \u003Cunknown>\n#7 0x5653fb69014f \u003Cunknown>\n#8 0x5653fb66a1b3 \u003Cunknown>\n#9 0x5653fb63659b \u003Cunknown>\n#10 0x5653fb637971 \u003Cunknown>\n#11 0x5653fbb1822b \u003Cunknown>\n#12 0x5653fbb1bf79 \u003Cunknown>\n#13 0x5653fbaff309 \u003Cunknown>\n#14 0x5653fbb1cb28 \u003Cunknown>\n#15 0x5653fbae3bef \u003Cunknown>\n#16 0x5653fbb400e8 \u003Cunknown>\n#17 0x5653fbb402c6 \u003Cunknown>\n#18 0x5653fbb52036 \u003Cunknown>\n#19 0x7fe77e29caa4 \u003Cunknown>\n#20 0x7fe77e329c3c \u003Cunknown>\n"}} | headers=HTTPHeaderDict({'Content-Length': '865', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:47.9449691Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:47.9455867Z DEBUG:support.hooks:Completed scenario: Create new artifact shows "Create" button in 10.23s
smoke-tests	Run smoke tests	2025-08-19T18:14:47.9461136Z DEBUG:hooks:Completed scenario: Create new artifact shows "Create" button in 10.23s
smoke-tests	Run smoke tests	2025-08-19T18:14:47.9462077Z DEBUG:support.hooks:Setting up scenario: Edit existing artifact shows "Save" button
smoke-tests	Run smoke tests	2025-08-19T18:14:47.9463505Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4799359Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4805302Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4807246Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4807991Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4808876Z DEBUG:hooks:Setting up scenario: Edit existing artifact shows "Save" button
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4810328Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4812077Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4819761Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4830184Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4835777Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4837159Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4838883Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4840857Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4842578Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4854730Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {}
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4856972Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4859057Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4860886Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4862531Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4866876Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4870031Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2C579D399DC9F40E96B0701607BC4BB4.e.403"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4872703Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4874591Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4876641Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4879399Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2C579D399DC9F40E96B0701607BC4BB4.e.404"}]} | headers=HTTPHeaderDict({'Content-Length': '129', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4881928Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4890739Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:14:48.4892806Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4801527Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2C579D399DC9F40E96B0701607BC4BB4.e.404"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4806599Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4808309Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//div[contains(@class, 'artifact-card')][1]//button[.//ion-icon[@name='create-outline']]"}
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4809954Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4811910Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2C579D399DC9F40E96B0701607BC4BB4.e.405"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4813615Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4815134Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2C579D399DC9F40E96B0701607BC4BB4.e.405/click {}
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4817117Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2C579D399DC9F40E96B0701607BC4BB4.e.405/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4818748Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4819837Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4820750Z DEBUG:edit_button_steps:✅ Clicked edit button on first artifact
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4821834Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '[id="artifactModal"]'}
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4823360Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4825179Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2C579D399DC9F40E96B0701607BC4BB4.e.407"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4826659Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4828582Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2C579D399DC9F40E96B0701607BC4BB4.e.407'}]}
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4830433Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4831778Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4832883Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4834670Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2C579D399DC9F40E96B0701607BC4BB4.e.407'}]}
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4836527Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4837892Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4838987Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4839679Z DEBUG:edit_button_steps:✅ Edit dialog is visible
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4840850Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//div[@id='artifactModal']//button[@type='submit']"}
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4842142Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4843996Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2C579D399DC9F40E96B0701607BC4BB4.e.408"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4845680Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4846904Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2C579D399DC9F40E96B0701607BC4BB4.e.408/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4848592Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2C579D399DC9F40E96B0701607BC4BB4.e.408/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4850372Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"Save"} | headers=HTTPHeaderDict({'Content-Length': '16', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4851665Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4852460Z DEBUG:edit_button_steps:✅ Submit button text is correct: 'Save'
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4853200Z DEBUG:support.hooks:Completed scenario: Edit existing artifact shows "Save" button in 0.30s
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4854100Z DEBUG:hooks:Completed scenario: Edit existing artifact shows "Save" button in 0.30s
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4854843Z DEBUG:support.hooks:Setting up scenario: Create New Artifact from Search View
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4855909Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4857056Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4858378Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4859493Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4860259Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4860973Z DEBUG:hooks:Setting up scenario: Create New Artifact from Search View
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4862014Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4863312Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4864713Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4865833Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4866413Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4867423Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4868558Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4869864Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4870945Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4871860Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {}
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4873192Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4874710Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4875871Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4877008Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4878258Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4880145Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.451"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4881617Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4882460Z DEBUG:controls.base:Looking for element with XPath: //div[@class='toolbar']//button[contains(text(), 'Create')]
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4883721Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//div[@class='toolbar']//button[contains(text(), 'Create')]"}
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4885242Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4886945Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.456"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4888420Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4889648Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.456/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4891279Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.456/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4892893Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"Create"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4894120Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4894692Z DEBUG:controls.base:Found element: Create...
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4895920Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.456/click {}
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4897559Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.456/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4899169Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4900269Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4901204Z DEBUG:controls.base:Looking for element with XPath: //div[@id='artifactModal']
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4902437Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//div[@id='artifactModal']"}
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4903717Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4905660Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.459"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4907133Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4908583Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.459/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4910240Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.459/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4913088Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"Create New Artifact\n×\nType\nSelect Type\n▼\nSummary\nDescription\nCategory\nStatus\nSelect Status\n▼\nVerification Method\nFlag this artifact\nCancel\nCreate"} | headers=HTTPHeaderDict({'Content-Length': '176', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4914951Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4915585Z DEBUG:controls.base:Found element: Create New Artifact
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4916124Z ×
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4916435Z Type
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4916776Z Select Type
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4917135Z ▼
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4917481Z Summary
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4917754Z Description
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4918115Z Category
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4918418Z Status
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4918718Z Select Status
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4919120Z ▼
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4919442Z Verification Method
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4919835Z Flag this artifact
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4920175Z Cancel
smoke-tests	Run smoke tests	2025-08-19T18:14:49.4920475Z Create...
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6204580Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '[id="artifactModal"]'}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6260917Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6264808Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.459"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6267251Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6269762Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.459'}]}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6315982Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6319295Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6321440Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6322900Z DEBUG:controls.base:Looking for element with XPath: //select[@id='artifactType']
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6324724Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//select[@id='artifactType']"}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6405413Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6409072Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.438"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6411825Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6413552Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.438/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6467606Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.438/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6471103Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6472775Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6473456Z DEBUG:controls.base:Found element: ...
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6475259Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.438/name {}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6510783Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.438/name HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6514546Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"select"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6516288Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6518464Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.438/element {'using': 'xpath', 'value': "..//div[contains(@class, 'custom-dropdown')]"}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6598831Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.438/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6603155Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.461"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6606736Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6608689Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.461/element {'using': 'xpath', 'value': '..'}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6688264Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.461/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6693759Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.462"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6696348Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6698329Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.462/element {'using': 'tag name', 'value': 'select'}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6774941Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.462/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6779281Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.438"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6781578Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6784318Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.438'}, 'id']}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6827617Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6830172Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"artifactType"} | headers=HTTPHeaderDict({'Content-Length': '24', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6831967Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6833755Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': "\n                if (typeof setDropdownValue === 'function') {\n                    return setDropdow...", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6891207Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6895540Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6898210Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6900274Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': "\n                    if (typeof getDropdownValue === 'function') {\n                        return ge...", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6935081Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6937736Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"requirement"} | headers=HTTPHeaderDict({'Content-Length': '23', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6940201Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6942702Z DEBUG:controls.base:Looking for element with XPath: //input[@id='artifactSummary']
smoke-tests	Run smoke tests	2025-08-19T18:14:51.6944482Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//input[@id='artifactSummary']"}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.7027930Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.7031315Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.439"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.7034233Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.7035881Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.439/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.7095704Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.439/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.7098709Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.7100428Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.7101064Z DEBUG:controls.base:Found element: ...
smoke-tests	Run smoke tests	2025-08-19T18:14:51.7102543Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.439/name {}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.7137715Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.439/name HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.7140741Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"input"} | headers=HTTPHeaderDict({'Content-Length': '17', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.7142497Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.7144453Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.439/clear {}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.7392435Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.439/clear HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.7395707Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.7397720Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.7400053Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.439/value {'text': 'Test requirement for BDD testing', 'value': ['T', 'e', 's', 't', ' ', 'r', 'e', 'q', 'u', 'i', 'r', 'e', 'm', 'e', 'n', 't', ' ', 'f', 'o', 'r', ' ', 'B', 'D', 'D', ' ', 't', 'e', 's', 't', 'i', 'n', 'g']}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8026235Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.439/value HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8029030Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8030860Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8031959Z DEBUG:controls.base:Looking for element with XPath: //textarea[@id='artifactDescription']
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8033774Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//textarea[@id='artifactDescription']"}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8119029Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8122948Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.440"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8125549Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8127326Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.440/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8189904Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.440/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8195311Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8196933Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8197587Z DEBUG:controls.base:Found element: ...
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8199149Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.440/name {}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8228516Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.440/name HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8232236Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"textarea"} | headers=HTTPHeaderDict({'Content-Length': '20', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8234177Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8235881Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.440/clear {}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8377803Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.440/clear HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8380883Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8384292Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.8387210Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.440/value {'text': 'This is a test requirement created during BDD test execution', 'value': ['T', 'h', 'i', 's', ' ', 'i', 's', ' ', 'a', ' ', 't', 'e', 's', 't', ' ', 'r', 'e', 'q', 'u', 'i', 'r', 'e', 'm', 'e', 'n', 't', ' ', 'c', 'r', 'e', 'a', 't', 'e', 'd', ' ', 'd', 'u', 'r', 'i', 'n', 'g', ' ', 'B', 'D', 'D', ' ', 't', 'e', 's', 't', ' ', 'e', 'x', 'e', 'c', 'u', 't', 'i', 'o', 'n']}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9079202Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.440/value HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9082738Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9085007Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9088679Z DEBUG:controls.base:Looking for element with XPath: //select[@id='artifactStatus']
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9096616Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//select[@id='artifactStatus']"}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9176798Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9179954Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.442"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9190245Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9192111Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.442/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9243677Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.442/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9247356Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9249137Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9249796Z DEBUG:controls.base:Found element: ...
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9251302Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.442/name {}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9285643Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.442/name HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9288741Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"select"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9291331Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9294573Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.442/element {'using': 'xpath', 'value': "..//div[contains(@class, 'custom-dropdown')]"}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9348349Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.442/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9355870Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.467"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9358635Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9361114Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.467/element {'using': 'xpath', 'value': '..'}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9405227Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.467/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9409008Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.468"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9411401Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9416579Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.468/element {'using': 'tag name', 'value': 'select'}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9462771Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.468/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9466736Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.442"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9470267Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9472782Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.442'}, 'id']}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9509654Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9512695Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"artifactStatus"} | headers=HTTPHeaderDict({'Content-Length': '26', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9516172Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9517984Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': "\n                if (typeof setDropdownValue === 'function') {\n                    return setDropdow...", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9573416Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9577643Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9580358Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9582123Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': "\n                    if (typeof getDropdownValue === 'function') {\n                        return ge...", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9620984Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9623299Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"open"} | headers=HTTPHeaderDict({'Content-Length': '16', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9625787Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9628572Z DEBUG:controls.base:Looking for element with XPath: //div[@id='artifactModal']//button[contains(text(), 'Create')]
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9630438Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//div[@id='artifactModal']//button[contains(text(), 'Create')]"}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9715540Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9719651Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.458"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9723650Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9725577Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.458/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9785462Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.458/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9794118Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"Create"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9796043Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9796741Z DEBUG:controls.base:Found element: Create...
smoke-tests	Run smoke tests	2025-08-19T18:14:51.9798340Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.458/click {}
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0275695Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.458/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0287789Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0290757Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0295789Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '[id="artifactModal"]'}
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0447196Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0449960Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.459"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0452378Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0455558Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.459'}]}
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0518295Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0520648Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":false} | headers=HTTPHeaderDict({'Content-Length': '15', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0525048Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0526590Z DEBUG:controls.base:Looking for element with XPath: //div[@class='artifact-card' and contains(., 'Test requirement for BDD testing')]
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0528966Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//div[@class='artifact-card' and contains(., 'Test requirement for BDD testing')]"}
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0696139Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0699197Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.470"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0702085Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0703793Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.470/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0794578Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.470/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0805617Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"Requirement\n🟢 Open\n00002\nTest requirement for BDD testing\nThis is a test requirement created during BDD test execution\nVerification: BDD\nCreated: 8/19/2025\nUpdated: 8/19/2025"} | headers=HTTPHeaderDict({'Content-Length': '196', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0808211Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0808904Z DEBUG:controls.base:Found element: Requirement
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0809513Z 🟢 Open
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0809782Z 00002
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0810100Z Test requirement for BDD testing
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0811122Z This is a test requirement created during BDD test execution
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0811669Z Verification: BDD
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0811993Z Created: 8/19/2025
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0812324Z Updated: 8/19/2025...
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0812961Z DEBUG:artifact_creation_steps:Found artifact with summary: Test requirement for BDD testing
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0814769Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '[id="artifactModal"]'}
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0849592Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0853777Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.459"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0857858Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0860436Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2B336B02E5806D8DAB2B30932F836F22.e.459'}]}
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0900408Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0903059Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":false} | headers=HTTPHeaderDict({'Content-Length': '15', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0905630Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0907625Z DEBUG:support.hooks:Completed scenario: Create New Artifact from Search View in 3.74s
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0908657Z DEBUG:hooks:Completed scenario: Create New Artifact from Search View in 3.74s
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0909643Z DEBUG:support.hooks:Setting up scenario: Cancel Artifact Creation
smoke-tests	Run smoke tests	2025-08-19T18:14:52.0912457Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:52.1410150Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:52.1415249Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:52.1417765Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:52.1418486Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:52.1419086Z DEBUG:hooks:Setting up scenario: Cancel Artifact Creation
smoke-tests	Run smoke tests	2025-08-19T18:14:52.1420311Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:52.2015058Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:52.2047013Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:52.2048808Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:52.2049750Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:14:52.2063093Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:14:52.2625613Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:52.2631914Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:52.2647540Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:52.2651490Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {}
smoke-tests	Run smoke tests	2025-08-19T18:14:52.2840209Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:52.2852197Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:52.2854559Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:52.2856298Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3007250Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3019788Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.513"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3022359Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3025912Z DEBUG:controls.base:Looking for element with XPath: //div[@class='toolbar']//button[contains(text(), 'Create')]
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3027787Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//div[@class='toolbar']//button[contains(text(), 'Create')]"}
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3159352Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3164166Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.517"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3168191Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3169742Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.517/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3225545Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.517/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3229130Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"Create"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3230865Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3231577Z DEBUG:controls.base:Found element: Create...
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3233638Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.517/click {}
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3736162Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.517/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3741186Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3745173Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3746330Z DEBUG:controls.base:Looking for element with XPath: //div[@id='artifactModal']
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3748295Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//div[@id='artifactModal']"}
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3803458Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3810042Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.520"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3812442Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3814233Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.520/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3957658Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.520/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3963397Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"Create New Artifact\n×\nType\nSelect Type\n▼\nSummary\nDescription\nCategory\nStatus\nSelect Status\n▼\nVerification Method\nFlag this artifact\nCancel\nCreate"} | headers=HTTPHeaderDict({'Content-Length': '176', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3966141Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3966846Z DEBUG:controls.base:Found element: Create New Artifact
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3967367Z ×
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3967618Z Type
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3967871Z Select Type
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3968211Z ▼
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3968453Z Summary
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3968716Z Description
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3969000Z Category
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3969257Z Status
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3969517Z Select Status
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3969834Z ▼
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3970100Z Verification Method
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3970418Z Flag this artifact
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3970712Z Cancel
smoke-tests	Run smoke tests	2025-08-19T18:14:52.3970965Z Create...
smoke-tests	Run smoke tests	2025-08-19T18:14:55.3962434Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '[id="artifactModal"]'}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4018255Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4021875Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.520"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4025225Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4027784Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.520'}]}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4079162Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4082384Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4085245Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4086369Z DEBUG:controls.base:Looking for element with XPath: //select[@id='artifactType']
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4088620Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//select[@id='artifactType']"}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4141295Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4144602Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.499"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4148534Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4150861Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.499/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4204874Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.499/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4208043Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4212341Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4213002Z DEBUG:controls.base:Found element: ...
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4215067Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.499/name {}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4243670Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.499/name HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4247401Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"select"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4249887Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4252156Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.499/element {'using': 'xpath', 'value': "..//div[contains(@class, 'custom-dropdown')]"}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4304470Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.499/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4311038Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.522"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4313444Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4315543Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.522/element {'using': 'xpath', 'value': '..'}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4360594Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.522/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4364545Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.523"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4368235Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4370485Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.523/element {'using': 'tag name', 'value': 'select'}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4419624Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.523/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4424200Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.499"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4426639Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4429218Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.499'}, 'id']}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4464574Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4467623Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"artifactType"} | headers=HTTPHeaderDict({'Content-Length': '24', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4469855Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4471717Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': "\n                if (typeof setDropdownValue === 'function') {\n                    return setDropdow...", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4524515Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4527069Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4531186Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4532980Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': "\n                    if (typeof getDropdownValue === 'function') {\n                        return ge...", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4558557Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4561532Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"requirement"} | headers=HTTPHeaderDict({'Content-Length': '23', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4564046Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4564911Z DEBUG:controls.base:Looking for element with XPath: //input[@id='artifactSummary']
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4566913Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//input[@id='artifactSummary']"}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4619343Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4623248Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.500"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4627224Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4628984Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.500/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4683098Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.500/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4688515Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4690157Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4690806Z DEBUG:controls.base:Found element: ...
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4692385Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.500/name {}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4722868Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.500/name HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4726644Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"input"} | headers=HTTPHeaderDict({'Content-Length': '17', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4728305Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4729988Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.500/clear {}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4917887Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.500/clear HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4921292Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4924533Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.4926752Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.500/value {'text': 'This will be cancelled', 'value': ['T', 'h', 'i', 's', ' ', 'w', 'i', 'l', 'l', ' ', 'b', 'e', ' ', 'c', 'a', 'n', 'c', 'e', 'l', 'l', 'e', 'd']}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5399115Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.500/value HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5410597Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5412341Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5413182Z DEBUG:controls.base:Looking for element with XPath: //textarea[@id='artifactDescription']
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5414925Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//textarea[@id='artifactDescription']"}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5416763Z     So that I can view artifacts with specific status values[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5417238Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5417714Z     [1m[37mScenario[22m[39m[26m: [1m[37mFilter Artifacts by Status[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5418205Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5418492Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5418821Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5419119Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5419453Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5419810Z         [1m[33mWhen I set the status filter to "open"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5420212Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5420598Z [A[K        [1m[32mWhen I set the status filter to "open"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5421010Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5421434Z         [1m[33mAnd I verify the status filter is set to "open"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5421885Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5422319Z [A[K        [1m[32mAnd I verify the status filter is set to "open"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5422759Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5423125Z         [1m[33mThen I see only artifacts with status "open"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5423550Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5424125Z [A[K        [1m[32mThen I see only artifacts with status "open"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5424554Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5424856Z         [1m[33mWhen I clear the status filter[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5425198Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5425497Z [A[K        [1m[32mWhen I clear the status filter[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5425854Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5426192Z         [1m[33mAnd I verify the status filter is cleared[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5426580Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5426939Z [A[K        [1m[32mAnd I verify the status filter is cleared[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5427334Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5427615Z         [1m[33mThen I see all artifacts again[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5427959Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5428253Z [A[K        [1m[32mThen I see all artifacts again[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5428602Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5428746Z [36m@smoke
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5429674Z [39m[1m[37mFeature[22m[39m[26m: [1m[37mTest Artifact Tile[22m[39m[26m  # [1m[30mtests/features/test_artifact_tile.feature[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5430928Z     [37mAs a user
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5431313Z     I want to verify that specific artifacts are visible
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5431990Z     So that I can confirm the page is working correctly[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5432373Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5432873Z     [1m[37mScenario[22m[39m[26m: [1m[37mVerify Artifact Tile does not Exist[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5433374Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5433608Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5434057Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5434324Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5434636Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5434957Z         [1m[33mThen I do not see the artifact #99999[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5435340Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5435680Z [A[K        [1m[32mThen I do not see the artifact #99999[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5436282Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5436447Z [36m@smoke
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5437523Z [39m[1m[37mFeature[22m[39m[26m: [1m[37mEdit Dialog Button Text[22m[39m[26m  # [1m[30mtests/features/test_edit_button_text.feature[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5438493Z     [37mAs a user
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5438893Z     I want to see the correct button text in the edit dialog
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5439615Z     So that I know whether I'm creating or editing an artifact[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5440023Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5440519Z     [1m[37mScenario[22m[39m[26m: [1m[37mCreate new artifact shows "Create" button[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5441054Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5441302Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5441610Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5441874Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5442175Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5442458Z         [1m[33mWhen I click the create button[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5442820Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5443114Z [A[K        [1m[31mWhen I click the create button[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5444205Z           [1m[31mElementNotInteractableException[22m[39m[26m: [31mMessage: element not interactable
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5445813Z   (Session info: chrome=139.0.7258.127); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementnotinteractableexception
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5447078Z Stacktrace:
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5447382Z #0 0x5653fbb5305a <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5447731Z #1 0x5653fb5f28c3 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5448073Z #2 0x5653fb645b1e <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5448415Z #3 0x5653fb638b1b <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5448783Z #4 0x5653fb66a3e2 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5449140Z #5 0x5653fb63849a <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5449485Z #6 0x5653fb66a5ae <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5449823Z #7 0x5653fb69014f <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5450145Z #8 0x5653fb66a1b3 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5450467Z #9 0x5653fb63659b <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5450795Z #10 0x5653fb637971 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5451123Z #11 0x5653fbb1822b <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5451454Z #12 0x5653fbb1bf79 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5451776Z #13 0x5653fbaff309 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5452122Z #14 0x5653fbb1cb28 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5452464Z #15 0x5653fbae3bef <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5452800Z #16 0x5653fbb400e8 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5453130Z #17 0x5653fbb402c6 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5453460Z #18 0x5653fbb52036 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5453796Z #19 0x7fe77e29caa4 <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5454462Z #20 0x7fe77e329c3c <unknown>
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5454877Z [39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5455047Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5455355Z         [1m[33mThen I should see the edit dialog[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5455733Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5456028Z [A[K        [36mThen I should see the edit dialog[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5456382Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5456738Z         [1m[33mAnd the submit button should say "Create"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5457332Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5457632Z [A[K        [36mAnd the submit button should say "Create"[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5457983Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5458480Z     [1m[37mScenario[22m[39m[26m: [1m[37mEdit existing artifact shows "Save" button[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5458970Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5459225Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5459546Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5459822Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5460135Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5460439Z         [1m[33mAnd I see artifacts displayed[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5461003Z ✅ Found 1 artifacts displayed
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5461232Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5461526Z [A[K        [1m[32mAnd I see artifacts displayed[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5461853Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5462215Z         [1m[33mWhen I click the edit button on the first artifact[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5462850Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5463259Z [A[K        [1m[32mWhen I click the edit button on the first artifact[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5463671Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5464180Z         [1m[33mThen I should see the edit dialog[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5464555Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5464881Z [A[K        [1m[32mThen I should see the edit dialog[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5465265Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5465619Z         [1m[33mAnd the submit button should say "Save"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5466016Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5466418Z [A[K        [1m[32mAnd the submit button should say "Save"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5466838Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5467022Z [36m@smoke
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5468025Z [39m[1m[37mFeature[22m[39m[26m: [1m[37mTest Artifact Creation[22m[39m[26m  # [1m[30mtests/features/test_artifact_creation.feature[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5468987Z     [37mAs a user
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5469412Z     I want to create new artifacts from the search view
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5470108Z     So that I can add new items to the project[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5470472Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5471001Z     [1m[37mScenario[22m[39m[26m: [1m[37mCreate New Artifact from Search View[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5471523Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5471810Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5472140Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5472428Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5472758Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5473426Z         [1m[33mWhen I create a new requirement[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5473818Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5474404Z [A[K        [1m[32mWhen I create a new requirement[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5474780Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5475115Z         [1m[33mThen I see the artifact creation form[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5475496Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5475849Z [A[K        [1m[32mThen I see the artifact creation form[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5476599Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5476969Z         [1m[33mWhen I set the type to "requirement"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5477641Z Found custom dropdown, using custom dropdown method for 'requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5478249Z Found original select element: artifactType
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5478901Z Using JavaScript accessibility function to set dropdown value 'requirement'...
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5479798Z Successfully set dropdown value 'requirement' using JavaScript accessibility function
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5480551Z Verified dropdown value is now 'requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5480879Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5481319Z [A[K        [1m[32mWhen I set the type to "requirement"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5481710Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5482183Z         [1m[33mWhen I set the summary to "Test requirement for BDD testing"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5482695Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5483173Z [A[K        [1m[32mWhen I set the summary to "Test requirement for BDD testing"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5484124Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5484808Z         [1m[33mWhen I set the description to "This is a test requirement created during BDD test execution"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5485487Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5487890Z [A[K        [1m[32mWhen I set the description to "This is a test requirement created during BDD test execution"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5488595Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5488946Z         [1m[33mWhen I set the status to "open"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5489597Z Found custom dropdown, using custom dropdown method for 'open'
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5490222Z Found original select element: artifactStatus
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5490942Z Using JavaScript accessibility function to set dropdown value 'open'...
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5491697Z Successfully set dropdown value 'open' using JavaScript accessibility function
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5492317Z Verified dropdown value is now 'open'
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5492867Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5493251Z [A[K        [1m[32mWhen I set the status to "open"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5493632Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5494147Z         [1m[33mWhen I save the new artifact[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5494496Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5494818Z [A[K        [1m[32mWhen I save the new artifact[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5495179Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5495559Z         [1m[33mThen I see the new artifact in the list[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5495956Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5496336Z [A[K        [1m[32mThen I see the new artifact in the list[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5496750Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5497146Z         [1m[33mThen I do not see the artifact creation form[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5497562Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5497975Z [A[K        [1m[32mThen I do not see the artifact creation form[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5498384Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5498822Z     [1m[37mScenario[22m[39m[26m: [1m[37mCancel Artifact Creation[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5499300Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5499590Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5499926Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5500211Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5500589Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5500919Z         [1m[33mWhen I create a new requirement[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5501281Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5501629Z [A[K        [1m[32mWhen I create a new requirement[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5502003Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5502354Z         [1m[33mThen I see the artifact creation form[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5502758Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5503145Z [A[K        [1m[32mThen I see the artifact creation form[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5503557Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5508754Z         [1m[33mWhen I set the type to "requirement"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5509482Z Found custom dropdown, using custom dropdown method for 'requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5510133Z Found original select element: artifactType
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5510815Z Using JavaScript accessibility function to set dropdown value 'requirement'...
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5511710Z Successfully set dropdown value 'requirement' using JavaScript accessibility function
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5512419Z Verified dropdown value is now 'requirement'
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5512737Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5513096Z [A[K        [1m[32mWhen I set the type to "requirement"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5513475Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5514003Z         [1m[33mWhen I set the summary to "This will be cancelled"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5514434Z 
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5515093Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5517540Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.501"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5520014Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5521710Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.501/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5553671Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.501/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5557350Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5558946Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5559839Z DEBUG:controls.base:Found element: ...
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5561413Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.501/name {}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5595554Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.501/name HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5599106Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"textarea"} | headers=HTTPHeaderDict({'Content-Length': '20', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5600761Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5602557Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.501/clear {}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5749973Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.501/clear HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5755935Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5757545Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:55.5759901Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.501/value {'text': 'This description will not be saved', 'value': ['T', 'h', 'i', 's', ' ', 'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', ' ', 'w', 'i', 'l', 'l', ' ', 'n', 'o', 't', ' ', 'b', 'e', ' ', 's', 'a', 'v', 'e', 'd']}
smoke-tests	Run smoke tests	2025-08-19T18:14:55.6281037Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.501/value HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4823384Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4826955Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4829275Z DEBUG:controls.base:Looking for element with XPath: //select[@id='artifactStatus']
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4831047Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//select[@id='artifactStatus']"}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4833643Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4836421Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.503"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4837771Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4838706Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.503/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4840091Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.503/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4841657Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4842718Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4843071Z DEBUG:controls.base:Found element: ...
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4844081Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.503/name {}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4845449Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.503/name HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4846798Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"select"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4847690Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4848822Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.503/element {'using': 'xpath', 'value': "..//div[contains(@class, 'custom-dropdown')]"}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4850422Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.503/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4852135Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.528"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4853397Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4854674Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.528/element {'using': 'xpath', 'value': '..'}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4856172Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.528/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4857888Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.529"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4859304Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4860347Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.529/element {'using': 'tag name', 'value': 'select'}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4861859Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.529/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4863582Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.503"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4865165Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4866571Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.503'}, 'id']}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4868135Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4869248Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"artifactStatus"} | headers=HTTPHeaderDict({'Content-Length': '26', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4870180Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4871144Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': "\n                if (typeof setDropdownValue === 'function') {\n                    return setDropdow...", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4872290Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4874214Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4875146Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4876121Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': "\n                    if (typeof getDropdownValue === 'function') {\n                        return ge...", 'args': []}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4877267Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4878379Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"in_progress"} | headers=HTTPHeaderDict({'Content-Length': '23', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4879288Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4879821Z DEBUG:controls.base:Looking for element with XPath: //div[@id='artifactModal']//button[contains(text(), 'Cancel')]
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4880832Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//div[@id='artifactModal']//button[contains(text(), 'Cancel')]"}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4882048Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4883485Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.518"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4884849Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4885758Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.518/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4887242Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.518/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4888601Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"Cancel"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4889494Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4889849Z DEBUG:controls.base:Found element: Cancel...
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4890698Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.518/click {}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4892061Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.518/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4893406Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4894387Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4895194Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '[id="artifactModal"]'}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4896168Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4897612Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.520"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4898874Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4900241Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.520'}]}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4901799Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4902877Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":false} | headers=HTTPHeaderDict({'Content-Length': '15', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4903990Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4904789Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '[id="artifactModal"]'}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4905761Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4907199Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.520"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4908445Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4909911Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.520'}]}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4911454Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4912531Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":false} | headers=HTTPHeaderDict({'Content-Length': '15', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4913406Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4913946Z DEBUG:controls.base:Looking for element with XPath: //h1[contains(text(), 'iflow')]
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4914803Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//h1[contains(text(), 'iflow')]"}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4915789Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4917220Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.530"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4918462Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4919375Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.530/text {}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4920734Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.530/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4922198Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"iflow - Git-based artifact management system"} | headers=HTTPHeaderDict({'Content-Length': '56', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4923211Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4923660Z DEBUG:controls.base:Found element: iflow - Git-based artifact management system...
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4924590Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '[id="search-input"]'}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4925570Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4927129Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.506"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4928373Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4929481Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.506/clear {}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4930856Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.506/clear HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4932326Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4933210Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4934523Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.506/value {'text': 'This will be cancelled', 'value': ['T', 'h', 'i', 's', ' ', 'w', 'i', 'l', 'l', ' ', 'b', 'e', ' ', 'c', 'a', 'n', 'c', 'e', 'l', 'l', 'e', 'd']}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4936171Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.506/value HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4937525Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4938415Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4939443Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.506/value {'text': '\ue006', 'value': ['\ue006']}
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4940937Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.F1F907FAA65042212691924B8E292764.e.506/value HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4942278Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:14:56.4943168Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:14:56.8761996Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:15:06.8955988Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:06.8959119Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:06.8961182Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:06.8961979Z DEBUG:artifact_creation_steps:Search returned 0 results as expected
smoke-tests	Run smoke tests	2025-08-19T18:15:06.8963250Z DEBUG:support.hooks:Completed scenario: Cancel Artifact Creation in 14.76s
smoke-tests	Run smoke tests	2025-08-19T18:15:06.8964230Z DEBUG:hooks:Completed scenario: Cancel Artifact Creation in 14.76s
smoke-tests	Run smoke tests	2025-08-19T18:15:06.8965625Z DEBUG:support.hooks:Setting up scenario: Verify Version Information in Header
smoke-tests	Run smoke tests	2025-08-19T18:15:06.8966976Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:15:06.9606509Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:06.9618185Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:06.9625130Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:06.9626213Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:15:06.9628163Z DEBUG:hooks:Setting up scenario: Verify Version Information in Header
smoke-tests	Run smoke tests	2025-08-19T18:15:06.9629578Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.0411133Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.0413439Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.0415683Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.0416578Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:15:07.0421335Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1157108Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1196023Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1197923Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1203342Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1311763Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1317822Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1319676Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1332894Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1554158Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1565932Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2A565AEC252D2576127AFC0DE6CE78F8.e.576"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1582710Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1584882Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '[id="header-version"]'}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1683013Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1685832Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2A565AEC252D2576127AFC0DE6CE78F8.e.578"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1688100Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1689768Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2A565AEC252D2576127AFC0DE6CE78F8.e.578/text {}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1824925Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2A565AEC252D2576127AFC0DE6CE78F8.e.578/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1827972Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"v0.4.0a2"} | headers=HTTPHeaderDict({'Content-Length': '20', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1830033Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1833204Z DEBUG:version_display_steps:✅ Version information found in header: v0.4.0a2
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1834861Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '[id="stats-bar"]'}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1983031Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1986585Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2A565AEC252D2576127AFC0DE6CE78F8.e.582"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1990219Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.1992136Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2A565AEC252D2576127AFC0DE6CE78F8.e.582/text {}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.2196849Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.2A565AEC252D2576127AFC0DE6CE78F8.e.582/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.2205764Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"2\nTotal Artifacts\n6\nTotal Commits\nmaster\nBranch\n1\nArtifact Types\n✓\nGit Status"} | headers=HTTPHeaderDict({'Content-Length': '100', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.2207966Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.2208941Z DEBUG:version_display_steps:✅ No version information found in statistics line
smoke-tests	Run smoke tests	2025-08-19T18:15:07.2222853Z DEBUG:support.hooks:Completed scenario: Verify Version Information in Header in 0.26s
smoke-tests	Run smoke tests	2025-08-19T18:15:07.2224834Z DEBUG:hooks:Completed scenario: Verify Version Information in Header in 0.26s
smoke-tests	Run smoke tests	2025-08-19T18:15:07.2226576Z DEBUG:support.hooks:Setting up scenario: Verify Statistics Line Without Version
smoke-tests	Run smoke tests	2025-08-19T18:15:07.2228865Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.2643794Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.2659085Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.2676390Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.2684982Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:15:07.2688886Z DEBUG:hooks:Setting up scenario: Verify Statistics Line Without Version
smoke-tests	Run smoke tests	2025-08-19T18:15:07.2690840Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.3366852Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.3377572Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.3379305Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.3380010Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:15:07.3381253Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4030690Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4032779Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4034744Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4035896Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4162429Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4172912Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4180034Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4187901Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4342839Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4353168Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.9989A5F49DCB671A5698DEA7AA63AB97.e.623"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4376649Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4378222Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '[id="stats-bar"]'}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4465779Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4470292Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.9989A5F49DCB671A5698DEA7AA63AB97.e.625"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4472695Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4477442Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'f.F4CFE8C7950637A0B7CC3883ADEFE101.d.9989A5F49DCB671A5698DEA7AA63AB97.e.625'}]}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4621445Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/execute/sync HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4623425Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4625615Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4626833Z DEBUG:version_display_steps:✅ Statistics line is visible
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4628399Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '[id="stats-bar"]'}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4688423Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4691583Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.9989A5F49DCB671A5698DEA7AA63AB97.e.625"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4694568Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4698675Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.9989A5F49DCB671A5698DEA7AA63AB97.e.625/text {}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4764957Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.9989A5F49DCB671A5698DEA7AA63AB97.e.625/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4768810Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"2\nTotal Artifacts\n6\nTotal Commits\nmaster\nBranch\n1\nArtifact Types\n✓\nGit Status"} | headers=HTTPHeaderDict({'Content-Length': '100', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4771077Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4775572Z DEBUG:version_display_steps:✅ Statistics line does not contain version information
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4778359Z DEBUG:support.hooks:Completed scenario: Verify Statistics Line Without Version in 0.21s
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4779378Z DEBUG:hooks:Completed scenario: Verify Statistics Line Without Version in 0.21s
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4780330Z DEBUG:support.hooks:Setting up scenario: Refresh artifacts using toolbar refresh button
smoke-tests	Run smoke tests	2025-08-19T18:15:07.4781817Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.5273407Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.5303029Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.5328605Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.5333154Z DEBUG:support.hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:15:07.5334515Z DEBUG:hooks:Setting up scenario: Refresh artifacts using toolbar refresh button
smoke-tests	Run smoke tests	2025-08-19T18:15:07.5336206Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.5958049Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.5960432Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.5977498Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.5978326Z DEBUG:hooks:Navigated to: http://localhost:8080
smoke-tests	Run smoke tests	2025-08-19T18:15:07.5979607Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {'url': 'http://localhost:8080'}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.6605570Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.6653290Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.6656194Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.6657928Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/url {}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.6778570Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/url HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.6795211Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":"http://localhost:8080/"} | headers=HTTPHeaderDict({'Content-Length': '34', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.6797046Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.6798514Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'css selector', 'value': '.artifacts-container'}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.6989538Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.6992794Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.CDBA4B1334CB42CB5946B2E4AE05E34A.e.670"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.6995868Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.6999046Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.7164325Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.7171108Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.CDBA4B1334CB42CB5946B2E4AE05E34A.e.672"},{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.CDBA4B1334CB42CB5946B2E4AE05E34A.e.673"}]} | headers=HTTPHeaderDict({'Content-Length': '247', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.7177749Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.7178706Z DEBUG:controls.base:Looking for element with XPath: //div[@class='toolbar']//button[.//ion-icon[@name='refresh-outline']]
smoke-tests	Run smoke tests	2025-08-19T18:15:07.7180651Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element {'using': 'xpath', 'value': "//div[@class='toolbar']//button[.//ion-icon[@name='refresh-outline']]"}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.7316990Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.7323546Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.CDBA4B1334CB42CB5946B2E4AE05E34A.e.677"}} | headers=HTTPHeaderDict({'Content-Length': '127', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.7326630Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.7328336Z DEBUG:selenium.webdriver.remote.remote_connection:GET http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.CDBA4B1334CB42CB5946B2E4AE05E34A.e.677/text {}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.7389805Z DEBUG:urllib3.connectionpool:http://localhost:47685 "GET /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.CDBA4B1334CB42CB5946B2E4AE05E34A.e.677/text HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.7393292Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.7395121Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:07.7395747Z DEBUG:controls.base:Found element: ...
smoke-tests	Run smoke tests	2025-08-19T18:15:07.7397363Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.CDBA4B1334CB42CB5946B2E4AE05E34A.e.677/click {}
smoke-tests	Run smoke tests	2025-08-19T18:15:07.7810240Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/element/f.F4CFE8C7950637A0B7CC3883ADEFE101.d.CDBA4B1334CB42CB5946B2E4AE05E34A.e.677/click HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:07.7812980Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:07.7814927Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7816700Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7880196Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7885712Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.CDBA4B1334CB42CB5946B2E4AE05E34A.e.678"},{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.CDBA4B1334CB42CB5946B2E4AE05E34A.e.679"}]} | headers=HTTPHeaderDict({'Content-Length': '247', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7888752Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7890238Z DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:47685/session/6e85a80ed81e5e0d058604bc99eea863/elements {'using': 'css selector', 'value': '.artifact-card'}
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7936851Z DEBUG:urllib3.connectionpool:http://localhost:47685 "POST /session/6e85a80ed81e5e0d058604bc99eea863/elements HTTP/1.1" 200 0
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7940710Z DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.CDBA4B1334CB42CB5946B2E4AE05E34A.e.678"},{"element-6066-11e4-a52e-4f735466cecf":"f.F4CFE8C7950637A0B7CC3883ADEFE101.d.CDBA4B1334CB42CB5946B2E4AE05E34A.e.679"}]} | headers=HTTPHeaderDict({'Content-Length': '247', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7944622Z [A[K        [1m[32mWhen I set the summary to "This will be cancelled"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7946496Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7947106Z DEBUG:selenium.webdriver.remote.remote_connection:Finished Request
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7951545Z DEBUG:support.hooks:Completed scenario: Refresh artifacts using toolbar refresh button in 2.26s
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7952678Z         [1m[33mWhen I set the description to "This description will not be saved"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7954968Z DEBUG:hooks:Completed scenario: Refresh artifacts using toolbar refresh button in 2.26s
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7955540Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7956468Z [A[K        [1m[32mWhen I set the description to "This description will not be saved"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7957008Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7957351Z         [1m[33mWhen I set the status to "in_progress"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7958020Z Found custom dropdown, using custom dropdown method for 'in_progress'
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7958636Z Found original select element: artifactStatus
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7959300Z Using JavaScript accessibility function to set dropdown value 'in_progress'...
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7960195Z Successfully set dropdown value 'in_progress' using JavaScript accessibility function
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7960898Z Verified dropdown value is now 'in_progress'
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7961215Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7961565Z [A[K        [1m[32mWhen I set the status to "in_progress"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7961951Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7962273Z         [1m[33mWhen I cancel the artifact creation[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7962636Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7962956Z [A[K        [1m[32mWhen I cancel the artifact creation[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7963337Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7963684Z         [1m[33mThen I do not see the artifact creation form[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7964265Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7964655Z [A[K        [1m[32mThen I do not see the artifact creation form[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7965105Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7965404Z         [1m[33mThen I remain on the search view[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7965766Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7966078Z [A[K        [1m[32mThen I remain on the search view[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7966434Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7966864Z         [1m[33mWhen I search for artifacts with "This will be cancelled"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7967307Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7967711Z [A[K        [1m[32mWhen I search for artifacts with "This will be cancelled"[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7968141Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7968386Z         [1m[33mThen I see 0 search results[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7968674Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7968928Z [A[K        [1m[32mThen I see 0 search results[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7969236Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7969372Z [36m@smoke
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7970265Z [39m[1m[37mFeature[22m[39m[26m: [1m[37mVersion Display Verification[22m[39m[26m  # [1m[30mtests/features/test_version_display.feature[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7971119Z     [37mAs a user
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7971479Z     I want to see version information in the header
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7972091Z     So that I can identify the current application version[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7972719Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7973151Z     [1m[37mScenario[22m[39m[26m: [1m[37mVerify Version Information in Header[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7973601Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7973977Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7974258Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7974495Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7974783Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7975094Z         [1m[33mThen I see version information in the header[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7975450Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7975765Z [A[K        [1m[32mThen I see version information in the header[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7976129Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7976523Z         [1m[33mAnd I do not see version information in the statistics line[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7976947Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7977365Z [A[K        [1m[32mAnd I do not see version information in the statistics line[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7978000Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7978432Z     [1m[37mScenario[22m[39m[26m: [1m[37mVerify Statistics Line Without Version[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7978882Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7979090Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7979350Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7979575Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7979844Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7980095Z         [1m[33mThen I see the statistics line[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7980394Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7980665Z [A[K        [1m[32mThen I see the statistics line[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7980974Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7981371Z         [1m[33mAnd the statistics line does not contain version information[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7981810Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7982208Z [A[K        [1m[32mAnd the statistics line does not contain version information[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7982663Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7982796Z [36m@smoke
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7983680Z [39m[1m[37mFeature[22m[39m[26m: [1m[37mToolbar Refresh Functionality[22m[39m[26m  # [1m[30mtests/features/test_toolbar_refresh.feature[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7984705Z     [37mAs a user
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7985048Z     I want to refresh the artifacts in the search view
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7985678Z     So that I can see the latest data without reloading the page[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7986046Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7986531Z     [1m[37mScenario[22m[39m[26m: [1m[37mRefresh artifacts using toolbar refresh button[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7987016Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7987228Z         [1m[33mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7987499Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7987722Z [A[K        [1m[32mGiven I go to home[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7987995Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7988248Z         [1m[33mAnd I see artifacts displayed[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7988743Z ✅ Found 2 artifacts displayed
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7988960Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7989239Z [A[K        [1m[32mAnd I see artifacts displayed[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7989552Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7989879Z         [1m[33mWhen I click the refresh button in the toolbar[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7990255Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7990590Z [A[K        [1m[32mWhen I click the refresh button in the toolbar[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7990970Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7991267Z         [1m[33mThen the artifacts should be refreshed[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7991869Z ✅ Artifacts refreshed successfully (2 artifacts visible)
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7992202Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7992506Z [A[K        [1m[32mThen the artifacts should be refreshed[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7992849Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7993101Z         [1m[33mAnd I should see the latest data[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7993594Z ✅ Latest data is displayed
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7993822Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7994367Z [A[K        [1m[32mAnd I should see the latest data[22m[39m[26m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7994865Z 
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7995379Z [1m[37m8 features ([22m[39m[1m[32m6 passed[22m[39m[1m[37m, [22m[39m[1m[31m2 failed[22m[39m[1m[37m)[22m[39m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7996401Z [1m[37m13 scenarios ([22m[39m[1m[32m11 passed[22m[39m[1m[37m, [22m[39m[1m[31m2 failed[22m[39m[1m[37m)[22m[39m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7997548Z [1m[37m79 steps ([22m[39m[1m[32m71 passed[22m[39m[1m[37m, [22m[39m[1m[31m2 failed[22m[39m[1m[37m, [22m[39m[36m6 skipped[39m[1m[37m)[22m[39m
smoke-tests	Run smoke tests	2025-08-19T18:15:09.7998519Z [36mRun 50eaff1b-103e-40ca-af63-4a6545adcbc3 finished within a minute[39m
smoke-tests	Run smoke tests	2025-08-19T18:15:10.8811639Z ##[error]Process completed with exit code 1.
smoke-tests	Cleanup	﻿2025-08-19T18:15:10.8856560Z ##[group]Run # Stop the server using stored PID
smoke-tests	Cleanup	2025-08-19T18:15:10.8856927Z [36;1m# Stop the server using stored PID[0m
smoke-tests	Cleanup	2025-08-19T18:15:10.8857216Z [36;1mif [ -f /tmp/iflow_server.pid ]; then[0m
smoke-tests	Cleanup	2025-08-19T18:15:10.8857500Z [36;1m  PID=$(cat /tmp/iflow_server.pid)[0m
smoke-tests	Cleanup	2025-08-19T18:15:10.8857772Z [36;1m  kill $PID 2>/dev/null || true[0m
smoke-tests	Cleanup	2025-08-19T18:15:10.8858024Z [36;1m  rm -f /tmp/iflow_server.pid[0m
smoke-tests	Cleanup	2025-08-19T18:15:10.8858248Z [36;1mfi[0m
smoke-tests	Cleanup	2025-08-19T18:15:10.8858411Z [36;1m[0m
smoke-tests	Cleanup	2025-08-19T18:15:10.8858612Z [36;1m# Also try to kill by process name as backup[0m
smoke-tests	Cleanup	2025-08-19T18:15:10.8858930Z [36;1mpkill -f "python -m iflow.web_server" || true[0m
smoke-tests	Cleanup	2025-08-19T18:15:10.8859183Z [36;1m[0m
smoke-tests	Cleanup	2025-08-19T18:15:10.8859365Z [36;1mecho "✅ Cleanup completed"[0m
smoke-tests	Cleanup	2025-08-19T18:15:10.8899227Z shell: /usr/bin/bash -e {0}
smoke-tests	Cleanup	2025-08-19T18:15:10.8899461Z env:
smoke-tests	Cleanup	2025-08-19T18:15:10.8899696Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Cleanup	2025-08-19T18:15:10.8900115Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
smoke-tests	Cleanup	2025-08-19T18:15:10.8900554Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Cleanup	2025-08-19T18:15:10.8900900Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Cleanup	2025-08-19T18:15:10.8901240Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
smoke-tests	Cleanup	2025-08-19T18:15:10.8901590Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
smoke-tests	Cleanup	2025-08-19T18:15:10.8901872Z ##[endgroup]
smoke-tests	Cleanup	2025-08-19T18:15:10.9114005Z ✅ Cleanup completed
smoke-tests	Post Checkout iflow repository	﻿2025-08-19T18:15:10.9193762Z Post job cleanup.
smoke-tests	Post Checkout iflow repository	2025-08-19T18:15:11.0037686Z [command]/usr/bin/git version
smoke-tests	Post Checkout iflow repository	2025-08-19T18:15:11.0081512Z git version 2.50.1
smoke-tests	Post Checkout iflow repository	2025-08-19T18:15:11.0121767Z Temporarily overriding HOME='/home/runner/work/_temp/946d0f05-e188-4453-a924-5aea441d64be' before making global git config changes
smoke-tests	Post Checkout iflow repository	2025-08-19T18:15:11.0123397Z Adding repository directory to the temporary git global config as a safe directory
smoke-tests	Post Checkout iflow repository	2025-08-19T18:15:11.0128745Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/iflow/iflow
smoke-tests	Post Checkout iflow repository	2025-08-19T18:15:11.0180051Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
smoke-tests	Post Checkout iflow repository	2025-08-19T18:15:11.0224137Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
smoke-tests	Post Checkout iflow repository	2025-08-19T18:15:11.0475239Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
smoke-tests	Post Checkout iflow repository	2025-08-19T18:15:11.0502301Z http.https://github.com/.extraheader
smoke-tests	Post Checkout iflow repository	2025-08-19T18:15:11.0516595Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
smoke-tests	Post Checkout iflow repository	2025-08-19T18:15:11.0552486Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
smoke-tests	Complete job	﻿2025-08-19T18:15:11.0924129Z Cleaning up orphan processes
smoke-tests	Complete job	2025-08-19T18:15:11.1214843Z Terminate orphan process: pid (4058) (chromedriver)
smoke-tests	Complete job	2025-08-19T18:15:11.1244856Z Terminate orphan process: pid (4064) (chrome)
smoke-tests	Complete job	2025-08-19T18:15:11.1315314Z Terminate orphan process: pid (4068) (cat)
smoke-tests	Complete job	2025-08-19T18:15:11.1347824Z Terminate orphan process: pid (4069) (cat)
smoke-tests	Complete job	2025-08-19T18:15:11.1440323Z Terminate orphan process: pid (4071) (chrome_crashpad_handler)
smoke-tests	Complete job	2025-08-19T18:15:11.1490925Z Terminate orphan process: pid (4073) (chrome_crashpad_handler)
