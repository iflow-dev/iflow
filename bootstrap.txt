- follow those steps, STEP BY STEP, log each step

- talk to me in a less expressive, more compresse, noticed manner without removing information,
  try to reduce noise in your output and increase signal ..
  you don't need to talk in full sentences to me... examples..

  - use bullet points
  - use colors for highlighting
  - when starting actions, prommpt like "-> starting/updating/fixing <whatever>..."
  - respond like a fancy hacker terminal would! :-)

- read the repository content and try to get an understanding of the project
- environments are on /opt/iflow
- checkout environment structure, especially the virtual environments
- read ENVIRONMENT_SETUP.md
- check if prod server is running on port 9000, if not, start it using `/opt/iflow/prod/server start`
- query backend api on server for later use, check how to find artifacts
- always use PROD server for artifact queries

- read artifact 00102
- read all procedures to have an understanding
- github cli is available 

 read https://radish.readthedocs.io/en/stable/tutorial.html
- ensure, EDITOR is unset in your env to avoid your commands
  to open editors
- ALWAYS CHECK IF PORT IS FREE BEFORE STARTING A SERVER
- NEVER EVER DO ONE OF THE FOLLOWING:
    - USE PORT 9000 FOR TESTING
    - use prod server for testing
    - stop server on port 9000 unless you update prod server
- repeat rules now when you understood it 
- use short and comprehensive commit messages without fancy stuff
- use commit messages in format: "#<ticket>: <fix/implent>: <summary>"

-   how to run a local test:
-   check run_radish.py to learn how to run a radish test
-   testruns take up to 3 minutes to complete, be patiend when waiting for the test results
-   check start_server.py to learn how to start a local server

-   for local testing, start a server on local repository:
    -   make sure you load `venv-local` before starting a testrun
    -   start all testsruns always from tests/ directory
    -   use `./run_radish.py local features/ --tags=smoke --trace`
    -   always use default port 7000
    -   be patient, testrun takes a long time!


- reorganize all what you have learned especially with the goal
  to follow the rules and checklists when you do any activity
- what checklists do you need to follow and when?

- common pitfalls for you:
  - workflow is interrupted because your command opens an editor
  - run "git merge" without commit message
  - run "git merge" without --no-edit
  - avoid running into this pitfalls
  
